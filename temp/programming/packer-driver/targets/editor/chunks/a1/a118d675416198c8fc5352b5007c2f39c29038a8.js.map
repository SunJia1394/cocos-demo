{"version":3,"sources":["file:///Users/sunjia/project/cocos-test/cocos-demo/extensions/live2d_cubismsdk_cocoscreator/static/assets/Core/CubismGeometry.ts"],"names":["CubismBounds","geometry","Vector3","CubismVector3","constructor","cx","cy","cz","hw","hh","hd","center","extents","min","subtract","max","add","contains","point","x","y","z","copyWith","args","equals","other","strictEquals","toAABB","AABB","from6f","fromVector","size","fromAABB","aabb","halfExtents"],"mappings":"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","sourcesContent":["/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { geometry } from 'cc';\r\nimport IStructLike from '../IStructLike';\r\nimport { IVector3, CubismVector3 as Vector3 } from './CubismVector';\r\n\r\n// https://github.com/Unity-Technologies/UnityCsReference/blob/0a2eeb7a72710d89cccdb6aeee8431d27ee99cd1/Runtime/Export/Geometry/Bounds.cs\r\nexport class CubismBounds implements IStructLike<CubismBounds> {\r\n  private readonly cx: number;\r\n  private readonly cy: number;\r\n  private readonly cz: number;\r\n  private readonly hw: number;\r\n  private readonly hh: number;\r\n  private readonly hd: number;\r\n\r\n  public constructor(cx: number, cy: number, cz: number, hw: number, hh: number, hd: number) {\r\n    this.cx = cx;\r\n    this.cy = cy;\r\n    this.cz = cz;\r\n    this.hw = hw;\r\n    this.hh = hh;\r\n    this.hd = hd;\r\n  }\r\n\r\n  public center(): Vector3 {\r\n    return new Vector3(this.cx, this.cy, this.cz);\r\n  }\r\n\r\n  public extents(): Vector3 {\r\n    return new Vector3(this.hw, this.hh, this.hd);\r\n  }\r\n\r\n  public min(): Vector3 {\r\n    return this.center().subtract(this.extents());\r\n  }\r\n\r\n  public max(): Vector3 {\r\n    return this.center().add(this.extents());\r\n  }\r\n\r\n  public contains(point: IVector3): boolean {\r\n    const min = this.min();\r\n    const max = this.max();\r\n    return (\r\n      max.x >= point.x &&\r\n      max.y >= point.y &&\r\n      max.z >= point.z &&\r\n      min.x <= point.x &&\r\n      min.y <= point.y &&\r\n      min.z <= point.z\r\n    );\r\n  }\r\n\r\n  public copyWith(\r\n    args: { cx?: number; cy?: number; cz?: number; hw?: number; hh?: number; hd?: number } = {}\r\n  ): CubismBounds {\r\n    return new CubismBounds(\r\n      args.cx ?? this.cx,\r\n      args.cy ?? this.cy,\r\n      args.cz ?? this.cz,\r\n      args.hw ?? this.hw,\r\n      args.hh ?? this.hh,\r\n      args.hd ?? this.hd\r\n    );\r\n  }\r\n\r\n  public equals(other: CubismBounds): boolean {\r\n    return this === other\r\n      ? true\r\n      : this.cx === other.cx &&\r\n          this.cy === other.cy &&\r\n          this.cz === other.cz &&\r\n          this.hw === other.hw &&\r\n          this.hh === other.hh &&\r\n          this.hd === other.hd;\r\n  }\r\n\r\n  public strictEquals(other: CubismBounds): boolean {\r\n    return this === other;\r\n  }\r\n\r\n  public toAABB(): geometry.AABB {\r\n    return new geometry.AABB(this.cx, this.cy, this.cz, this.hw, this.hh, this.hd);\r\n  }\r\n\r\n  public static from6f(\r\n    args: { cx?: number; cy?: number; cz?: number; hw?: number; hh?: number; hd?: number } = {}\r\n  ) {\r\n    return new CubismBounds(\r\n      args.cx ?? 0,\r\n      args.cy ?? 0,\r\n      args.cz ?? 0,\r\n      args.hw ?? 0,\r\n      args.hh ?? 0,\r\n      args.hd ?? 0\r\n    );\r\n  }\r\n\r\n  public static fromVector(center: IVector3, size: IVector3) {\r\n    return new CubismBounds(center.x, center.y, center.z, size.x * 0.5, size.y * 0.5, size.z * 0.5);\r\n  }\r\n\r\n  public static fromAABB(aabb: geometry.AABB) {\r\n    return new CubismBounds(\r\n      aabb.center.x,\r\n      aabb.center.y,\r\n      aabb.center.z,\r\n      aabb.halfExtents.x,\r\n      aabb.halfExtents.y,\r\n      aabb.halfExtents.z\r\n    );\r\n  }\r\n}\r\n"]}