{"version":3,"sources":["file:///Users/sunjia/project/cocos/NewProject_1/extensions/live2d_cubismsdk_cocoscreator/static/assets/Framework/MouthMovement/CubismMouthController.ts"],"names":["Component","Enum","CCFloat","_decorator","CubismMouthParameter","CubismParameterBlendMode","CubismUpdateController","CubismUpdateExecutionOrder","CubismParameter","CoreComponentExtensionMethods","CubismParameterExtensionMethods","ComponentExtensionMethods","ICubismUpdatable","ccclass","property","CubismMouthController","type","slide","range","serializable","visible","SYMBOL","_destinations","bindedOnLateUpdate","onLateUpdate","bind","destinations","value","hasUpdateController","_hasUpdateController","refresh","model","findCubismModel","parameters","tags","getComponentsMany","Array","length","i","getComponent","executionOrder","CUBISM_MOUTH_CONTROLLER","needsUpdateOnEditing","deltaTime","enabled","blendToValueArray","blendMode","mouthOpening","start","lateUpdate","Multiply"],"mappings":"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","sourcesContent":["/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { Component, Enum, CCFloat, _decorator } from 'cc';\r\nimport CubismMouthParameter from './CubismMouthParameter';\r\nimport CubismParameterBlendMode from '../CubismParameterBlendMode';\r\nimport CubismUpdateController from '../CubismUpdateController';\r\nimport CubismUpdateExecutionOrder from '../CubismUpdateExecutionOrder';\r\nimport CubismParameter from '../../Core/CubismParameter';\r\nimport CoreComponentExtensionMethods from '../../Core/ComponentExtensionMethods';\r\nimport CubismParameterExtensionMethods from '../CubismParameterExtensionMethods';\r\nimport ComponentExtensionMethods from '../ComponentExtensionMethods';\r\nimport ICubismUpdatable from '../ICubismUpdatable';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('CubismMouthController')\r\nexport default class CubismMouthController extends Component implements ICubismUpdatable {\r\n  @property({ type: Enum(CubismParameterBlendMode) })\r\n  public blendMode: CubismParameterBlendMode = CubismParameterBlendMode.Multiply;\r\n\r\n  @property({ type: CCFloat, slide: true, range: [0.0, 1.0, 0.01] })\r\n  public mouthOpening: number = 1.0;\r\n\r\n  private _destinations: Array<CubismParameter | null> = [];\r\n  private get destinations() {\r\n    return this._destinations;\r\n  }\r\n  private set destinations(value: Array<CubismParameter | null>) {\r\n    this._destinations = value;\r\n  }\r\n\r\n  @property({ serializable: false, visible: false })\r\n  private _hasUpdateController: boolean = false;\r\n  public get hasUpdateController() {\r\n    return this._hasUpdateController;\r\n  }\r\n  public set hasUpdateController(value: boolean) {\r\n    this._hasUpdateController = value;\r\n  }\r\n\r\n  public refresh() {\r\n    const model = CoreComponentExtensionMethods.findCubismModel(this);\r\n\r\n    // Fail silently...\r\n    if (model == null || model.parameters == null) {\r\n      return;\r\n    }\r\n\r\n    // Cache destinations.\r\n    const tags = ComponentExtensionMethods.getComponentsMany(\r\n      model.parameters,\r\n      CubismMouthParameter\r\n    );\r\n\r\n    this.destinations = new Array(tags.length);\r\n\r\n    for (let i = 0; i < tags.length; ++i) {\r\n      this.destinations[i] = tags[i].getComponent(CubismParameter);\r\n    }\r\n\r\n    // Get cubism update controller.\r\n    this.hasUpdateController = this.getComponent(CubismUpdateController) != null;\r\n  }\r\n\r\n  public get executionOrder(): number {\r\n    return CubismUpdateExecutionOrder.CUBISM_MOUTH_CONTROLLER;\r\n  }\r\n\r\n  public get needsUpdateOnEditing(): boolean {\r\n    return false;\r\n  }\r\n\r\n  protected onLateUpdate(deltaTime: number) {\r\n    // Fail silently.\r\n    if (!this.enabled || this.destinations == null) {\r\n      return;\r\n    }\r\n\r\n    // Apply value.\r\n    CubismParameterExtensionMethods.blendToValueArray(\r\n      this.destinations,\r\n      this.blendMode,\r\n      this.mouthOpening\r\n    );\r\n  }\r\n  /** Binded callback function */\r\n  public readonly bindedOnLateUpdate: ICubismUpdatable.CallbackFunction =\r\n    this.onLateUpdate.bind(this);\r\n  /** ICubismUpdatable metadata */\r\n  public readonly [ICubismUpdatable.SYMBOL]: typeof ICubismUpdatable.SYMBOL =\r\n    ICubismUpdatable.SYMBOL;\r\n\r\n  protected start() {\r\n    // Initialize cache.\r\n    this.refresh();\r\n  }\r\n\r\n  protected lateUpdate(deltaTime: number) {\r\n    if (!this.hasUpdateController) {\r\n      this.onLateUpdate(deltaTime);\r\n    }\r\n  }\r\n}\r\n"]}