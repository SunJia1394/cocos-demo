{"version":3,"sources":["file:///Users/sunjia/project/cocos-test/cocos-demo/extensions/live2d_cubismsdk_cocoscreator/static/assets/Framework/MouthMovement/CubismAutoMouthInput.ts"],"names":["Component","CCFloat","_decorator","CubismMouthController","ccclass","property","CubismAutoMouthInput","_Controller","_T","Controller","value","T","resetInEditor","start","getComponent","lateUpdate","deltaTime","Timescale","mouthOpening","Math","abs","sin"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAOSA,MAAAA,S,OAAAA,S;AAAWC,MAAAA,O,OAAAA,O;AAASC,MAAAA,U,OAAAA,U;;AACtBC,MAAAA,qB;;;;;;AARP;AACA;AACA;AACA;AACA;AACA;;;;;OAIM;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBH,U;;yBAGTI,oB,WADpBF,OAAO,CAAC,sBAAD,C,UAELC,QAAQ,CAACJ,OAAD,C,2BAFX,MACqBK,oBADrB,SACkDN,SADlD,CAC4D;AAAA;AAAA;;AAAA;;AAAA,eAIlDO,WAJkD,GAIN,IAJM;AAAA,eAYlDC,EAZkD,GAYrC,CAZqC;AAAA;;AAKpC,YAAVC,UAAU,GAAG;AACvB,iBAAO,KAAKF,WAAZ;AACD;;AACqB,YAAVE,UAAU,CAACC,KAAD,EAAsC;AAC1D,eAAKH,WAAL,GAAmBG,KAAnB;AACD;;AAGY,YAADC,CAAC,GAAG;AACd,iBAAO,KAAKH,EAAZ;AACD;;AACY,YAADG,CAAC,CAACD,KAAD,EAAgB;AAC3B,eAAKF,EAAL,GAAUE,KAAV;AACD;;AAEME,QAAAA,aAAa,GAAG;AACrB,eAAKD,CAAL,GAAS,GAAT;AACD;;AAEDE,QAAAA,KAAK,GAAG;AACN,eAAKJ,UAAL,GAAkB,KAAKK,YAAL;AAAA;AAAA,6DAAlB;AACD;;AAEDC,QAAAA,UAAU,CAACC,SAAD,EAAoB;AAC5B;AACA,cAAI,KAAKP,UAAL,IAAmB,IAAvB,EAA6B;AAC3B;AACD,WAJ2B,CAM5B;;;AACA,eAAKE,CAAL,IAAUK,SAAS,GAAG,KAAKC,SAA3B,CAP4B,CAS5B;;AACA,eAAKR,UAAL,CAAgBS,YAAhB,GAA+BC,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAAS,KAAKV,CAAd,CAAT,CAA/B;AACD;;AAvCyD,O;;;;;iBAE/B,I","sourcesContent":["/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { Component, CCFloat, _decorator } from 'cc';\r\nimport CubismMouthController from './CubismMouthController';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('CubismAutoMouthInput')\r\nexport default class CubismAutoMouthInput extends Component {\r\n  @property(CCFloat)\r\n  public Timescale: number = 10.0;\r\n\r\n  private _Controller: CubismMouthController | null = null;\r\n  private get Controller() {\r\n    return this._Controller;\r\n  }\r\n  private set Controller(value: CubismMouthController | null) {\r\n    this._Controller = value;\r\n  }\r\n\r\n  private _T: number = 0;\r\n  private get T() {\r\n    return this._T;\r\n  }\r\n  private set T(value: number) {\r\n    this._T = value;\r\n  }\r\n\r\n  public resetInEditor() {\r\n    this.T = 0.0;\r\n  }\r\n\r\n  start() {\r\n    this.Controller = this.getComponent(CubismMouthController);\r\n  }\r\n\r\n  lateUpdate(deltaTime: number) {\r\n    // Fail silently.\r\n    if (this.Controller == null) {\r\n      return;\r\n    }\r\n\r\n    // Progress time.\r\n    this.T += deltaTime * this.Timescale;\r\n\r\n    // Evaluate.\r\n    this.Controller.mouthOpening = Math.abs(Math.sin(this.T));\r\n  }\r\n}\r\n"]}