{"version":3,"sources":["file:///Users/sunjia/project/cocos-test/cocos-demo/extensions/live2d_cubismsdk_cocoscreator/static/assets/Framework/CubismMotionApplier.ts"],"names":["ValueCache","getTrackValue","track","time","channel","channels","evaluated","curve","evaluate","Number","NaN","makePath","comp","model","current","node","name","Node","isNode","parent","slice","_decorator","Component","animation","math","ICubismUpdatable","CubismModel","CubismParameter","CubismPart","CubismUpdateExecutionOrder","ccclass","property","requireComponent","constructor","ref","value","calcValue","CubismMotionApplier","AnimationController","serializable","visible","SYMBOL","animCtrl","parameters","Map","parts","bindedOnLateUpdate","onLateUpdate","bind","refresh","getComponent","console","error","enabled","i","length","path","set","valueUpdate","clipStatuses","progress","transProgress","clipStatus","t","clip","duration","tracks","isNaN","setCache","nodePath","compName","propName","isHierarchyAt","parseHierarchyAt","isComponentAt","parseComponentAt","isPropertyAt","parsePropertyAt","prototype","setParameterCache","setPartCache","warn","cache","get","lerp","calcCache","layerWeight","forEach","_key","_map","applyValues","opacity","deltaTime","ctrl","graph","isValid","layerCount","currentStateStatus","getCurrentStateStatus","currentClipStatuses","getCurrentClipStatuses","currentTransition","getCurrentTransition","nextStateStatus","getNextStateStatus","nextClipStatuses","getNextClipStatuses","getLayerWeight","start","lateUpdate","hasUpdateController","executionOrder","CUBISM_MOTION_APPLIER","needsUpdateOnEditing","_hasUpdateController"],"mappings":";;;qNAeMA,U;;;;;;;;AA8PN,WAASC,aAAT,CAAuBC,KAAvB,EAA+CC,IAA/C,EAAqE;AACnE,SAAK,MAAMC,OAAX,IAAsBF,KAAK,CAACG,QAAN,EAAtB,EAAwC;AACtC,YAAMC,SAAS,GAAGF,OAAO,CAACG,KAAR,CAAcC,QAAd,CAAuBL,IAAvB,CAAlB;;AACA,UAAI,OAAOG,SAAP,KAAqB,QAAzB,EAAmC;AACjC,eAAOA,SAAP;AACD;;AACD;AACD;;AACD,WAAOG,MAAM,CAACC,GAAd;AACD;;AAED,WAASC,QAAT,CAAkBC,IAAlB,EAAsDC,KAAtD,EAAkF;AAChF,QAAIC,OAAO,GAAGF,IAAI,CAACG,IAAnB;AACA,QAAIC,IAAI,GAAG,EAAX;;AACA,OAAG;AACDA,MAAAA,IAAI,GAAGF,OAAO,CAACE,IAAR,GAAe,GAAf,GAAqBA,IAA5B;;AACA,UAAI,CAACC,IAAI,CAACC,MAAL,CAAYJ,OAAO,CAACK,MAApB,CAAL,EAAkC;AAChC;AACD;;AACDL,MAAAA,OAAO,GAAGA,OAAO,CAACK,MAAlB;AACD,KAND,QAMSL,OAAO,IAAID,KAAK,CAACE,IAN1B;;AAOA,WAAOC,IAAI,CAACI,KAAL,CAAW,CAAX,EAAc,CAAC,CAAf,CAAP;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA5RQC,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,S,OAAAA,S;AAAWN,MAAAA,I,OAAAA,I;AAAMO,MAAAA,I,OAAAA,I;;AAC1CC,MAAAA,gB;;AACAC,MAAAA,W;;AACAC,MAAAA,e;;AACAC,MAAAA,U;;AACAC,MAAAA,0B;;;;;;AAZP;AACA;AACA;AACA;AACA;AACA;;;;;OAQM;AAAEC,QAAAA,OAAF;AAAWC,QAAAA,QAAX;AAAqBC,QAAAA;AAArB,O,GAA0CX,U;AAE1CrB,MAAAA,U,GAAN,MAAMA,UAAN,CAAyD;AAIhDiC,QAAAA,WAAW,CAACC,GAAD,EAAS;AAAA,eAHpBA,GAGoB;AAAA,eAFpBC,KAEoB,GAFJ1B,MAAM,CAACC,GAEH;AAAA,eADpB0B,SACoB,GADA3B,MAAM,CAACC,GACP;AACzB,eAAKwB,GAAL,GAAWA,GAAX;AACD;;AANsD,O;;yBAYpCG,mB,WAHpBP,OAAO,CAAC,qBAAD,C,UACPE,gBAAgB,CAACT,SAAS,CAACe,mBAAX,C,UAChBN,gBAAgB;AAAA;AAAA,qC,UAoOdD,QAAQ,CAAC;AAAEQ,QAAAA,YAAY,EAAE,IAAhB;AAAsBC,QAAAA,OAAO,EAAE;AAA/B,OAAD,C,uEAYR;AAAA;AAAA,gDAAiBC,M,EAlPpB,MAGqBJ,mBAHrB,SAGiDf,SAHjD,CAGuF;AAAA;AAAA;;AACrF;AADqF,eAE7EoB,QAF6E,GAE5B,IAF4B;;AAIrF;AAJqF,eAK7EC,UAL6E,GAKtB,IAAIC,GAAJ,EALsB;;AAOrF;AAPqF,eAQ7EC,KAR6E,GAQhC,IAAID,GAAJ,EARgC;;AAwNrF;AAxNqF,eAyN9EE,kBAzN8E,GAyNtB,KAAKC,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAzNsB;;AAAA;;AA8OrF;AA9OqF,0BA+OzB;AAAA;AAAA,oDAAiBP,MA/OQ;AAAA;;AAU9EQ,QAAAA,OAAO,GAAS;AACrB,eAAKP,QAAL,GAAgB,KAAKQ,YAAL,CAAkB3B,SAAS,CAACe,mBAA5B,CAAhB;;AACA,cAAI,KAAKI,QAAL,IAAiB,IAArB,EAA2B;AACzBS,YAAAA,OAAO,CAACC,KAAR,CAAc,gCAAd;AACA,iBAAKC,OAAL,GAAe,KAAf;AACA;AACD;;AACD,gBAAMxC,KAAK,GAAG,KAAKqC,YAAL;AAAA;AAAA,yCAAd;;AACA,cAAIrC,KAAK,IAAI,IAAb,EAAmB;AACjBsC,YAAAA,OAAO,CAACC,KAAR,CAAc,wBAAd;AACA,iBAAKC,OAAL,GAAe,KAAf;AACA;AACD;;AAED,gBAAM;AAAEV,YAAAA,UAAF;AAAcE,YAAAA;AAAd,cAAwBhC,KAA9B;;AAEA,cAAI8B,UAAU,IAAI,IAAlB,EAAwB;AACtB,iBAAK,IAAIW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,UAAU,CAACY,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAC1C,oBAAME,IAAI,GAAG7C,QAAQ,CAACgC,UAAU,CAACW,CAAD,CAAX,EAAgBzC,KAAhB,CAArB;AACA,mBAAK8B,UAAL,CAAgBc,GAAhB,CAAoBD,IAApB,EAA0B,IAAIxD,UAAJ,CAAe2C,UAAU,CAACW,CAAD,CAAzB,CAA1B;AACD;AACF;;AACD,cAAIT,KAAK,IAAI,IAAb,EAAmB;AACjB,iBAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,KAAK,CAACU,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,oBAAME,IAAI,GAAG7C,QAAQ,CAACkC,KAAK,CAACS,CAAD,CAAN,EAAWzC,KAAX,CAArB;AACA,mBAAKgC,KAAL,CAAWY,GAAX,CAAeD,IAAf,EAAqB,IAAIxD,UAAJ,CAAe6C,KAAK,CAACS,CAAD,CAApB,CAArB;AACD;AACF;AACF;;AAEOI,QAAAA,WAAW,CACjBC,YADiB,EAEjBC,QAFiB,EAGjBC,aAAqB,GAAG,GAHP,EAIX;AACN,eAAK,MAAMC,UAAX,IAAyBH,YAAzB,EAAuC;AACrC,kBAAMI,CAAC,GAAGD,UAAU,CAACE,IAAX,CAAgBC,QAAhB,GAA2BL,QAArC;;AACA,iBAAK,MAAM1D,KAAX,IAAoB4D,UAAU,CAACE,IAAX,CAAgBE,MAApC,EAA4C;AAC1C,oBAAM/B,KAAK,GAAGlC,aAAa,CAACC,KAAD,EAAQ6D,CAAR,CAA3B;;AACA,kBAAI,CAACtD,MAAM,CAAC0D,KAAP,CAAahC,KAAb,CAAL,EAA0B;AACxB,qBAAKiC,QAAL,CAAclE,KAAd,EAAqBiC,KAArB,EAA4B0B,aAA5B;AACD;AACF;AACF;AACF;;AAEOO,QAAAA,QAAQ,CAAClE,KAAD,EAAyBiC,KAAzB,EAAwC0B,aAAxC,EAAqE;AACnF,cAAIQ,QAAQ,GAAG,EAAf;AAAA,cACEC,QAAQ,GAAG,EADb;AAAA,cAEEC,QAAQ,GAAG,EAFb;;AAIA,eAAK,IAAIjB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGpD,KAAK,CAACsD,IAAN,CAAWD,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAC1C,gBAAIpD,KAAK,CAACsD,IAAN,CAAWgB,aAAX,CAAyBlB,CAAzB,CAAJ,EAAiC;AAC/Be,cAAAA,QAAQ,GAAGnE,KAAK,CAACsD,IAAN,CAAWiB,gBAAX,CAA4BnB,CAA5B,CAAX;AACD,aAFD,MAEO,IAAIpD,KAAK,CAACsD,IAAN,CAAWkB,aAAX,CAAyBpB,CAAzB,CAAJ,EAAiC;AACtCgB,cAAAA,QAAQ,GAAGpE,KAAK,CAACsD,IAAN,CAAWmB,gBAAX,CAA4BrB,CAA5B,CAAX;AACD,aAFM,MAEA,IAAIpD,KAAK,CAACsD,IAAN,CAAWoB,YAAX,CAAwBtB,CAAxB,CAAJ,EAAgC;AACrCiB,cAAAA,QAAQ,GAAGrE,KAAK,CAACsD,IAAN,CAAWqB,eAAX,CAA2BvB,CAA3B,CAAX;AACD;AACF;;AAED,kBAAQgB,QAAR;AACE,iBAAK;AAAA;AAAA,oDAAgBQ,SAAhB,CAA0B9D,IAA/B;AACE,mBAAK+D,iBAAL,CAAuBV,QAAvB,EAAiCE,QAAjC,EAA2CpC,KAA3C,EAAkD0B,aAAlD;AACA;;AACF,iBAAK;AAAA;AAAA,0CAAWiB,SAAX,CAAqB9D,IAA1B;AACE,mBAAKgE,YAAL,CAAkBX,QAAlB,EAA4BE,QAA5B,EAAsCpC,KAAtC,EAA6C0B,aAA7C;AACA;;AACF;AACEV,cAAAA,OAAO,CAAC8B,IAAR,CAAa,0BAAb;AACA;AATJ;AAWD;;AAEOF,QAAAA,iBAAiB,CACvBV,QADuB,EAEvBE,QAFuB,EAGvBpC,KAHuB,EAIvB0B,aAJuB,EAKjB;AACN,cAAIU,QAAQ,IAAI,OAAhB,EAAyB;AACvBpB,YAAAA,OAAO,CAAC8B,IAAR,CAAc,yBAAd;AACA;AACD;;AACD,gBAAMC,KAAK,GAAG,KAAKvC,UAAL,CAAgBwC,GAAhB,CAAoBd,QAApB,CAAd;;AACA,cAAIa,KAAK,IAAI,IAAb,EAAmB;AACjB;AACA;AACD;;AACD,cAAIzE,MAAM,CAAC0D,KAAP,CAAae,KAAK,CAAC9C,SAAnB,CAAJ,EAAmC;AACjC8C,YAAAA,KAAK,CAAC9C,SAAN,GAAkBD,KAAlB;AACD,WAFD,MAEO;AACL+C,YAAAA,KAAK,CAAC9C,SAAN,GAAkBZ,IAAI,CAAC4D,IAAL,CAAUF,KAAK,CAAC9C,SAAhB,EAA2BD,KAA3B,EAAkC0B,aAAlC,CAAlB;AACD;AACF;;AAEOmB,QAAAA,YAAY,CAClBX,QADkB,EAElBE,QAFkB,EAGlBpC,KAHkB,EAIlB0B,aAJkB,EAKZ;AACN,cAAIU,QAAQ,IAAI,SAAhB,EAA2B;AACzBpB,YAAAA,OAAO,CAAC8B,IAAR,CAAc,yBAAd;AACA;AACD;;AACD,gBAAMC,KAAK,GAAG,KAAKrC,KAAL,CAAWsC,GAAX,CAAed,QAAf,CAAd;;AACA,cAAIa,KAAK,IAAI,IAAb,EAAmB;AACjB;AACA;AACD;;AACD,cAAIzE,MAAM,CAAC0D,KAAP,CAAae,KAAK,CAAC9C,SAAnB,CAAJ,EAAmC;AACjC8C,YAAAA,KAAK,CAAC9C,SAAN,GAAkBD,KAAlB;AACD,WAFD,MAEO;AACL+C,YAAAA,KAAK,CAAC9C,SAAN,GAAkBZ,IAAI,CAAC4D,IAAL,CAAUF,KAAK,CAAC9C,SAAhB,EAA2BD,KAA3B,EAAkC0B,aAAlC,CAAlB;AACD;AACF;;AAEOwB,QAAAA,SAAS,CAACC,WAAD,EAA4B;AAC3C,eAAK3C,UAAL,CAAgB4C,OAAhB,CAAwB,CAACL,KAAD,EAAQM,IAAR,EAAcC,IAAd,KAAuB;AAC7C,gBAAIhF,MAAM,CAAC0D,KAAP,CAAae,KAAK,CAAC/C,KAAnB,CAAJ,EAA+B;AAC7B+C,cAAAA,KAAK,CAAC/C,KAAN,GAAc+C,KAAK,CAAC9C,SAApB;AACD,aAFD,MAEO,IAAI,CAAC3B,MAAM,CAAC0D,KAAP,CAAae,KAAK,CAAC9C,SAAnB,CAAL,EAAoC;AACzC8C,cAAAA,KAAK,CAAC/C,KAAN,GAAcX,IAAI,CAAC4D,IAAL,CAAUF,KAAK,CAAC/C,KAAhB,EAAuB+C,KAAK,CAAC9C,SAA7B,EAAwCkD,WAAxC,CAAd;AACD;;AACDJ,YAAAA,KAAK,CAAC9C,SAAN,GAAkB3B,MAAM,CAACC,GAAzB;AACD,WAPD;AAQA,eAAKmC,KAAL,CAAW0C,OAAX,CAAmB,CAACL,KAAD,EAAQM,IAAR,EAAcC,IAAd,KAAuB;AACxC,gBAAIhF,MAAM,CAAC0D,KAAP,CAAae,KAAK,CAAC/C,KAAnB,CAAJ,EAA+B;AAC7B+C,cAAAA,KAAK,CAAC/C,KAAN,GAAc+C,KAAK,CAAC9C,SAApB;AACD,aAFD,MAEO,IAAI,CAAC3B,MAAM,CAAC0D,KAAP,CAAae,KAAK,CAAC9C,SAAnB,CAAL,EAAoC;AACzC8C,cAAAA,KAAK,CAAC/C,KAAN,GAAcX,IAAI,CAAC4D,IAAL,CAAUF,KAAK,CAAC/C,KAAhB,EAAuB+C,KAAK,CAAC9C,SAA7B,EAAwCkD,WAAxC,CAAd;AACD;;AACDJ,YAAAA,KAAK,CAAC9C,SAAN,GAAkB3B,MAAM,CAACC,GAAzB;AACD,WAPD;AAQD;;AAEOgF,QAAAA,WAAW,GAAS;AAC1B,eAAK/C,UAAL,CAAgB4C,OAAhB,CAAwB,CAACL,KAAD,EAAQM,IAAR,EAAcC,IAAd,KAAuB;AAC7C,gBAAI,CAAChF,MAAM,CAAC0D,KAAP,CAAae,KAAK,CAAC/C,KAAnB,CAAL,EAAgC;AAC9B+C,cAAAA,KAAK,CAAChD,GAAN,CAAUC,KAAV,GAAkB+C,KAAK,CAAC/C,KAAxB;AACD;;AACD+C,YAAAA,KAAK,CAAC/C,KAAN,GAAc1B,MAAM,CAACC,GAArB;AACD,WALD;AAMA,eAAKmC,KAAL,CAAW0C,OAAX,CAAmB,CAACL,KAAD,EAAQM,IAAR,EAAcC,IAAd,KAAuB;AACxC,gBAAI,CAAChF,MAAM,CAAC0D,KAAP,CAAae,KAAK,CAAC/C,KAAnB,CAAL,EAAgC;AAC9B+C,cAAAA,KAAK,CAAChD,GAAN,CAAUyD,OAAV,GAAoBT,KAAK,CAAC/C,KAA1B;AACD;;AACD+C,YAAAA,KAAK,CAAC/C,KAAN,GAAc1B,MAAM,CAACC,GAArB;AACD,WALD;AAMD;;AAEOqC,QAAAA,YAAY,CAAC6C,SAAD,EAA0B;AAC5C,gBAAM;AAAElD,YAAAA,QAAQ,EAAEmD;AAAZ,cAAqB,IAA3B;;AACA,cAAIA,IAAI,IAAI,IAAZ,EAAkB;AAChB;AACD;;AACD,cAAIA,IAAI,CAACC,KAAL,IAAc,IAAlB,EAAwB;AACtB;AACD;;AACD,cAAI,CAACD,IAAI,CAACE,OAAV,EAAmB;AACjB5C,YAAAA,OAAO,CAAC8B,IAAR,CAAa,8BAAb;AACA;AACD;;AAED,eAAK,IAAI3B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuC,IAAI,CAACG,UAAzB,EAAqC1C,CAAC,EAAtC,EAA0C;AACxC,kBAAM2C,kBAAkB,GAAGJ,IAAI,CAACK,qBAAL,CAA2B5C,CAA3B,CAA3B;;AACA,gBAAI2C,kBAAkB,IAAI,IAA1B,EAAgC;AAC9B9C,cAAAA,OAAO,CAAC8B,IAAR,CAAa,6BAAb;AACA;AACD;;AACD,kBAAMkB,mBAAmB,GAAGN,IAAI,CAACO,sBAAL,CAA4B9C,CAA5B,CAA5B;AACA,iBAAKI,WAAL,CAAiByC,mBAAjB,EAAsCF,kBAAkB,CAACrC,QAAzD;AAEA,kBAAMyC,iBAAiB,GAAGR,IAAI,CAACS,oBAAL,CAA0BhD,CAA1B,CAA1B,CATwC,CASgB;;AACxD,gBAAI+C,iBAAiB,IAAI,IAAzB,EAA+B;AAC7B,oBAAME,eAAe,GAAGV,IAAI,CAACW,kBAAL,CAAwBlD,CAAxB,CAAxB;;AACA,kBAAIiD,eAAe,IAAI,IAAvB,EAA6B;AAC3BpD,gBAAAA,OAAO,CAAC8B,IAAR,CAAa,0BAAb;AACD,eAFD,MAEO;AACL,sBAAMpB,aAAa,GACjBwC,iBAAiB,CAACpC,QAAlB,IAA8B,CAA9B,GACI,GADJ,GAEIoC,iBAAiB,CAAClG,IAAlB,GAAyBkG,iBAAiB,CAACpC,QAHjD;AAIA,sBAAMwC,gBAAgB,GAAGZ,IAAI,CAACa,mBAAL,CAAyBpD,CAAzB,CAAzB;AACA,qBAAKI,WAAL,CAAiB+C,gBAAjB,EAAmCF,eAAe,CAAC3C,QAAnD,EAA6DC,aAA7D;AACD;AACF;;AACD,iBAAKwB,SAAL,CAAeQ,IAAI,CAACc,cAAL,CAAoBrD,CAApB,CAAf;AACD;;AACD,eAAKoC,WAAL;AACD;AAED;;;AACUkB,QAAAA,KAAK,GAAG;AAChB;AACA,eAAK3D,OAAL;AACD;AAED;;;AACU4D,QAAAA,UAAU,CAACjB,SAAD,EAAoB;AACtC,cAAI,CAAC,KAAKkB,mBAAV,EAA+B;AAC7B,iBAAK/D,YAAL,CAAkB6C,SAAlB;AACD;AACF;;AAKwB,YAAdmB,cAAc,GAAW;AAClC,iBAAO;AAAA;AAAA,wEAA2BC,qBAAlC;AACD;;AAE8B,YAApBC,oBAAoB,GAAY;AACzC,iBAAO,KAAP;AACD;;AAKD;AAC8B,YAAnBH,mBAAmB,GAAG;AAC/B,iBAAO,KAAKI,oBAAZ;AACD;;AAC6B,YAAnBJ,mBAAmB,CAAC3E,KAAD,EAAiB;AAC7C,eAAK+E,oBAAL,GAA4B/E,KAA5B;AACD;;AA5OoF,O;;;;;iBAoO7C,K","sourcesContent":["/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { _decorator, Component, animation, Node, math } from 'cc';\r\nimport ICubismUpdatable from './ICubismUpdatable';\r\nimport CubismModel from '../Core/CubismModel';\r\nimport CubismParameter from '../Core/CubismParameter';\r\nimport CubismPart from '../Core/CubismPart';\r\nimport CubismUpdateExecutionOrder from './CubismUpdateExecutionOrder';\r\nconst { ccclass, property, requireComponent } = _decorator;\r\n\r\nclass ValueCache<T extends CubismParameter | CubismPart> {\r\n  public ref: T;\r\n  public value: number = Number.NaN;\r\n  public calcValue: number = Number.NaN;\r\n  public constructor(ref: T) {\r\n    this.ref = ref;\r\n  }\r\n}\r\n\r\n@ccclass('CubismMotionApplier')\r\n@requireComponent(animation.AnimationController)\r\n@requireComponent(CubismModel)\r\nexport default class CubismMotionApplier extends Component implements ICubismUpdatable {\r\n  /** AnimationController cache. */\r\n  private animCtrl: animation.AnimationController | null = null;\r\n\r\n  /** Parameters cache. */\r\n  private parameters: Map<string, ValueCache<CubismParameter>> = new Map();\r\n\r\n  /** Parts cache. */\r\n  private parts: Map<string, ValueCache<CubismPart>> = new Map();\r\n\r\n  public refresh(): void {\r\n    this.animCtrl = this.getComponent(animation.AnimationController);\r\n    if (this.animCtrl == null) {\r\n      console.error('Not found AnimationController.');\r\n      this.enabled = false;\r\n      return;\r\n    }\r\n    const model = this.getComponent(CubismModel);\r\n    if (model == null) {\r\n      console.error('Not found CubismModel.');\r\n      this.enabled = false;\r\n      return;\r\n    }\r\n\r\n    const { parameters, parts } = model;\r\n\r\n    if (parameters != null) {\r\n      for (let i = 0; i < parameters.length; i++) {\r\n        const path = makePath(parameters[i], model);\r\n        this.parameters.set(path, new ValueCache(parameters[i]));\r\n      }\r\n    }\r\n    if (parts != null) {\r\n      for (let i = 0; i < parts.length; i++) {\r\n        const path = makePath(parts[i], model);\r\n        this.parts.set(path, new ValueCache(parts[i]));\r\n      }\r\n    }\r\n  }\r\n\r\n  private valueUpdate(\r\n    clipStatuses: Iterable<Readonly<animation.ClipStatus>>,\r\n    progress: number,\r\n    transProgress: number = 1.0\r\n  ): void {\r\n    for (const clipStatus of clipStatuses) {\r\n      const t = clipStatus.clip.duration * progress;\r\n      for (const track of clipStatus.clip.tracks) {\r\n        const value = getTrackValue(track, t);\r\n        if (!Number.isNaN(value)) {\r\n          this.setCache(track, value, transProgress);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private setCache(track: animation.Track, value: number, transProgress: number): void {\r\n    let nodePath = '',\r\n      compName = '',\r\n      propName = '';\r\n\r\n    for (let i = 0; i < track.path.length; i++) {\r\n      if (track.path.isHierarchyAt(i)) {\r\n        nodePath = track.path.parseHierarchyAt(i);\r\n      } else if (track.path.isComponentAt(i)) {\r\n        compName = track.path.parseComponentAt(i);\r\n      } else if (track.path.isPropertyAt(i)) {\r\n        propName = track.path.parsePropertyAt(i);\r\n      }\r\n    }\r\n\r\n    switch (compName) {\r\n      case CubismParameter.prototype.name:\r\n        this.setParameterCache(nodePath, propName, value, transProgress);\r\n        break;\r\n      case CubismPart.prototype.name:\r\n        this.setPartCache(nodePath, propName, value, transProgress);\r\n        break;\r\n      default:\r\n        console.warn('Not supported component.');\r\n        break;\r\n    }\r\n  }\r\n\r\n  private setParameterCache(\r\n    nodePath: string,\r\n    propName: string,\r\n    value: number,\r\n    transProgress: number\r\n  ): void {\r\n    if (propName != 'value') {\r\n      console.warn(`Not supported property.`);\r\n      return;\r\n    }\r\n    const cache = this.parameters.get(nodePath);\r\n    if (cache == null) {\r\n      // console.warn(`Not found node. (${nodePath})`);\r\n      return;\r\n    }\r\n    if (Number.isNaN(cache.calcValue)) {\r\n      cache.calcValue = value;\r\n    } else {\r\n      cache.calcValue = math.lerp(cache.calcValue, value, transProgress);\r\n    }\r\n  }\r\n\r\n  private setPartCache(\r\n    nodePath: string,\r\n    propName: string,\r\n    value: number,\r\n    transProgress: number\r\n  ): void {\r\n    if (propName != 'opacity') {\r\n      console.warn(`Not supported property.`);\r\n      return;\r\n    }\r\n    const cache = this.parts.get(nodePath);\r\n    if (cache == null) {\r\n      // console.warn(`Not found node. (${nodePath})`);\r\n      return;\r\n    }\r\n    if (Number.isNaN(cache.calcValue)) {\r\n      cache.calcValue = value;\r\n    } else {\r\n      cache.calcValue = math.lerp(cache.calcValue, value, transProgress);\r\n    }\r\n  }\r\n\r\n  private calcCache(layerWeight: number): void {\r\n    this.parameters.forEach((cache, _key, _map) => {\r\n      if (Number.isNaN(cache.value)) {\r\n        cache.value = cache.calcValue;\r\n      } else if (!Number.isNaN(cache.calcValue)) {\r\n        cache.value = math.lerp(cache.value, cache.calcValue, layerWeight);\r\n      }\r\n      cache.calcValue = Number.NaN;\r\n    });\r\n    this.parts.forEach((cache, _key, _map) => {\r\n      if (Number.isNaN(cache.value)) {\r\n        cache.value = cache.calcValue;\r\n      } else if (!Number.isNaN(cache.calcValue)) {\r\n        cache.value = math.lerp(cache.value, cache.calcValue, layerWeight);\r\n      }\r\n      cache.calcValue = Number.NaN;\r\n    });\r\n  }\r\n\r\n  private applyValues(): void {\r\n    this.parameters.forEach((cache, _key, _map) => {\r\n      if (!Number.isNaN(cache.value)) {\r\n        cache.ref.value = cache.value;\r\n      }\r\n      cache.value = Number.NaN;\r\n    });\r\n    this.parts.forEach((cache, _key, _map) => {\r\n      if (!Number.isNaN(cache.value)) {\r\n        cache.ref.opacity = cache.value;\r\n      }\r\n      cache.value = Number.NaN;\r\n    });\r\n  }\r\n\r\n  private onLateUpdate(deltaTime: number): void {\r\n    const { animCtrl: ctrl } = this;\r\n    if (ctrl == null) {\r\n      return;\r\n    }\r\n    if (ctrl.graph == null) {\r\n      return;\r\n    }\r\n    if (!ctrl.isValid) {\r\n      console.warn('AnimationController invalid.');\r\n      return;\r\n    }\r\n\r\n    for (let i = 0; i < ctrl.layerCount; i++) {\r\n      const currentStateStatus = ctrl.getCurrentStateStatus(i);\r\n      if (currentStateStatus == null) {\r\n        console.warn('CurrentStateStatus is null.');\r\n        continue;\r\n      }\r\n      const currentClipStatuses = ctrl.getCurrentClipStatuses(i);\r\n      this.valueUpdate(currentClipStatuses, currentStateStatus.progress);\r\n\r\n      const currentTransition = ctrl.getCurrentTransition(i); // 遷移中なら有効な値\r\n      if (currentTransition != null) {\r\n        const nextStateStatus = ctrl.getNextStateStatus(i);\r\n        if (nextStateStatus == null) {\r\n          console.warn('NextStateStatus is null.');\r\n        } else {\r\n          const transProgress =\r\n            currentTransition.duration == 0\r\n              ? 1.0\r\n              : currentTransition.time / currentTransition.duration;\r\n          const nextClipStatuses = ctrl.getNextClipStatuses(i);\r\n          this.valueUpdate(nextClipStatuses, nextStateStatus.progress, transProgress);\r\n        }\r\n      }\r\n      this.calcCache(ctrl.getLayerWeight(i));\r\n    }\r\n    this.applyValues();\r\n  }\r\n\r\n  /** Called by Cocos Creator. Makes sure cache is initialized. */\r\n  protected start() {\r\n    // Initialize cache.\r\n    this.refresh();\r\n  }\r\n\r\n  /** Called by Cocos Creator. Updates controller. */\r\n  protected lateUpdate(deltaTime: number) {\r\n    if (!this.hasUpdateController) {\r\n      this.onLateUpdate(deltaTime);\r\n    }\r\n  }\r\n\r\n  /** ICubismUpdatable Binded callback function. */\r\n  public bindedOnLateUpdate: ICubismUpdatable.CallbackFunction = this.onLateUpdate.bind(this);\r\n\r\n  public get executionOrder(): number {\r\n    return CubismUpdateExecutionOrder.CUBISM_MOTION_APPLIER;\r\n  }\r\n\r\n  public get needsUpdateOnEditing(): boolean {\r\n    return false;\r\n  }\r\n\r\n  @property({ serializable: true, visible: false })\r\n  private _hasUpdateController: boolean = false;\r\n\r\n  /** Model has update controller component. */\r\n  public get hasUpdateController() {\r\n    return this._hasUpdateController;\r\n  }\r\n  public set hasUpdateController(value: boolean) {\r\n    this._hasUpdateController = value;\r\n  }\r\n\r\n  /** ICubismUpdatable metadata */\r\n  [ICubismUpdatable.SYMBOL]: typeof ICubismUpdatable.SYMBOL = ICubismUpdatable.SYMBOL;\r\n}\r\n\r\nfunction getTrackValue(track: animation.Track, time: number): number {\r\n  for (const channel of track.channels()) {\r\n    const evaluated = channel.curve.evaluate(time);\r\n    if (typeof evaluated === 'number') {\r\n      return evaluated;\r\n    }\r\n    break;\r\n  }\r\n  return Number.NaN;\r\n}\r\n\r\nfunction makePath(comp: CubismParameter | CubismPart, model: CubismModel): string {\r\n  let current = comp.node;\r\n  let name = '';\r\n  do {\r\n    name = current.name + '/' + name;\r\n    if (!Node.isNode(current.parent)) {\r\n      break;\r\n    }\r\n    current = current.parent;\r\n  } while (current != model.node);\r\n  return name.slice(0, -1);\r\n}\r\n"]}