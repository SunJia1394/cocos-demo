{"version":3,"sources":["file:///Users/sunjia/project/cocos-test/cocos-demo/extensions/live2d_cubismsdk_cocoscreator/static/assets/Framework/MotionFade/CubismFadeMotionData.ts"],"names":["isString","value","isNumber","asArray","src","isTypeFunc","Array","isArray","undefined","every","Asset","CCString","CCFloat","_decorator","CubismMotion3Json","CubismSerializableCurve","CubismSerializableKeyFrame","ccclass","property","CubismFadeMotionData","onLoaded","internalConvertToCurves","constructor","motionName","fadeInTime","fadeOutTime","parameterIds","internalParameterCurves","parameterFadeInTimes","parameterFadeOutTimes","motionLength","parameterCurves","length","iCurves","oCurves","i","element","toRealCurve","createInstance","motion3Json","shouldImportAsOriginalWorkflow","isCallFromModelJson","fadeMotion","curveCount","curves","toSetInstance","isCallFormModelJson","meta","jsonCurves","curve","target","id","keys","convertCurveSegmentsToKeyframes","segments","j","t","v","keyFrame","leftTangent","leftTangentWeight","rightTangent","rightTangentWeight","setKeyFrame","deserializeFromJson","json","CubismSerializableCurves","instantiateFromJson","instance"],"mappings":"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","sourcesContent":["/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { Asset, CCString, CCFloat, RealCurve, _decorator, RealKeyframeValue, math } from 'cc';\r\nimport CubismMotion3Json from '../Json/CubismMotion3Json';\r\nimport CubismSerializableCurve from './CubismSerializableCurve';\r\nimport CubismSerializableKeyFrame from './CubismSerializableKeyFrame';\r\nconst { ccclass, property } = _decorator;\r\n\r\n/** from ScriptableObject */\r\n@ccclass('CubismFadeMotionData')\r\nexport default class CubismFadeMotionData extends Asset {\r\n  /** Name of motion. */\r\n  @property(CCString)\r\n  public motionName: string;\r\n\r\n  /** Time to fade in. */\r\n  @property(CCFloat)\r\n  public fadeInTime: number;\r\n\r\n  /** Time to fade out. */\r\n  @property(CCFloat)\r\n  public fadeOutTime: number;\r\n\r\n  /** Parameter ids. */\r\n  @property([CCString])\r\n  public parameterIds: string[];\r\n\r\n  /** Parameter curves. */\r\n  public parameterCurves: RealCurve[];\r\n\r\n  @property([CubismSerializableCurve])\r\n  private internalParameterCurves: CubismSerializableCurve[];\r\n\r\n  /** Fade in time parameters. */\r\n  @property([CCFloat])\r\n  public parameterFadeInTimes: number[];\r\n\r\n  /** Fade out time parameters. */\r\n  @property([CCFloat])\r\n  public parameterFadeOutTimes: number[];\r\n\r\n  /** Motion length. */\r\n  @property(CCFloat)\r\n  public motionLength: number;\r\n\r\n  public onLoaded() {\r\n    this.internalConvertToCurves();\r\n  }\r\n\r\n  public constructor(\r\n    motionName?: string,\r\n    fadeInTime?: number,\r\n    fadeOutTime?: number,\r\n    parameterIds?: string[],\r\n    internalParameterCurves?: CubismSerializableCurve[],\r\n    parameterFadeInTimes?: number[],\r\n    parameterFadeOutTimes?: number[],\r\n    motionLength?: number\r\n  ) {\r\n    super();\r\n    this.motionName = motionName ?? '';\r\n    this.fadeInTime = fadeInTime ?? 0;\r\n    this.fadeOutTime = fadeOutTime ?? 0;\r\n    this.parameterIds = parameterIds ?? new Array(0);\r\n    this.internalParameterCurves = internalParameterCurves ?? new Array(0);\r\n    this.parameterCurves = new Array(this.internalParameterCurves.length);\r\n    this.parameterFadeInTimes = parameterFadeInTimes ?? new Array(0);\r\n    this.parameterFadeOutTimes = parameterFadeOutTimes ?? new Array(0);\r\n    this.motionLength = motionLength ?? 0;\r\n    this.internalConvertToCurves();\r\n  }\r\n\r\n  private internalConvertToCurves() {\r\n    const { internalParameterCurves: iCurves } = this;\r\n    const oCurves = new Array<RealCurve>(iCurves.length);\r\n    for (let i = 0; i < iCurves.length; i++) {\r\n      const element = iCurves[i];\r\n      oCurves[i] = element.toRealCurve();\r\n    }\r\n    this.parameterCurves = oCurves;\r\n  }\r\n\r\n  /**\r\n   * Create CubismFadeMotionData from CubismMotion3Json.\r\n   * @param motion3Json Motion3json as the creator.\r\n   * @param motionName Motion name of interest.\r\n   * @param motionLength Length of target motion.\r\n   * @param shouldImportAsOriginalWorkflow Whether the original work flow or not.\r\n   * @param isCallFromModelJson Whether it is a call from the model json.\r\n   * @returns Fade data created based on motion3json.\r\n   */\r\n  public static createInstance(\r\n    motion3Json: CubismMotion3Json,\r\n    motionName: string,\r\n    motionLength: number,\r\n    shouldImportAsOriginalWorkflow: boolean = false,\r\n    isCallFromModelJson: boolean = false\r\n  ): CubismFadeMotionData {\r\n    const fadeMotion = new CubismFadeMotionData();\r\n    const curveCount = motion3Json.curves.length;\r\n    fadeMotion.parameterIds = new Array<string>(curveCount);\r\n    fadeMotion.parameterFadeInTimes = new Array<number>(curveCount);\r\n    fadeMotion.parameterFadeOutTimes = new Array<number>(curveCount);\r\n    fadeMotion.parameterCurves = new Array<RealCurve>(curveCount);\r\n\r\n    return this.toSetInstance(\r\n      fadeMotion,\r\n      motion3Json,\r\n      motionName,\r\n      motionLength,\r\n      shouldImportAsOriginalWorkflow,\r\n      isCallFromModelJson\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Put motion3json's fade information back into fade motion data.\r\n   * @param fadeMotion Instance containing fade information.\r\n   * @param motion3Json Target motion3json.\r\n   * @param motionName Motion name of interest.\r\n   * @param motionLength Motion length.\r\n   * @param shouldImportAsOriginalWorkflow Whether the original work flow or not.\r\n   * @param isCallFormModelJson Whether it is a call from the model json.\r\n   * @returns Fade data created based on fademotiondata.\r\n   */\r\n  public static toSetInstance(\r\n    fadeMotion: CubismFadeMotionData,\r\n    motion3Json: CubismMotion3Json,\r\n    motionName: string,\r\n    motionLength: number,\r\n    shouldImportAsOriginalWorkflow: boolean = false,\r\n    isCallFormModelJson: boolean = false\r\n  ): CubismFadeMotionData {\r\n    fadeMotion.motionName = motionName;\r\n    fadeMotion.motionLength = motionLength;\r\n    fadeMotion.fadeInTime = motion3Json.meta.fadeInTime < 0.0 ? 1.0 : motion3Json.meta.fadeInTime;\r\n    fadeMotion.fadeOutTime =\r\n      motion3Json.meta.fadeOutTime < 0.0 ? 1.0 : motion3Json.meta.fadeOutTime;\r\n\r\n    const { curves: jsonCurves } = motion3Json;\r\n    const {\r\n      parameterIds,\r\n      parameterFadeInTimes,\r\n      parameterFadeOutTimes,\r\n      parameterCurves,\r\n      internalParameterCurves,\r\n    } = fadeMotion;\r\n\r\n    if (parameterIds != null && parameterFadeInTimes != null && parameterFadeOutTimes != null) {\r\n      parameterCurves.length =\r\n        parameterCurves.length < jsonCurves.length ? jsonCurves.length : parameterCurves.length;\r\n      internalParameterCurves.length =\r\n        internalParameterCurves.length < jsonCurves.length\r\n          ? jsonCurves.length\r\n          : internalParameterCurves.length;\r\n      for (let i = 0; i < jsonCurves.length; i++) {\r\n        const curve = jsonCurves[i];\r\n\r\n        // In original workflow mode, skip add part opacity curve when call not from model3.json.\r\n        if (\r\n          curve.target == 'PartOpacity' &&\r\n          shouldImportAsOriginalWorkflow &&\r\n          !isCallFormModelJson\r\n        ) {\r\n          continue;\r\n        }\r\n\r\n        parameterIds[i] = curve.id;\r\n        parameterFadeInTimes[i] = curve.fadeInTime < 0.0 ? -1.0 : curve.fadeInTime;\r\n        parameterFadeOutTimes[i] = curve.fadeOutTime < 0.0 ? -1.0 : curve.fadeOutTime;\r\n        const keys = CubismMotion3Json.convertCurveSegmentsToKeyframes(curve.segments);\r\n        internalParameterCurves[i] = new CubismSerializableCurve(keys.length);\r\n        for (let j = 0; j < keys.length; j++) {\r\n          const { 0: t, 1: v } = keys[j];\r\n          const keyFrame = new CubismSerializableKeyFrame(\r\n            t,\r\n            v.value,\r\n            v.leftTangent,\r\n            v.leftTangentWeight,\r\n            v.rightTangent,\r\n            v.rightTangentWeight\r\n          );\r\n          internalParameterCurves[i].setKeyFrame(j, keyFrame);\r\n        }\r\n      }\r\n    }\r\n    fadeMotion.onLoaded();\r\n    return fadeMotion;\r\n  }\r\n\r\n  public static deserializeFromJson(json: any): CubismFadeMotionData | undefined {\r\n    const motionName = json.motionName;\r\n    if (!isString(motionName)) {\r\n      return undefined;\r\n    }\r\n    const fadeInTime = json.fadeInTime;\r\n    if (!isNumber(fadeInTime)) {\r\n      return undefined;\r\n    }\r\n    const fadeOutTime = json.fadeOutTime;\r\n    if (!isNumber(fadeOutTime)) {\r\n      return undefined;\r\n    }\r\n    const parameterIds = asArray<string>(json.parameterIds, isString);\r\n    if (!parameterIds) {\r\n      return undefined;\r\n    }\r\n    const internalParameterCurves = CubismSerializableCurves.instantiateFromJson(\r\n      json.internalParameterCurves\r\n    );\r\n    if (!internalParameterCurves) {\r\n      return undefined;\r\n    }\r\n    const parameterFadeInTimes = asArray<number>(json.parameterFadeInTimes, isNumber);\r\n    if (!parameterFadeInTimes) {\r\n      return undefined;\r\n    }\r\n    const parameterFadeOutTimes = asArray<number>(json.parameterFadeOutTimes, isNumber);\r\n    if (!parameterFadeOutTimes) {\r\n      return undefined;\r\n    }\r\n    const motionLength = json.motionLength;\r\n    if (!isNumber(motionLength)) {\r\n      return undefined;\r\n    }\r\n    const instance = new CubismFadeMotionData(\r\n      motionName,\r\n      fadeInTime,\r\n      fadeOutTime,\r\n      parameterIds,\r\n      internalParameterCurves,\r\n      parameterFadeInTimes,\r\n      parameterFadeOutTimes,\r\n      motionLength\r\n    );\r\n    return instance;\r\n  }\r\n}\r\n\r\n/**\r\n * Alias  CubismSerializableCurves[]\r\n */\r\nnamespace CubismSerializableCurves {\r\n  export function instantiateFromJson(src: any) {\r\n    if (!Array.isArray(src)) {\r\n      return undefined;\r\n    }\r\n    const curves = new Array<CubismSerializableCurve>(src.length);\r\n    for (let i = 0; i < src.length; i++) {\r\n      const curve = CubismSerializableCurve.instantiateFromJson(src[i]);\r\n      if (curve == null) {\r\n        return undefined;\r\n      }\r\n      curves[i] = curve;\r\n    }\r\n    return curves;\r\n  }\r\n}\r\n\r\nfunction isString(value: any): value is string {\r\n  return typeof value == 'string';\r\n}\r\nfunction isNumber(value: any): value is number {\r\n  return typeof value == 'number';\r\n}\r\nfunction asArray<T>(src: any, isTypeFunc: (value: any) => value is T): T[] | undefined {\r\n  if (!Array.isArray(src)) {\r\n    return undefined;\r\n  }\r\n  if (!src.every(isTypeFunc)) {\r\n    return undefined;\r\n  }\r\n  return src as T[];\r\n}\r\n"]}