{"version":3,"sources":["file:///Users/sunjia/project/cocos-test/cocos-demo/extensions/live2d_cubismsdk_cocoscreator/static/assets/Rendering/CubismMeshPrimitive.ts"],"names":["CCFloat","CCInteger","Color","math","utils","_decorator","Bounds","CubismBounds","ccclass","property","CubismMeshPrimitive","type","indexCount","_rawIndices","length","setColors","source","_rawColors","i","x","y","z","w","setColorsFromRaw","getIndices","setIndices","constructor","positions","uvs","colors","indices","_rawPositions","_rawUvs","from","count","instance","Array","makeEmpty","vertexCount","getPositions","raw","j","Vec3","setPositions","getUvs","Vec2","getColors","createRuntimeMeshPrimitive","createMesh","MeshUtils","undefined","calculateBounds","min","max","Math","trunc","o","lerp"],"mappings":"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","sourcesContent":["/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { CCFloat, CCInteger, Color, math, Mesh, primitives, utils, _decorator } from 'cc';\r\nimport { CubismBounds as Bounds } from '../Core/CubismGeometry';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('CubismMeshPrimitive')\r\nexport default class CubismMeshPrimitive {\r\n  @property({ type: [CCFloat] })\r\n  private _rawPositions: number[] = new Array<number>();\r\n  @property({ type: [CCFloat] })\r\n  private _rawUvs: number[] = new Array<number>();\r\n  @property({ type: [CCFloat] })\r\n  private _rawColors: number[] = new Array<number>();\r\n  @property({ type: [CCInteger] })\r\n  private _rawIndices: number[] = new Array<number>();\r\n\r\n  public get indexCount(): number {\r\n    return this._rawIndices.length;\r\n  }\r\n\r\n  public setColors(source: ArrayLike<Color>) {\r\n    this._rawColors.length = source.length * 4;\r\n    for (let i = 0; i < source.length; i++) {\r\n      this._rawColors[i * 4 + 0] = source[i].x;\r\n      this._rawColors[i * 4 + 1] = source[i].y;\r\n      this._rawColors[i * 4 + 2] = source[i].z;\r\n      this._rawColors[i * 4 + 3] = source[i].w;\r\n    }\r\n  }\r\n\r\n  public setColorsFromRaw(source: ArrayLike<number>) {\r\n    this._rawColors.length = source.length;\r\n    for (let i = 0; i < source.length; i++) {\r\n      this._rawColors[i] = source[i];\r\n    }\r\n  }\r\n\r\n  public getIndices(): ArrayLike<number> {\r\n    return this._rawIndices;\r\n  }\r\n\r\n  public setIndices(source: ArrayLike<number>) {\r\n    this._rawIndices.length = source.length;\r\n    for (let i = 0; i < source.length; i++) {\r\n      this._rawIndices[i] = source[i];\r\n    }\r\n  }\r\n\r\n  private constructor(\r\n    positions: number[] = [],\r\n    uvs: number[] = [],\r\n    colors: number[] = [],\r\n    indices: number[] = []\r\n  ) {\r\n    this._rawPositions = positions;\r\n    this._rawUvs = uvs;\r\n    this._rawColors = colors;\r\n    this._rawIndices = indices;\r\n  }\r\n\r\n  public static from(\r\n    positions: ArrayLike<number>,\r\n    uvs: ArrayLike<number>,\r\n    colors: ArrayLike<number>\r\n  ): CubismMeshPrimitive | null {\r\n    const count = positions.length / 3;\r\n    if (count != uvs.length / 2 || count != colors.length / 4) {\r\n      return null;\r\n    }\r\n    const instance = new CubismMeshPrimitive(\r\n      Array.from(positions),\r\n      Array.from(uvs),\r\n      Array.from(colors)\r\n    );\r\n    return instance;\r\n  }\r\n\r\n  public static makeEmpty(): CubismMeshPrimitive {\r\n    return new CubismMeshPrimitive([], [], []);\r\n  }\r\n\r\n  public get vertexCount(): number {\r\n    return this._rawPositions.length / 3;\r\n  }\r\n\r\n  public getPositions(): math.Vec3[] {\r\n    const raw = this._rawPositions;\r\n    const positions = new Array<math.Vec3>(raw.length / 3);\r\n    for (let i = 0; i < positions.length; i++) {\r\n      const j = i * 3;\r\n      positions[i] = new math.Vec3(raw[j + 0], raw[j + 1], raw[j + 2]);\r\n    }\r\n    return positions;\r\n  }\r\n\r\n  public setPositions(source: readonly math.IVec3Like[]): void;\r\n  public setPositions(source: ArrayLike<math.IVec3Like>): void;\r\n  public setPositions(source: ArrayLike<math.IVec3Like>): void {\r\n    this._rawPositions.length = source.length * 3;\r\n    for (let i = 0; i < source.length; i++) {\r\n      this._rawPositions[i * 3 + 0] = source[i].x;\r\n      this._rawPositions[i * 3 + 1] = source[i].y;\r\n      this._rawPositions[i * 3 + 2] = source[i].z;\r\n    }\r\n  }\r\n\r\n  public getUvs(): math.Vec2[] {\r\n    const raw = this._rawUvs;\r\n    const uvs = new Array<math.Vec2>(raw.length / 4);\r\n    for (let i = 0; i < uvs.length; i++) {\r\n      const j = i * 2;\r\n      uvs[i] = new math.Vec2(raw[j + 0], raw[j + 1]);\r\n    }\r\n    return uvs;\r\n  }\r\n\r\n  public getColors(): Color[] {\r\n    const raw = this._rawColors;\r\n    const colors = new Array<Color>(raw.length / 4);\r\n    for (let i = 0; i < colors.length; i++) {\r\n      const j = i * 4;\r\n      colors[i] = new Color(raw[j + 0], raw[j + 1], raw[j + 2], raw[j + 3]);\r\n    }\r\n    return colors;\r\n  }\r\n\r\n  public createRuntimeMeshPrimitive(): primitives.IGeometry {\r\n    return {\r\n      positions: this._rawPositions,\r\n      uvs: this._rawUvs,\r\n      colors: this._rawColors,\r\n      indices: this._rawIndices,\r\n    };\r\n  }\r\n\r\n  public createMesh(): Mesh | null {\r\n    return this._rawPositions.length == 0\r\n      ? null\r\n      : utils.MeshUtils.createMesh(this.createRuntimeMeshPrimitive(), undefined, {\r\n          calculateBounds: true,\r\n        });\r\n  }\r\n\r\n  public calculateBounds(): Bounds {\r\n    const positions = this._rawPositions;\r\n    if (positions.length == 0) {\r\n      return new Bounds(0, 0, 0, 0, 0, 0);\r\n    }\r\n    const min = {\r\n      x: positions[0],\r\n      y: positions[1],\r\n      z: positions[2],\r\n    };\r\n    const max = {\r\n      x: min.x,\r\n      y: min.y,\r\n      z: min.z,\r\n    };\r\n    const count = Math.trunc(positions.length / 3);\r\n    for (let i = 1; i < count; i++) {\r\n      const x = positions[i * 3 + 0];\r\n      const y = positions[i * 3 + 1];\r\n      const z = positions[i * 3 + 2];\r\n\r\n      min.x = x < min.x ? x : min.x;\r\n      min.y = y < min.y ? y : min.y;\r\n      min.z = z < min.z ? z : min.z;\r\n      max.x = x > max.x ? x : max.x;\r\n      max.y = y > max.y ? y : max.y;\r\n      max.z = z > max.z ? z : max.z;\r\n    }\r\n    const o = { x: 0, y: 0, z: 0 };\r\n    math.Vec3.lerp(o, min, max, 0.5);\r\n    return new Bounds(\r\n      o.x,\r\n      o.y,\r\n      o.z,\r\n      (max.x - min.x) * 0.5,\r\n      (max.y - min.y) * 0.5,\r\n      (max.z - min.z) * 0.5\r\n    );\r\n  }\r\n}\r\n"]}