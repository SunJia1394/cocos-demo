{"version":3,"sources":["file:///Users/sunjia/project/cocos-test/cocos-demo/extensions/live2d_cubismsdk_cocoscreator/static/assets/Framework/MotionFade/CubismFadeController.ts"],"names":["_decorator","animation","game","Component","math","ComponentExtensionMethods","CubismParameterStore","CubismUpdateController","CubismUpdateExecutionOrder","ICubismUpdatable","CubismFadeMath","CubismFadeMotionList","ccclass","property","CubismFadeController","serializable","visible","SYMBOL","_destinationParameters","_destinationParts","_motionController","_fadeStates","_animator","_parameterStore","_isFading","bindedOnLateUpdate","onLateUpdate","bind","destinationParameters","value","destinationParts","hasUpdateController","_hasUpdateController","refresh","getComponent","AnimationController","findCubismModel","parameters","parts","length","Array","executionOrder","CUBISM_FADE_CONTROLLER","needsUpdateOnEditing","deltaTime","enabled","time","totalTime","i","playingMotions","getPlayingMotions","latestPlayingMotion","playingMotionData","motion","elapsedTime","startTime","parameterFadeInTimes","j","fadeInTime","isFadingAllFinished","playingMotionCount","playingMotion","endTime","stopAnimation","restoreParameters","updateFade","fadeState","layerWeight","getLayerWeight","isLooping","newEndTime","fadeOutTime","motionLength","fadeMotion","parameterIds","parameterCurves","parameterFadeOutTimes","fadeInWeight","getEasingSine","fadeOutWeight","motionWeight","index","k","id","evaluate","opacity","curve","parameterFadeInTime","parameterFadeOutTime","currentValue","keyframes","EPSILON","parameterWeight","onEnable","lateUpdate"],"mappings":"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","sourcesContent":["/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { _decorator, animation, game, RealCurve, Component, math } from 'cc';\r\nimport ComponentExtensionMethods from '../../Core/ComponentExtensionMethods';\r\nimport CubismParameterStore from '../CubismParameterStore';\r\nimport CubismUpdateController from '../CubismUpdateController';\r\nimport CubismUpdateExecutionOrder from '../CubismUpdateExecutionOrder';\r\nimport ICubismUpdatable from '../ICubismUpdatable';\r\nimport CubismFadeMath from './CubismFadeMath';\r\nimport CubismFadeMotionList from './CubismFadeMotionList';\r\nimport type CubismFadeStateObserver from './CubismFadeStateObserver';\r\nimport type ICubismFadeState from './ICubismFadeState';\r\nimport type CubismParameter from '../../Core/CubismParameter';\r\nimport type CubismPart from '../../Core/CubismPart';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('CubismFadeController')\r\nexport default class CubismFadeController extends Component implements ICubismUpdatable {\r\n  @property(CubismFadeMotionList)\r\n  public cubismFadeMotionList: CubismFadeMotionList | null = null;\r\n\r\n  private _destinationParameters: CubismParameter[] | null = null;\r\n  private get destinationParameters() {\r\n    return this._destinationParameters;\r\n  }\r\n  private set destinationParameters(value: CubismParameter[] | null) {\r\n    this._destinationParameters = value;\r\n  }\r\n\r\n  private _destinationParts: CubismPart[] | null = null;\r\n  private get destinationParts() {\r\n    return this._destinationParts;\r\n  }\r\n  private set destinationParts(value: CubismPart[] | null) {\r\n    this._destinationParts = value;\r\n  }\r\n\r\n  private _motionController: /*CubismMotionController | */ null = null; //[TODO]\r\n\r\n  @property({ serializable: false, visible: false })\r\n  private _hasUpdateController: boolean = false;\r\n  public get hasUpdateController() {\r\n    return this._hasUpdateController;\r\n  }\r\n  public set hasUpdateController(value: boolean) {\r\n    this._hasUpdateController = value;\r\n  }\r\n  private _fadeStates: ICubismFadeState[] | null = null;\r\n\r\n  private _animator: animation.AnimationController | null = null;\r\n\r\n  private _parameterStore: CubismParameterStore | null = null;\r\n\r\n  private _isFading: boolean[] | null = null;\r\n\r\n  public refresh() {\r\n    this._animator = this.getComponent(animation.AnimationController);\r\n    // Fail silently...\r\n    if (this._animator == null) {\r\n      return;\r\n    }\r\n    this.destinationParameters =\r\n      ComponentExtensionMethods.findCubismModel(this)?.parameters ?? null;\r\n    this.destinationParts = ComponentExtensionMethods.findCubismModel(this)?.parts ?? null;\r\n    // this._motionController = this.getComponent(CubismMotionController);[TODO]\r\n    this._parameterStore = this.getComponent(CubismParameterStore);\r\n    // Get cubism update controller.\r\n    this.hasUpdateController = this.getComponent(CubismUpdateController) != null;\r\n    // this._fadeStates = this._animator.GetBehaviours(CubismFadeStateObserver) as ICubismFadeState[];[TODO]\r\n    if (\r\n      (this._fadeStates == null || this._fadeStates.length == 0) &&\r\n      this._motionController != null\r\n    ) {\r\n      // this._fadeStates = this._motionController.GetFadeStates();[TODO]\r\n    }\r\n    if (this._fadeStates == null) {\r\n      return;\r\n    }\r\n    this._isFading = new Array<boolean>(this._fadeStates.length);\r\n  }\r\n\r\n  public get executionOrder(): number {\r\n    return CubismUpdateExecutionOrder.CUBISM_FADE_CONTROLLER;\r\n  }\r\n\r\n  public get needsUpdateOnEditing(): boolean {\r\n    return false;\r\n  }\r\n\r\n  protected onLateUpdate(deltaTime: number) {\r\n    // Fail silently.\r\n    if (\r\n      !this.enabled ||\r\n      this._fadeStates == null ||\r\n      this._parameterStore == null ||\r\n      this.destinationParameters == null ||\r\n      this.destinationParts == null ||\r\n      this._isFading == null /*To Cocos*/\r\n    ) {\r\n      return;\r\n    }\r\n    const time = game.totalTime;\r\n    for (let i = 0; i < this._fadeStates.length; ++i) {\r\n      this._isFading[i] = false;\r\n      const playingMotions = this._fadeStates[i].getPlayingMotions();\r\n      if (playingMotions == null || playingMotions.length <= 1) {\r\n        continue;\r\n      }\r\n      const latestPlayingMotion = playingMotions[playingMotions.length - 1];\r\n      const playingMotionData = latestPlayingMotion.motion;\r\n      const elapsedTime = time - latestPlayingMotion.startTime;\r\n      if (playingMotionData?.parameterFadeInTimes != null) {\r\n        for (let j = 0; j < playingMotionData.parameterFadeInTimes.length; j++) {\r\n          if (\r\n            elapsedTime <= playingMotionData.fadeInTime ||\r\n            (0 <= playingMotionData.parameterFadeInTimes[j] &&\r\n              elapsedTime <= playingMotionData.parameterFadeInTimes[j])\r\n          ) {\r\n            this._isFading[i] = true;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    let isFadingAllFinished = true;\r\n    for (let i = 0; i < this._fadeStates.length; ++i) {\r\n      const playingMotions = this._fadeStates[i].getPlayingMotions();\r\n      if (playingMotions == null) {\r\n        continue;\r\n      }\r\n      const playingMotionCount = playingMotions.length - 1;\r\n      if (this._isFading[i]) {\r\n        isFadingAllFinished = false;\r\n        continue;\r\n      }\r\n      for (let j = playingMotionCount; j >= 0; --j) {\r\n        if (playingMotions.length <= 1) {\r\n          break;\r\n        }\r\n        const playingMotion = playingMotions[j];\r\n        if (time <= playingMotion.endTime) {\r\n          continue;\r\n        }\r\n        // If fade-in has been completed, delete the motion that has been played back.\r\n        this._fadeStates[i].stopAnimation(j);\r\n      }\r\n    }\r\n    if (isFadingAllFinished) {\r\n      return;\r\n    }\r\n    this._parameterStore.restoreParameters();\r\n    // Update sources and destinations.\r\n    for (let i = 0; i < this._fadeStates.length; ++i) {\r\n      if (!this._isFading[i]) {\r\n        continue;\r\n      }\r\n      this.updateFade(this._fadeStates[i]);\r\n    }\r\n  }\r\n\r\n  /** ICubismUpdatable Binded callback function. */\r\n  public readonly bindedOnLateUpdate: ICubismUpdatable.CallbackFunction =\r\n    this.onLateUpdate.bind(this);\r\n\r\n  /** ICubismUpdatable metadata */\r\n  public readonly [ICubismUpdatable.SYMBOL]: typeof ICubismUpdatable.SYMBOL =\r\n    ICubismUpdatable.SYMBOL;\r\n\r\n  private updateFade(fadeState: ICubismFadeState) {\r\n    const playingMotions = fadeState.getPlayingMotions();\r\n    if (\r\n      playingMotions == null ||\r\n      this.destinationParameters == null /*To Cocos*/ ||\r\n      this.destinationParts == null /*To Cocos*/\r\n    ) {\r\n      // Do not process if there is only one motion, if it does not switch.\r\n      return;\r\n    }\r\n    // Weight set for the layer being processed.\r\n    // (In the case of the layer located at the top, it is forced to 1.)\r\n    const layerWeight = fadeState.getLayerWeight();\r\n    const time = game.totalTime;\r\n    // Set playing motions end time.\r\n    if (\r\n      playingMotions.length > 0 &&\r\n      playingMotions[playingMotions.length - 1].motion != null &&\r\n      playingMotions[playingMotions.length - 1].isLooping\r\n    ) {\r\n      const motion = playingMotions[playingMotions.length - 1];\r\n      if (motion.motion != null) {\r\n        const newEndTime = time + motion.motion.fadeOutTime;\r\n        motion.endTime = newEndTime;\r\n        while (true) {\r\n          if (motion.startTime + motion.motion.motionLength >= time) {\r\n            break;\r\n          }\r\n          motion.startTime += motion.motion.motionLength;\r\n        }\r\n        playingMotions[playingMotions.length - 1] = motion;\r\n      }\r\n    }\r\n    // Calculate MotionFade.\r\n    for (let i = 0; i < playingMotions.length; i++) {\r\n      const playingMotion = playingMotions[i];\r\n      const fadeMotion = playingMotion.motion;\r\n      if (\r\n        fadeMotion == null ||\r\n        fadeMotion.parameterIds == null ||\r\n        fadeMotion.parameterCurves == null ||\r\n        fadeMotion.parameterFadeInTimes == null ||\r\n        fadeMotion.parameterFadeOutTimes == null\r\n      ) {\r\n        continue;\r\n      }\r\n      const elapsedTime = time - playingMotion.startTime;\r\n      const endTime = playingMotion.endTime - elapsedTime;\r\n      const fadeInTime = fadeMotion.fadeInTime;\r\n      const fadeOutTime = fadeMotion.fadeOutTime;\r\n      const fadeInWeight =\r\n        fadeInTime <= 0.0 ? 1.0 : CubismFadeMath.getEasingSine(elapsedTime / fadeInTime);\r\n      const fadeOutWeight =\r\n        fadeOutTime <= 0.0\r\n          ? 1.0\r\n          : CubismFadeMath.getEasingSine((playingMotion.endTime - game.totalTime) / fadeOutTime);\r\n      playingMotions[i] = playingMotion;\r\n      const motionWeight =\r\n        i == 0 ? fadeInWeight * fadeOutWeight : fadeInWeight * fadeOutWeight * layerWeight;\r\n      // Apply to parameter values\r\n      for (let j = 0; j < this.destinationParameters.length; ++j) {\r\n        let index = -1;\r\n        for (let k = 0; k < fadeMotion.parameterIds.length; ++k) {\r\n          if (fadeMotion.parameterIds[k] != this.destinationParameters[j].id) {\r\n            continue;\r\n          }\r\n          index = k;\r\n          break;\r\n        }\r\n        if (index < 0) {\r\n          // There is not target ID curve in motion.\r\n          continue;\r\n        }\r\n        this.destinationParameters[j].value = this.evaluate(\r\n          fadeMotion.parameterCurves[index],\r\n          elapsedTime,\r\n          endTime,\r\n          fadeInWeight,\r\n          fadeOutWeight,\r\n          fadeMotion.parameterFadeInTimes[index],\r\n          fadeMotion.parameterFadeOutTimes[index],\r\n          motionWeight,\r\n          this.destinationParameters[j].value\r\n        );\r\n      }\r\n      // Apply to part opacities\r\n      for (let j = 0; j < this.destinationParts.length; ++j) {\r\n        let index = -1;\r\n        for (let k = 0; k < fadeMotion.parameterIds.length; ++k) {\r\n          if (fadeMotion.parameterIds[k] != this.destinationParts[j].id) {\r\n            continue;\r\n          }\r\n          index = k;\r\n          break;\r\n        }\r\n        if (index < 0) {\r\n          // There is not target ID curve in motion.\r\n          continue;\r\n        }\r\n        this.destinationParts[j].opacity = this.evaluate(\r\n          fadeMotion.parameterCurves[index],\r\n          elapsedTime,\r\n          endTime,\r\n          fadeInWeight,\r\n          fadeOutWeight,\r\n          fadeMotion.parameterFadeInTimes[index],\r\n          fadeMotion.parameterFadeOutTimes[index],\r\n          motionWeight,\r\n          this.destinationParts[j].opacity\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  public evaluate(\r\n    curve: RealCurve,\r\n    elapsedTime: number,\r\n    endTime: number,\r\n    fadeInTime: number,\r\n    fadeOutTime: number,\r\n    parameterFadeInTime: number,\r\n    parameterFadeOutTime: number,\r\n    motionWeight: number,\r\n    currentValue: number\r\n  ): number {\r\n    if (curve.keyframes.length <= 0) {\r\n      return currentValue;\r\n    }\r\n    // Motion fade.\r\n    if (parameterFadeInTime < 0.0 && parameterFadeOutTime < 0.0) {\r\n      return currentValue + (curve.evaluate(elapsedTime) - currentValue) * motionWeight;\r\n    }\r\n    // Parameter fade.\r\n    let fadeInWeight, fadeOutWeight: number;\r\n    if (parameterFadeInTime < 0.0) {\r\n      fadeInWeight = fadeInTime;\r\n    } else {\r\n      fadeInWeight =\r\n        parameterFadeInTime < math.EPSILON\r\n          ? 1.0\r\n          : CubismFadeMath.getEasingSine(elapsedTime / parameterFadeInTime);\r\n    }\r\n    if (parameterFadeOutTime < 0.0) {\r\n      fadeOutWeight = fadeOutTime;\r\n    } else {\r\n      fadeOutWeight =\r\n        parameterFadeOutTime < math.EPSILON\r\n          ? 1.0\r\n          : CubismFadeMath.getEasingSine(endTime / parameterFadeOutTime);\r\n    }\r\n    const parameterWeight = fadeInWeight * fadeOutWeight;\r\n    return currentValue + (curve.evaluate(elapsedTime) - currentValue) * parameterWeight;\r\n  }\r\n\r\n  onEnable() {\r\n    // Initialize cache.\r\n    this.refresh();\r\n  }\r\n\r\n  lateUpdate(deltaTime: number) {\r\n    if (!this.hasUpdateController) {\r\n      this.onLateUpdate(deltaTime);\r\n    }\r\n  }\r\n}\r\n"]}