{"version":3,"sources":["file:///Users/sunjia/project/cocos-test/cocos-demo/extensions/live2d_cubismsdk_cocoscreator/static/assets/Framework/LookAt/CubismLookParameter.ts"],"names":["endsWith","str","value","length","CCFloat","Component","Enum","_decorator","CubismParameter","CubismLookAxis","ccclass","property","CubismLookParameter","type","serializable","visible","reset","parameter","getComponent","name","axis","Y","Z","X","factor","maximumValue","tickAndEvaluate","targetOffset","result","x","z","y"],"mappings":";;;;;;;;;;;AAyEA,WAASA,QAAT,CAAkBC,GAAlB,EAA+BC,KAA/B,EAA8C;AAC5C,WAAOD,GAAG,CAACE,MAAJ,GAAa,CAAb,GAAiBF,GAAG,CAACA,GAAG,CAACE,MAAJ,GAAa,CAAd,CAAH,IAAuBD,KAAxC,GAAgD,KAAvD;AACD;;;;;;;;;;;;;;;;;AApEQE,MAAAA,O,OAAAA,O;AAASC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAYC,MAAAA,U,OAAAA,U;;AAClCC,MAAAA,e;;AACAC,MAAAA,c;;;;;;AATP;AACA;AACA;AACA;AACA;AACA;;;;;OAKM;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;AAE9B;AACA;AACA;AACA;AACA;;yBAEqBK,mB,WADpBF,OAAO,CAAC,qBAAD,C,UAGLC,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEP,IAAI;AAAA;AAAA,6CAAZ;AAA8BQ,QAAAA,YAAY,EAAE,IAA5C;AAAkDC,QAAAA,OAAO,EAAE;AAA3D,OAAD,C,UAIRJ,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAET,OAAR;AAAiBU,QAAAA,YAAY,EAAE,IAA/B;AAAqCC,QAAAA,OAAO,EAAE;AAA9C,OAAD,C,2BAPX,MACqBH,mBADrB,SACiDP,SADjD,CAC2D;AAAA;AAAA;;AACzD;AADyD;;AAKzD;AALyD;AAAA;;AASzD;;AAEA;AACQW,QAAAA,KAAK,GAAS;AACpB,gBAAMC,SAAS,GAAG,KAAKC,YAAL;AAAA;AAAA,iDAAlB,CADoB,CAGpB;;AACA,cAAID,SAAS,IAAI,IAAjB,EAAuB;AACrB;AACD,WANmB,CAQpB;;;AACA,cAAIjB,QAAQ,CAACiB,SAAS,CAACE,IAAX,EAAiB,GAAjB,CAAZ,EAAmC;AACjC,iBAAKC,IAAL,GAAY;AAAA;AAAA,kDAAeC,CAA3B;AACD,WAFD,MAEO,IAAIrB,QAAQ,CAACiB,SAAS,CAACE,IAAX,EAAiB,GAAjB,CAAZ,EAAmC;AACxC,iBAAKC,IAAL,GAAY;AAAA;AAAA,kDAAeE,CAA3B;AACD,WAFM,MAEA;AACL,iBAAKF,IAAL,GAAY;AAAA;AAAA,kDAAeG,CAA3B;AACD,WAfmB,CAiBpB;;;AACA,eAAKC,MAAL,GAAcP,SAAS,CAACQ,YAAxB;AACD,SA/BwD,CAiCzD;AAEA;;AAEA;AACF;AACA;AACA;AACA;;;AACSC,QAAAA,eAAe,CAACC,YAAD,EAAkC;AACtD,gBAAMC,MAAM,GACV,KAAKR,IAAL,IAAa;AAAA;AAAA,gDAAeG,CAA5B,GACII,YAAY,CAACE,CADjB,GAEI,KAAKT,IAAL,IAAa;AAAA;AAAA,gDAAeE,CAA5B,GACAK,YAAY,CAACG,CADb,GAEAH,YAAY,CAACI,CALnB;AAMA,iBAAOH,MAAM,GAAG,KAAKJ,MAArB;AACD,SAlDwD,CAoDzD;;;AApDyD,O;;;;;iBAG3B;AAAA;AAAA,gDAAeD,C;;;;;;;iBAIrB,C","sourcesContent":["/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { CCFloat, Component, Enum, math, _decorator } from 'cc';\r\nimport CubismParameter from '../../Core/CubismParameter';\r\nimport CubismLookAxis from './CubismLookAxis';\r\nconst { ccclass, property } = _decorator;\r\n\r\n/**\r\n * Look at parameter.\r\n *\r\n * **Sealed class**\r\n */\r\n@ccclass('CubismLookParameter')\r\nexport default class CubismLookParameter extends Component {\r\n  /** Look axis. */\r\n  @property({ type: Enum(CubismLookAxis), serializable: true, visible: true })\r\n  public axis: CubismLookAxis = CubismLookAxis.X;\r\n\r\n  /** Factor. */\r\n  @property({ type: CCFloat, serializable: true, visible: true })\r\n  public factor: number = 0;\r\n\r\n  //#region Cocos Creator Event Handling\r\n\r\n  /** Called by Cocos Creator. Guesses best settings. */\r\n  private reset(): void {\r\n    const parameter = this.getComponent(CubismParameter);\r\n\r\n    // Fail silently.\r\n    if (parameter == null) {\r\n      return;\r\n    }\r\n\r\n    // Guess axis.\r\n    if (endsWith(parameter.name, 'Y')) {\r\n      this.axis = CubismLookAxis.Y;\r\n    } else if (endsWith(parameter.name, 'Z')) {\r\n      this.axis = CubismLookAxis.Z;\r\n    } else {\r\n      this.axis = CubismLookAxis.X;\r\n    }\r\n\r\n    // Guess factor.\r\n    this.factor = parameter.maximumValue;\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region Interface for Controller\r\n\r\n  /**\r\n   * Updates and evaluates the instance.\r\n   * @param targetOffset Delta to target.\r\n   * @returns Evaluation result.\r\n   */\r\n  public tickAndEvaluate(targetOffset: math.Vec3): number {\r\n    const result =\r\n      this.axis == CubismLookAxis.X\r\n        ? targetOffset.x\r\n        : this.axis == CubismLookAxis.Z\r\n        ? targetOffset.z\r\n        : targetOffset.y;\r\n    return result * this.factor;\r\n  }\r\n\r\n  //#endregion\r\n}\r\n\r\nfunction endsWith(str: string, value: string) {\r\n  return str.length > 0 ? str[str.length - 1] == value : false;\r\n}\r\n"]}