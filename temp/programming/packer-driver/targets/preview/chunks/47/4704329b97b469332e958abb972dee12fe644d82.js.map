{"version":3,"sources":["file:///Users/sunjia/project/cocos-test/cocos-demo/extensions/live2d_cubismsdk_cocoscreator/static/assets/SampleScripts/Raycasting/RaycastHitDisplay.ts"],"names":["_decorator","Component","RichText","Camera","geometry","input","Input","math","game","CubismModel","CubismRaycaster","CubismRaycastHit","ccclass","property","RaycastHitDisplay","type","serializable","visible","_results","Array","_mouseDownEventData","bindedMouseDownEventHandler","mouseDownEventHandler","bind","raycaster","_raycaster","value","results","camera","_camera","doRaycast","resultsText","canvas","x","width","y","height","ray","screenPointToRay","Ray","hitCount","raycast2","string","i","drawable","name","start","model","getComponent","length","event","getLocation","Vec2","onEnable","on","EventType","MOUSE_DOWN","onDisable","off","update"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACEA,MAAAA,U,OAAAA,U;AACAC,MAAAA,S,OAAAA,S;AACAC,MAAAA,Q,OAAAA,Q;AACAC,MAAAA,M,OAAAA,M;AACAC,MAAAA,Q,OAAAA,Q;AACAC,MAAAA,K,OAAAA,K;AACAC,MAAAA,K,OAAAA,K;AAEAC,MAAAA,I,OAAAA,I;AACAC,MAAAA,I,OAAAA,I;;AAEKC,MAAAA,W;;AACAC,MAAAA,e;;AACAC,MAAAA,gB;;;;;;;;;OACD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBb,U;;mCAGjBc,iB,WADZF,OAAO,CAAC,mBAAD,C,UAGLC,QAAQ,CAAC;AAAEE,QAAAA,IAAI;AAAA;AAAA,sCAAN;AAAqBC,QAAAA,YAAY,EAAE;AAAnC,OAAD,C,UAIRH,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEb,QAAR;AAAkBc,QAAAA,YAAY,EAAE;AAAhC,OAAD,C,UAIRH,QAAQ,CAAC;AAAEG,QAAAA,YAAY,EAAE;AAAhB,OAAD,C,UAmBRH,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEZ,MAAR;AAAgBa,QAAAA,YAAY,EAAE,IAA9B;AAAoCC,QAAAA,OAAO,EAAE;AAA7C,OAAD,C,2BA9BX,MACaH,iBADb,SACuCb,SADvC,CACiD;AAAA;AAAA;;AAC/C;AAD+C;;AAK/C;AAL+C;;AAS/C;AAT+C;;AAoB/C;AApB+C,eAqBvCiB,QArBuC,GAqBR,IAAIC,KAAJ,CAAU,CAAV,CArBQ;;AAAA;;AAAA,eA6GvCC,mBA7GuC,GA6GC,IA7GD;AAAA,eAmHvCC,2BAnHuC,GAmHT,KAAKC,qBAAL,CAA2BC,IAA3B,CAAgC,IAAhC,CAnHS;AAAA;;AAa1B,YAATC,SAAS,GAA2B;AAC9C,iBAAO,KAAKC,UAAZ;AACD;;AACoB,YAATD,SAAS,CAACE,KAAD,EAAgC;AACnD,eAAKD,UAAL,GAAkBC,KAAlB;AACD;;AAIkB,YAAPC,OAAO,GAAuB;AACxC,iBAAO,KAAKT,QAAZ;AACD;;AACkB,YAAPS,OAAO,CAACD,KAAD,EAA4B;AAC7C,eAAKR,QAAL,GAAgBQ,KAAhB;AACD;;AAIiB,YAANE,MAAM,GAAkB;AAClC,iBAAO,KAAKC,OAAZ;AACD;;AACiB,YAAND,MAAM,CAACF,KAAD,EAAuB;AACvC,eAAKG,OAAL,GAAeH,KAAf;AACD;AAED;;;AACQI,QAAAA,SAAS,GAAS;AACxB,cAAM;AAAEF,YAAAA,MAAF;AAAUJ,YAAAA,SAAV;AAAqBO,YAAAA,WAArB;AAAkCJ,YAAAA,OAAlC;AAA2CP,YAAAA;AAA3C,cAAmE,IAAzE;;AACA,cAAIQ,MAAM,IAAI,IAAd,EAAoB;AAClB;AACD;;AACD,cAAIJ,SAAS,IAAI,IAAjB,EAAuB;AACrB;AACD;;AACD,cAAIO,WAAW,IAAI,IAAnB,EAAyB;AACvB;AACD;;AACD,cAAIJ,OAAO,IAAI,IAAf,EAAqB;AACnB;AACD;;AACD,cAAIP,mBAAmB,IAAI,IAA3B,EAAiC;AAC/B;AACD;;AACD,cAAIZ,IAAI,CAACwB,MAAL,IAAe,IAAnB,EAAyB;AACvB;AACD;;AAED,cAAMC,CAAC,GAAGb,mBAAmB,CAACa,CAApB,GAAwBzB,IAAI,CAACwB,MAAL,CAAYE,KAA9C;AACA,cAAMC,CAAC,GAAGf,mBAAmB,CAACe,CAApB,GAAwB3B,IAAI,CAACwB,MAAL,CAAYI,MAA9C,CAtBwB,CAwBxB;AACA;;AACA,cAAMC,GAAG,GAAGT,MAAM,CAACU,gBAAP,CACVlB,mBAAmB,CAACa,CADV,EAEVb,mBAAmB,CAACe,CAFV,EAGV,IAAI/B,QAAQ,CAACmC,GAAb,EAHU,CAAZ;AAKA,cAAMC,QAAQ,GAAGhB,SAAS,CAACiB,QAAV,CAAmBJ,GAAnB,EAAwB,KAAKV,OAA7B,CAAjB,CA/BwB,CAiCxB;;AACA,cAAIa,QAAQ,IAAI,CAAhB,EAAmB;AACjBT,YAAAA,WAAW,CAACW,MAAZ,GAAqB,KAArB;AACA;AACD,WArCuB,CAuCxB;;;AACAX,UAAAA,WAAW,CAACW,MAAZ,GAAqBF,QAAQ,GAAG,IAAhC;;AAEA,eAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,QAApB,EAA8BG,CAAC,EAA/B,EAAmC;AACjC,gBAAMC,QAAQ,GAAGjB,OAAO,CAACgB,CAAD,CAAP,CAAWC,QAA5B;;AACA,gBAAIA,QAAQ,IAAI,IAAhB,EAAsB;AACpBb,cAAAA,WAAW,CAACW,MAAZ,IAAsBE,QAAQ,CAACC,IAAT,GAAgB,IAAtC;AACD;AACF;AACF,SAvF8C,CAyF/C;;AAEA;;;AACUC,QAAAA,KAAK,GAAS;AACtB,cAAM;AAAEC,YAAAA,KAAF;AAAShB,YAAAA,WAAT;AAAsBJ,YAAAA;AAAtB,cAAkC,IAAxC;;AACA,cAAIoB,KAAK,IAAI,IAAb,EAAmB;AACjB;AACD;;AACD,cAAIhB,WAAW,IAAI,IAAnB,EAAyB;AACvB;AACD;;AACD,cAAIJ,OAAO,IAAI,IAAf,EAAqB;AACnB;AACD;;AACD,eAAKH,SAAL,GAAiBuB,KAAK,CAACC,YAAN;AAAA;AAAA,iDAAjB;;AACA,eAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGhB,OAAO,CAACsB,MAA5B,EAAoCN,CAAC,EAArC,EAAyC;AACvChB,YAAAA,OAAO,CAACgB,CAAD,CAAP,GAAa;AAAA;AAAA,uDAAb;AACD;AACF;;AAIOrB,QAAAA,qBAAqB,CAAC4B,KAAD,EAA0B;AACrD,eAAK9B,mBAAL,GAA2B8B,KAAK,CAACC,WAAN,CAAkB,IAAI5C,IAAI,CAAC6C,IAAT,EAAlB,CAA3B;AACD;;AAISC,QAAAA,QAAQ,GAAG;AACnBhD,UAAAA,KAAK,CAACiD,EAAN,CAAShD,KAAK,CAACiD,SAAN,CAAgBC,UAAzB,EAAqC,KAAKnC,2BAA1C,EAAuE,IAAvE;AACD;;AAESoC,QAAAA,SAAS,GAAG;AACpBpD,UAAAA,KAAK,CAACqD,GAAN,CAAUpD,KAAK,CAACiD,SAAN,CAAgBC,UAA1B,EAAsC,KAAKnC,2BAA3C,EAAwE,IAAxE;AACA,eAAKD,mBAAL,GAA2B,IAA3B;AACD;AAED;;;AACUuC,QAAAA,MAAM,GAAS;AACvB;AACA,cAAI,KAAKvC,mBAAL,IAA4B,IAAhC,EAAsC;AACpC;AACD;;AACD,eAAKU,SAAL;AACA,eAAKV,mBAAL,GAA2B,IAA3B;AACD,SAtI8C,CAwI/C;;;AAxI+C,O;;;;;iBAGZ,I;;;;;;;iBAIG,I;;;;;;;iBAIO,I;;;;;;;iBAmBZ,I","sourcesContent":["import {\r\n  _decorator,\r\n  Component,\r\n  RichText,\r\n  Camera,\r\n  geometry,\r\n  input,\r\n  Input,\r\n  EventMouse,\r\n  math,\r\n  game,\r\n} from 'cc';\r\nimport CubismModel from '../../Core/CubismModel';\r\nimport CubismRaycaster from '../../Framework/Raycasting/CubismRaycaster';\r\nimport CubismRaycastHit from '../../Framework/Raycasting/CubismRaycastHit';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('RaycastHitDisplay')\r\nexport class RaycastHitDisplay extends Component {\r\n  /** <see cref=\"CubismModel\"/> to cast rays against. */\r\n  @property({ type: CubismModel, serializable: true })\r\n  public model: CubismModel | null = null;\r\n\r\n  /** UI element to display results in. */\r\n  @property({ type: RichText, serializable: true })\r\n  public resultsText: RichText | null = null;\r\n\r\n  /** <see cref=\"CubismRaycaster\"/> attached to <see cref=\"Model\"/>. */\r\n  @property({ serializable: false })\r\n  private _raycaster: CubismRaycaster | null = null;\r\n\r\n  private get raycaster(): CubismRaycaster | null {\r\n    return this._raycaster;\r\n  }\r\n  private set raycaster(value: CubismRaycaster | null) {\r\n    this._raycaster = value;\r\n  }\r\n\r\n  /** Buffer for raycast results. */\r\n  private _results: CubismRaycastHit[] = new Array(4);\r\n  private get results(): CubismRaycastHit[] {\r\n    return this._results;\r\n  }\r\n  private set results(value: CubismRaycastHit[]) {\r\n    this._results = value;\r\n  }\r\n\r\n  @property({ type: Camera, serializable: true, visible: true })\r\n  private _camera: Camera | null = null;\r\n  private get camera(): Camera | null {\r\n    return this._camera;\r\n  }\r\n  private set camera(value: Camera | null) {\r\n    this._camera = value;\r\n  }\r\n\r\n  /** Hit test. */\r\n  private doRaycast(): void {\r\n    const { camera, raycaster, resultsText, results, _mouseDownEventData } = this;\r\n    if (camera == null) {\r\n      return;\r\n    }\r\n    if (raycaster == null) {\r\n      return;\r\n    }\r\n    if (resultsText == null) {\r\n      return;\r\n    }\r\n    if (results == null) {\r\n      return;\r\n    }\r\n    if (_mouseDownEventData == null) {\r\n      return;\r\n    }\r\n    if (game.canvas == null) {\r\n      return;\r\n    }\r\n\r\n    const x = _mouseDownEventData.x / game.canvas.width;\r\n    const y = _mouseDownEventData.y / game.canvas.height;\r\n\r\n    // Cast ray from pointer position.\r\n    // Input.mousePosition\r\n    const ray = camera.screenPointToRay(\r\n      _mouseDownEventData.x,\r\n      _mouseDownEventData.y,\r\n      new geometry.Ray()\r\n    );\r\n    const hitCount = raycaster.raycast2(ray, this.results);\r\n\r\n    // Return early if nothing was hit.\r\n    if (hitCount == 0) {\r\n      resultsText.string = '0\\n';\r\n      return;\r\n    }\r\n\r\n    // Show results.\r\n    resultsText.string = hitCount + '\\n';\r\n\r\n    for (let i = 0; i < hitCount; i++) {\r\n      const drawable = results[i].drawable;\r\n      if (drawable != null) {\r\n        resultsText.string += drawable.name + '\\n';\r\n      }\r\n    }\r\n  }\r\n\r\n  //#region Cocos Creator Event Handling\r\n\r\n  /** Called by Cocos Creator. Initializes instance. */\r\n  protected start(): void {\r\n    const { model, resultsText, results } = this;\r\n    if (model == null) {\r\n      return;\r\n    }\r\n    if (resultsText == null) {\r\n      return;\r\n    }\r\n    if (results == null) {\r\n      return;\r\n    }\r\n    this.raycaster = model.getComponent(CubismRaycaster);\r\n    for (let i = 0; i < results.length; i++) {\r\n      results[i] = new CubismRaycastHit();\r\n    }\r\n  }\r\n\r\n  private _mouseDownEventData: math.Vec2 | null = null;\r\n\r\n  private mouseDownEventHandler(event: EventMouse): void {\r\n    this._mouseDownEventData = event.getLocation(new math.Vec2());\r\n  }\r\n\r\n  private bindedMouseDownEventHandler = this.mouseDownEventHandler.bind(this);\r\n\r\n  protected onEnable() {\r\n    input.on(Input.EventType.MOUSE_DOWN, this.bindedMouseDownEventHandler, this);\r\n  }\r\n\r\n  protected onDisable() {\r\n    input.off(Input.EventType.MOUSE_DOWN, this.bindedMouseDownEventHandler, this);\r\n    this._mouseDownEventData = null;\r\n  }\r\n\r\n  /** Called by Cocos Creator. Triggers raycasting. */\r\n  protected update(): void {\r\n    // Return early in case of no user interaction.\r\n    if (this._mouseDownEventData == null) {\r\n      return;\r\n    }\r\n    this.doRaycast();\r\n    this._mouseDownEventData = null;\r\n  }\r\n\r\n  //#endregion\r\n}\r\n"]}