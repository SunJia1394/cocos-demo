{"version":3,"sources":["file:///Users/sunjia/project/cocos-test/cocos-demo/extensions/live2d_cubismsdk_cocoscreator/static/assets/Framework/HarmonicMotion/CubismHarmonicMotionController.ts"],"names":["_decorator","Enum","CCFloat","Component","CubismParameterBlendMode","CubismParameter","ICubismUpdatable","CubismUpdateExecutionOrder","CubismHarmonicMotionParameter","CubismUpdateController","FrameworkComponentExtensionMethods","CoreComponentExtensionMethods","CubismParameterExtensionMethods","ccclass","property","CubismHarmonicMotionController","type","serializable","visible","SYMBOL","defaultChannelCount","_sources","_destinations","bindedOnLateUpdate","onLateUpdate","bind","sources","value","destinations","hasUpdateController","_hasUpdateController","refresh","model","findCubismModel","parameters","getComponentsMany","Array","length","i","getComponent","executionOrder","CUBISM_HARMONIC_MOTION_CONTROLLER","needsUpdateOnEditing","deltaTime","enabled","play","channelTimescales","blendToValue","blendMode","evaluate","start","lateUpdate","resetInEditor","s","Additive"],"mappings":"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","sourcesContent":["/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { _decorator, Enum, CCFloat, Component } from 'cc';\r\nimport CubismParameterBlendMode from '../CubismParameterBlendMode';\r\nimport CubismParameter from '../../Core/CubismParameter';\r\nimport ICubismUpdatable from '../ICubismUpdatable';\r\nimport CubismUpdateExecutionOrder from '../CubismUpdateExecutionOrder';\r\nimport CubismHarmonicMotionParameter from './CubismHarmonicMotionParameter';\r\nimport CubismUpdateController from '../CubismUpdateController';\r\nimport FrameworkComponentExtensionMethods from '../ComponentExtensionMethods';\r\nimport CoreComponentExtensionMethods from '../../Core/ComponentExtensionMethods';\r\nimport CubismParameterExtensionMethods from '../CubismParameterExtensionMethods';\r\nconst { ccclass, property } = _decorator;\r\n\r\n/**\r\n * Controller for {@link CubismHarmonicMotionParameter}s.\r\n *\r\n * **Sealed class.**\r\n */\r\n@ccclass('CubismHarmonicMotionController')\r\nexport default class CubismHarmonicMotionController extends Component implements ICubismUpdatable {\r\n  /** Default number of channels. */\r\n  private readonly defaultChannelCount = 1;\r\n\r\n  /** Blend mode. */\r\n  @property({ type: Enum(CubismParameterBlendMode), serializable: true, visible: true })\r\n  public blendMode: CubismParameterBlendMode = CubismParameterBlendMode.Additive;\r\n\r\n  /** The timescales for each channel. */\r\n  @property({ type: [CCFloat], serializable: true, visible: true })\r\n  public channelTimescales: number[] = [];\r\n\r\n  private _sources: CubismHarmonicMotionParameter[] = [];\r\n  /** Sources. */\r\n  private get sources(): CubismHarmonicMotionParameter[] {\r\n    return this._sources;\r\n  }\r\n  private set sources(value: CubismHarmonicMotionParameter[]) {\r\n    this._sources = value;\r\n  }\r\n\r\n  private _destinations: Array<CubismParameter | null> = [];\r\n  /** Destinations. */\r\n  private get destinations() {\r\n    return this._destinations;\r\n  }\r\n  private set destinations(value: Array<CubismParameter | null>) {\r\n    this._destinations = value;\r\n  }\r\n\r\n  @property({ serializable: true, visible: false })\r\n  private _hasUpdateController: boolean = false;\r\n  /** Model has update controller component. */\r\n  public get hasUpdateController() {\r\n    return this._hasUpdateController;\r\n  }\r\n  public set hasUpdateController(value: boolean) {\r\n    this._hasUpdateController = value;\r\n  }\r\n\r\n  /** Refreshes the controller. Call this method after adding and/or removing {@link CubismHarmonicMotionParameter}. */\r\n  public refresh() {\r\n    const model = CoreComponentExtensionMethods.findCubismModel(this);\r\n\r\n    if (model == null || model.parameters == null) {\r\n      return;\r\n    }\r\n\r\n    // Catch sources and destinations.\r\n    this.sources = FrameworkComponentExtensionMethods.getComponentsMany(\r\n      model.parameters,\r\n      CubismHarmonicMotionParameter\r\n    );\r\n    this.destinations = new Array<CubismParameter>(this.sources.length);\r\n\r\n    for (let i = 0; i < this.sources.length; ++i) {\r\n      this.destinations[i] = this.sources[i].getComponent(CubismParameter);\r\n    }\r\n\r\n    // Get cubism update controller.\r\n    this.hasUpdateController = this.getComponent(CubismUpdateController) != null;\r\n  }\r\n\r\n  /** Called by cubism update controller. Order to invoke OnLateUpdate. */\r\n  public get executionOrder(): number {\r\n    return CubismUpdateExecutionOrder.CUBISM_HARMONIC_MOTION_CONTROLLER;\r\n  }\r\n\r\n  /** Called by cubism update controller. Needs to invoke OnLateUpdate on Editing. */\r\n  public get needsUpdateOnEditing(): boolean {\r\n    return false;\r\n  }\r\n\r\n  /** Called by cubism update controller. Updates controller. */\r\n  protected onLateUpdate(deltaTime: number) {\r\n    // Return if it is not valid or there's nothing to update.\r\n    if (!this.enabled || this.sources == null) {\r\n      return;\r\n    }\r\n\r\n    // Update sources and destinations.\r\n    for (let i = 0; i < this.sources.length; ++i) {\r\n      this.sources[i].play(this.channelTimescales);\r\n\r\n      CubismParameterExtensionMethods.blendToValue(\r\n        this.destinations[i],\r\n        this.blendMode,\r\n        this.sources[i].evaluate()\r\n      );\r\n    }\r\n  }\r\n\r\n  /** ICubismUpdatable Binded callback function. */\r\n  public readonly bindedOnLateUpdate: ICubismUpdatable.CallbackFunction =\r\n    this.onLateUpdate.bind(this);\r\n  /** ICubismUpdatable metadata */\r\n  public readonly [ICubismUpdatable.SYMBOL]: typeof ICubismUpdatable.SYMBOL =\r\n    ICubismUpdatable.SYMBOL;\r\n\r\n  /** Called by Cocos Creator. Makes sure cache is initialized. */\r\n  protected start() {\r\n    // Initialize cache.\r\n    this.refresh();\r\n  }\r\n\r\n  /** Called by Cocos Creator. Updates controller. */\r\n  protected lateUpdate(deltaTime: number) {\r\n    if (!this.hasUpdateController) {\r\n      this.onLateUpdate(deltaTime);\r\n    }\r\n  }\r\n\r\n  /** Called by Cocos Creator. Resets channels. */\r\n  public resetInEditor() {\r\n    // Reset/Initialize channel timescales.\r\n    this.channelTimescales = new Array(this.defaultChannelCount);\r\n\r\n    for (let s = 0; s < this.defaultChannelCount; ++s) {\r\n      this.channelTimescales[s] = 1.0;\r\n    }\r\n  }\r\n}\r\n"]}