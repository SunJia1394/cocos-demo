{"version":3,"sources":["file:///Users/sunjia/project/cocos-test/cocos-demo/extensions/live2d_cubismsdk_cocoscreator/static/assets/Framework/Json/CubismMotion3Json.ts"],"names":["getTrackFromPath","clip","path","i","tracksCount","track","getTrack","isEqualsTrackPath","animation","RealTrack","undefined","pathA","pathB","length","isHierarchyAt","parseHierarchyAt","isComponentAt","parseComponentAt","isPropertyAt","parsePropertyAt","isElementAt","parseElementAt","AnimationClip","CCInteger","_decorator","CubismParameter","CubismPart","CubismRenderController","CubismEyeBlinkController","CubismMouthController","JsonParseUtils","ArrayExtensions","ccclass","property","asArray","asBoolean","asNumber","asString","instantiate","value","rightTangent","rightTangentWeight","leftTangent","leftTangentWeight","RealKeyframeValue","SerializableMeta","constructor","args","duration","fps","loop","curveCount","totalSegmentCount","totalPointCount","areBeziersRestricted","userDataCount","totalUserDataSize","fadeInTime","fadeOutTime","copyWith","equals","other","strictEquals","instantiateFromJson","json","Duration","Fps","CurveCount","TotalSegmentCount","TotalPointCount","Loop","AreBeziersRestricted","FadeInTime","FadeOutTime","UserDataCount","TotalUserDataSize","SerializableCurve","target","id","segments","Array","isEquals","x","y","Target","Id","tempSegments","Segments","num","SerializableUserData","time","Time","Value","DEFAULT","CubismMotion3Json","loadFrom","motion3Json","parse","loadFromJson","loadFromJsonAsset","motion3JsonAsset","version","Version","meta","Meta","userData","arrayedInstantiateFromJson","UserData","curves","Curves","asset","convertCurveSegmentsToKeyframes","keyframes","parsers","convertSteppedCurveToLinerCurver","curve","poseFadeInTime","segmentsCount","index","currentSegmentTypeIsStepped","currentSegmentIsLast","nextSegmentTypeIsStepped","nextSegmentIsLast","toAnimationClipA","shouldImportAsOriginalWorkflow","shouldClearAnimationCurves","isCallFormModelJson","poseJson","console","warn","animationClip","toAnimationClipB","clearTracks","sample","relativePath","TrackPath","animationCurve","toComponent","toProperty","toHierarchy","addTrack","channel","assignSorted","wrapMode","WrapMode","Default","params","push","frame","existFrameIndex","events","findIndex","v","func","offsetGranularity","parseLinearSegment","parseBezierSegment","parseSteppedSegment","parseInverseSteppedSegment","result","position","slope","outTangent","inTangent","keyframe","tangentLength","Math","abs","Number","POSITIVE_INFINITY","tangent","atan2"],"mappings":"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","sourcesContent":["/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { animation, AnimationClip, CCInteger, JsonAsset, _decorator, __private } from 'cc';\r\nimport CubismParameter from '../../Core/CubismParameter';\r\nimport CubismPart from '../../Core/CubismPart';\r\nimport CubismRenderController from '../../Rendering/CubismRenderController';\r\nimport CubismEyeBlinkController from '../CubismEyeBlinkController';\r\nimport CubismMouthController from '../MouthMovement/CubismMouthController';\r\nimport JsonParseUtils from './JsonParseUtils';\r\nimport type CubismPose3Json from './CubismPose3Json';\r\nimport type IStructLike from '../../IStructLike';\r\nimport { ArrayExtensions } from '../../Utils';\r\nconst { ccclass, property } = _decorator;\r\nconst { asArray, asBoolean, asNumber, asString } = JsonParseUtils;\r\n\r\ninterface RealKeyframeValue {\r\n  value: number;\r\n  rightTangent: number;\r\n  rightTangentWeight: number;\r\n  leftTangent: number;\r\n  leftTangentWeight: number;\r\n}\r\n\r\nnamespace RealKeyframeValue {\r\n  export function instantiate(value: number) {\r\n    return {\r\n      value: value,\r\n      rightTangent: 0,\r\n      rightTangentWeight: 0,\r\n      leftTangent: 0,\r\n      leftTangentWeight: 0,\r\n    };\r\n  }\r\n}\r\n\r\ntype RealKeyframe = __private._cocos_core_curves_keyframe_curve__KeyFrame<RealKeyframeValue>;\r\n\r\n/** Delegate */\r\ntype SegmentParser = (segments: number[], result: RealKeyframe[], position: number) => number;\r\n\r\n//#region Json Object Types\r\n\r\n@ccclass('CubismMotion3Json.SerializableMeta')\r\n/** Motion meta info. (struct) */\r\nexport class SerializableMeta implements IStructLike<SerializableMeta> {\r\n  /** Duration in seconds. */\r\n  public readonly duration: number;\r\n\r\n  /** Framerate in seconds. */\r\n  public readonly fps: number;\r\n\r\n  /** True if motion is looping. */\r\n  public readonly loop: boolean;\r\n\r\n  /** Number of curves. */\r\n  public readonly curveCount: number;\r\n\r\n  /** Total number of curve segments. */\r\n  public readonly totalSegmentCount: number;\r\n\r\n  /** Total number of curve points. */\r\n  public readonly totalPointCount: number;\r\n\r\n  /** True if beziers are restricted. */\r\n  public readonly areBeziersRestricted: boolean;\r\n\r\n  /** Total number of UserData. */\r\n  public readonly userDataCount: number;\r\n\r\n  /** Total size of UserData in bytes. */\r\n  public readonly totalUserDataSize: number;\r\n\r\n  /** [Optional] Time of the Fade-In for easing in seconds. */\r\n  public readonly fadeInTime: number;\r\n\r\n  /** [Optional] Time of the Fade-Out for easing in seconds. */\r\n  public readonly fadeOutTime: number;\r\n\r\n  public constructor(\r\n    args: {\r\n      duration?: number;\r\n      fps?: number;\r\n      loop?: boolean;\r\n      curveCount?: number;\r\n      totalSegmentCount?: number;\r\n      totalPointCount?: number;\r\n      areBeziersRestricted?: boolean;\r\n      userDataCount?: number;\r\n      totalUserDataSize?: number;\r\n      fadeInTime?: number;\r\n      fadeOutTime?: number;\r\n    } = {}\r\n  ) {\r\n    this.duration = args.duration ?? 0;\r\n    this.fps = args.fps ?? 0;\r\n    this.loop = args.loop ?? false;\r\n    this.curveCount = args.curveCount ?? 0;\r\n    this.totalSegmentCount = args.totalSegmentCount ?? 0;\r\n    this.totalPointCount = args.totalPointCount ?? 0;\r\n    this.areBeziersRestricted = args.areBeziersRestricted ?? false;\r\n    this.userDataCount = args.userDataCount ?? 0;\r\n    this.totalUserDataSize = args.totalUserDataSize ?? 0;\r\n    this.fadeInTime = args.fadeInTime ?? -1.0;\r\n    this.fadeOutTime = args.fadeOutTime ?? -1.0;\r\n  }\r\n\r\n  public copyWith(\r\n    args: {\r\n      duration?: number;\r\n      fps?: number;\r\n      loop?: boolean;\r\n      curveCount?: number;\r\n      totalSegmentCount?: number;\r\n      totalPointCount?: number;\r\n      areBeziersRestricted?: boolean;\r\n      userDataCount?: number;\r\n      totalUserDataSize?: number;\r\n      fadeInTime?: number;\r\n      fadeOutTime?: number;\r\n    } = {}\r\n  ): SerializableMeta {\r\n    return new SerializableMeta({\r\n      duration: args.duration ?? this.duration,\r\n      fps: args.fps ?? this.fps,\r\n      loop: args.loop ?? this.loop,\r\n      curveCount: args.curveCount ?? this.curveCount,\r\n      totalSegmentCount: args.totalSegmentCount ?? this.totalSegmentCount,\r\n      totalPointCount: args.totalPointCount ?? this.totalPointCount,\r\n      areBeziersRestricted: args.areBeziersRestricted ?? this.areBeziersRestricted,\r\n      userDataCount: args.userDataCount ?? this.userDataCount,\r\n      totalUserDataSize: args.totalUserDataSize ?? this.totalUserDataSize,\r\n      fadeInTime: args.fadeInTime ?? this.fadeInTime,\r\n      fadeOutTime: args.fadeOutTime ?? this.fadeOutTime,\r\n    });\r\n  }\r\n\r\n  public equals(other: SerializableMeta): boolean {\r\n    return this === other\r\n      ? true\r\n      : this.duration == other.duration &&\r\n          this.fps == other.fps &&\r\n          this.loop == other.loop &&\r\n          this.curveCount == other.curveCount &&\r\n          this.totalSegmentCount == other.totalSegmentCount &&\r\n          this.totalPointCount == other.totalPointCount &&\r\n          this.areBeziersRestricted == other.areBeziersRestricted &&\r\n          this.userDataCount == other.userDataCount &&\r\n          this.totalUserDataSize == other.totalUserDataSize &&\r\n          this.fadeInTime == other.fadeInTime &&\r\n          this.fadeOutTime == other.fadeOutTime;\r\n  }\r\n\r\n  public strictEquals(other: SerializableMeta): boolean {\r\n    return this === other;\r\n  }\r\n\r\n  /**\r\n   * **Required properties**\r\n   * - Duration\r\n   * - Fps\r\n   * - CurveCount\r\n   * - TotalSegmentCount\r\n   * - TotalPointCount\r\n   *\r\n   * **Optional properties**\r\n   * - Loop\r\n   * - AreBeziersRestricted\r\n   * - FadeInTime\r\n   * - FadeOutTime\r\n   * - UserDataCount\r\n   * - TotalUserDataSize\r\n   * @param json\r\n   * @returns\r\n   */\r\n  public static instantiateFromJson(json: any): SerializableMeta | undefined {\r\n    if (json == null) {\r\n      return undefined;\r\n    }\r\n    const duration = asNumber(json.Duration);\r\n    const fps = asNumber(json.Fps);\r\n    const curveCount = asNumber(json.CurveCount);\r\n    const totalSegmentCount = asNumber(json.TotalSegmentCount);\r\n    const totalPointCount = asNumber(json.TotalPointCount);\r\n    if (\r\n      duration === undefined ||\r\n      fps === undefined ||\r\n      curveCount === undefined ||\r\n      totalSegmentCount === undefined\r\n    ) {\r\n      return undefined;\r\n    }\r\n\r\n    const loop = asBoolean(json.Loop);\r\n    const areBeziersRestricted = asBoolean(json.AreBeziersRestricted);\r\n    const fadeInTime = asNumber(json.FadeInTime);\r\n    const fadeOutTime = asNumber(json.FadeOutTime);\r\n    const userDataCount = asNumber(json.UserDataCount);\r\n    const totalUserDataSize = asNumber(json.TotalUserDataSize);\r\n\r\n    return new SerializableMeta({\r\n      duration: duration,\r\n      fps: fps,\r\n      loop: loop,\r\n      areBeziersRestricted: areBeziersRestricted,\r\n      curveCount: curveCount,\r\n      totalSegmentCount: totalSegmentCount,\r\n      totalPointCount: totalPointCount,\r\n      userDataCount: userDataCount,\r\n      totalUserDataSize: totalUserDataSize,\r\n      fadeInTime: fadeInTime,\r\n      fadeOutTime: fadeOutTime,\r\n    });\r\n  }\r\n}\r\n\r\n@ccclass('CubismMotion3Json.SerializableCurve')\r\nexport class SerializableCurve implements IStructLike<SerializableCurve> {\r\n  /** Target type. */\r\n  public readonly target: string;\r\n\r\n  /** Id within target. */\r\n  public readonly id: string;\r\n\r\n  /** Flattened curve segments. */\r\n  public readonly segments: Array<number>;\r\n\r\n  /** [Optional] Time of the overall Fade-In for easing in seconds. */\r\n  public readonly fadeInTime: number;\r\n\r\n  /** [Optional] Time of the overall Fade-Out for easing in seconds. */\r\n  public readonly fadeOutTime: number;\r\n\r\n  public constructor(\r\n    args: {\r\n      target?: string;\r\n      id?: string;\r\n      segments?: Array<number>;\r\n      fadeInTime?: number;\r\n      fadeOutTime?: number;\r\n    } = {}\r\n  ) {\r\n    this.target = args.target ?? '';\r\n    this.id = args.id ?? '';\r\n    this.segments = args.segments ?? new Array(0);\r\n    this.fadeInTime = args.fadeInTime ?? -1.0;\r\n    this.fadeOutTime = args.fadeOutTime ?? -1.0;\r\n  }\r\n\r\n  public copyWith(\r\n    args: {\r\n      target?: string;\r\n      id?: string;\r\n      segments?: Array<number>;\r\n      fadeInTime?: number;\r\n      fadeOutTime?: number;\r\n    } = {}\r\n  ): SerializableCurve {\r\n    return new SerializableCurve({\r\n      target: args.target ?? this.target,\r\n      id: args.id ?? this.id,\r\n      segments: args.segments ?? this.segments,\r\n      fadeInTime: args.fadeInTime ?? this.fadeInTime,\r\n      fadeOutTime: args.fadeOutTime ?? this.fadeOutTime,\r\n    });\r\n  }\r\n\r\n  public equals(other: SerializableCurve): boolean {\r\n    return this === other\r\n      ? true\r\n      : this.target == other.target &&\r\n          this.id == other.id &&\r\n          ArrayExtensions.isEquals((x, y) => x == y, this.segments, other.segments) &&\r\n          this.fadeInTime == other.fadeInTime &&\r\n          this.fadeOutTime == other.fadeOutTime;\r\n  }\r\n\r\n  public strictEquals(other: SerializableCurve): boolean {\r\n    return this === other;\r\n  }\r\n\r\n  /**\r\n   * **Required properties**\r\n   * - Target\r\n   * - Id\r\n   * - Segments\r\n   *\r\n   * **Optional properties**\r\n   * - FadeInTime\r\n   * - FadeOutTime\r\n   * @param json\r\n   * @returns\r\n   */\r\n  public static instantiateFromJson(json: any): SerializableCurve | undefined {\r\n    if (json == null) {\r\n      return undefined;\r\n    }\r\n    const target = asString(json.Target);\r\n    const id = asString(json.Id);\r\n    const tempSegments = asArray(json.Segments);\r\n    if (target === undefined || id === undefined || tempSegments === undefined) {\r\n      return undefined;\r\n    }\r\n    const segments = new Array<number>(tempSegments.length);\r\n    for (let i = 0; i < tempSegments.length; i++) {\r\n      const num = asNumber(tempSegments[i]);\r\n      if (num === undefined) {\r\n        return undefined;\r\n      }\r\n      segments[i] = num;\r\n    }\r\n\r\n    const fadeInTime = asNumber(json.FadeInTime);\r\n    const fadeOutTime = asNumber(json.FadeOutTime);\r\n\r\n    return new SerializableCurve({\r\n      target: target,\r\n      id: id,\r\n      segments: segments,\r\n      fadeInTime: fadeInTime,\r\n      fadeOutTime: fadeOutTime,\r\n    });\r\n  }\r\n}\r\n\r\n@ccclass('CubismMotion3Json.SerializableUserData')\r\nexport class SerializableUserData implements IStructLike<SerializableUserData> {\r\n  /** Time in seconds. */\r\n  public readonly time: number;\r\n  /** Content of user data. */\r\n  public readonly value: string;\r\n\r\n  public constructor(args: { time?: number; value?: string } = {}) {\r\n    this.time = args.time ?? 0;\r\n    this.value = args.value ?? '';\r\n  }\r\n\r\n  public copyWith(args: { time?: number; value?: string } = {}): SerializableUserData {\r\n    return new SerializableUserData({\r\n      time: args.time ?? this.time,\r\n      value: args.value ?? this.value,\r\n    });\r\n  }\r\n\r\n  public equals(other: SerializableUserData): boolean {\r\n    return this === other ? true : this.time == other.time && this.value == other.value;\r\n  }\r\n\r\n  public strictEquals(other: SerializableUserData): boolean {\r\n    return this === other;\r\n  }\r\n\r\n  /**\r\n   * **Required properties**\r\n   * - Time\r\n   * - Value\r\n   * @param json\r\n   * @returns\r\n   */\r\n  public static instantiateFromJson(json: any): SerializableUserData | undefined {\r\n    if (json == null) {\r\n      return undefined;\r\n    }\r\n    const time = asNumber(json.Time);\r\n    const value = asString(json.Value);\r\n    if (time === undefined || value === undefined) {\r\n      return undefined;\r\n    }\r\n    return new SerializableUserData({\r\n      time: time,\r\n      value: value,\r\n    });\r\n  }\r\n}\r\n\r\nexport namespace SerializableMeta {\r\n  export const DEFAULT = new SerializableMeta();\r\n}\r\n\r\nexport namespace SerializableCurve {\r\n  export const DEFAULT = new SerializableCurve();\r\n}\r\n\r\nexport namespace SerializableUserData {\r\n  export const DEFAULT = new SerializableUserData();\r\n}\r\n//#endregion\r\n\r\n/**\r\n * Contains Cubism motion3.json data.\r\n *\r\n * **Sealed class.**\r\n */\r\n@ccclass('CubismMotion3Json')\r\nexport default class CubismMotion3Json {\r\n  private constructor() {}\r\n\r\n  //#region Load Methods\r\n\r\n  /**\r\n   * Loads a motion3.json asset.\r\n   * @param motion3Json motion3.json to deserialize.\r\n   * @returns Deserialized motion3.json on success; null otherwise.\r\n   */\r\n  public static loadFrom(motion3Json: string): CubismMotion3Json | null {\r\n    const json = JsonParseUtils.parse(motion3Json);\r\n    if (!json) {\r\n      return null;\r\n    }\r\n    return this.loadFromJson(json);\r\n  }\r\n\r\n  /**\r\n   * Loads a motion3.json asset.\r\n   * @param motion3JsonAsset motion3.json to deserialize.\r\n   * @returns Deserialized motion3.json on success; null otherwise.\r\n   */\r\n  public static loadFromJsonAsset(motion3JsonAsset: JsonAsset): CubismMotion3Json | null {\r\n    if (motion3JsonAsset.json == null) {\r\n      return null;\r\n    }\r\n    return this.loadFromJson(motion3JsonAsset.json);\r\n  }\r\n\r\n  private static loadFromJson(json: any) {\r\n    if (json == null) {\r\n      return null;\r\n    }\r\n    const version = asNumber(json.Version);\r\n    const meta = SerializableMeta.instantiateFromJson(json.Meta);\r\n    const userData =\r\n      JsonParseUtils.arrayedInstantiateFromJson(\r\n        json.UserData,\r\n        SerializableUserData.instantiateFromJson\r\n      ) ?? new Array<SerializableUserData>(0);\r\n    const curves = JsonParseUtils.arrayedInstantiateFromJson(\r\n      json.Curves,\r\n      SerializableCurve.instantiateFromJson\r\n    );\r\n    if (version === undefined || meta === undefined || curves === undefined) {\r\n      return null;\r\n    }\r\n\r\n    const asset = new CubismMotion3Json();\r\n    asset.version = version;\r\n    asset.meta = meta;\r\n    asset.userData = userData;\r\n    asset.curves = curves;\r\n    return asset;\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region Json Data\r\n\r\n  /** The model3.json format version. */\r\n  @property(CCInteger)\r\n  public version: number = 0;\r\n\r\n  /** Motion meta info. */\r\n  @property(SerializableMeta)\r\n  public meta: SerializableMeta = new SerializableMeta();\r\n\r\n  /** Curves. */\r\n  @property([SerializableCurve])\r\n  public curves: SerializableCurve[] = new Array(0);\r\n\r\n  /** User data. */\r\n  @property([SerializableUserData])\r\n  public userData: SerializableUserData[] = new Array(0);\r\n\r\n  /**\r\n   * Converts motion curve segments into Keyframes.\r\n   * @param segments Data to convert.\r\n   * @returns Keyframes.\r\n   */\r\n  public static convertCurveSegmentsToKeyframes(segments: Array<number>): Array<RealKeyframe> {\r\n    // Return early on invalid input.\r\n    if (segments.length < 1) {\r\n      return new Array(0);\r\n    }\r\n    // Initialize container for keyframes.\r\n    const keyframes = new Array<RealKeyframe>(1);\r\n    keyframes[0] = [segments[0], RealKeyframeValue.instantiate(segments[1])];\r\n\r\n    // Parse segments.\r\n    for (var i = 2; i < segments.length; ) {\r\n      i = this.parsers(segments[i])(segments, keyframes, i);\r\n    }\r\n\r\n    return keyframes;\r\n  }\r\n\r\n  /**\r\n   * Converts stepped curves to liner curves.\r\n   * @param curve Data to convert.\r\n   * @param poseFadeInTime\r\n   * @returns Animation curve.\r\n   */\r\n  public static convertSteppedCurveToLinerCurver(\r\n    curve: SerializableCurve,\r\n    poseFadeInTime: number\r\n  ): Array<RealKeyframe> {\r\n    poseFadeInTime = poseFadeInTime < 0 ? 0.5 : poseFadeInTime;\r\n\r\n    const segments = curve.segments;\r\n    let segmentsCount = 2;\r\n\r\n    for (var index = 2; index < segments.length; index += 3) {\r\n      // if current segment type is stepped and\r\n      // next segment type is stepped or next segment is last segment\r\n      // then convert segment type to liner.\r\n      const currentSegmentTypeIsStepped = curve.segments[index] == 2;\r\n      const currentSegmentIsLast = index == curve.segments.length - 3;\r\n      const nextSegmentTypeIsStepped = currentSegmentIsLast\r\n        ? false\r\n        : curve.segments[index + 3] == 2;\r\n      const nextSegmentIsLast = currentSegmentIsLast\r\n        ? false\r\n        : index + 3 == curve.segments.length - 3;\r\n      if (currentSegmentTypeIsStepped && (nextSegmentTypeIsStepped || nextSegmentIsLast)) {\r\n        segments.length += 3;\r\n        segments[segmentsCount + 0] = 0;\r\n        segments[segmentsCount + 1] = curve.segments[index + 1];\r\n        segments[segmentsCount + 2] = curve.segments[index - 1];\r\n        segments[segmentsCount + 3] = 0;\r\n        segments[segmentsCount + 4] = curve.segments[index + 1] + poseFadeInTime;\r\n        segments[segmentsCount + 5] = curve.segments[index + 2];\r\n        segmentsCount += 6;\r\n      } else if (curve.segments[index] == 1) {\r\n        segments[segmentsCount + 0] = curve.segments[index + 0];\r\n        segments[segmentsCount + 1] = curve.segments[index + 1];\r\n        segments[segmentsCount + 2] = curve.segments[index + 2];\r\n        segments[segmentsCount + 3] = curve.segments[index + 3];\r\n        segments[segmentsCount + 4] = curve.segments[index + 4];\r\n        segments[segmentsCount + 5] = curve.segments[index + 5];\r\n        segments[segmentsCount + 6] = curve.segments[index + 6];\r\n        index += 4;\r\n        segmentsCount += 7;\r\n      } else {\r\n        segments[segmentsCount + 0] = curve.segments[index + 0];\r\n        segments[segmentsCount + 1] = curve.segments[index + 1];\r\n        segments[segmentsCount + 2] = curve.segments[index + 2];\r\n        segmentsCount += 3;\r\n      }\r\n    }\r\n\r\n    return CubismMotion3Json.convertCurveSegmentsToKeyframes(segments);\r\n  }\r\n\r\n  /**\r\n   * Instantiates an AnimationClip.\r\n   * Note this method generates AnimationClip.legacy clips when called at runtime.\r\n   * @param shouldImportAsOriginalWorkflow Should import as original workflow.\r\n   * @param shouldClearAnimationCurves Should clear animation clip curves.\r\n   * @param isCallFormModelJson Is function call form CubismModel3Json.\r\n   * @param poseJson pose3.json asset.\r\n   * @returns The instantiated clip on success; null otherwise.\r\n   */\r\n  public toAnimationClipA(\r\n    shouldImportAsOriginalWorkflow: boolean = false,\r\n    shouldClearAnimationCurves: boolean = false,\r\n    isCallFormModelJson: boolean = false,\r\n    poseJson: CubismPose3Json | null = null\r\n  ): AnimationClip {\r\n    // Check béziers restriction flag.\r\n    if (!this.meta.areBeziersRestricted) {\r\n      console.warn(\r\n        'Béziers are not restricted and curves might be off. Please export motions from Cubism in restricted mode for perfect match.'\r\n      );\r\n    }\r\n    // Create animation clip.\r\n    const animationClip = new AnimationClip();\r\n\r\n    return this.toAnimationClipB(\r\n      animationClip,\r\n      shouldImportAsOriginalWorkflow,\r\n      shouldClearAnimationCurves,\r\n      isCallFormModelJson,\r\n      poseJson\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Instantiates an AnimationClip.\r\n   * Note this method generates AnimationClip.legacy clips when called at runtime.\r\n   * @param animationClip Previous animation clip.\r\n   * @param shouldImportAsOriginalWorkflow Should import as original workflow.\r\n   * @param shouldClearAnimationCurves Should clear animation clip curves.\r\n   * @param isCallFormModelJson Is function call form CubismModel3Json.\r\n   * @param poseJson pose3.json asset.\r\n   * @returns The instantiated clip on success; null otherwise.\r\n   */\r\n  public toAnimationClipB(\r\n    animationClip: AnimationClip,\r\n    shouldImportAsOriginalWorkflow: boolean = false,\r\n    shouldClearAnimationCurves: boolean = false,\r\n    isCallFormModelJson: boolean = false,\r\n    poseJson: CubismPose3Json | null = null\r\n  ): AnimationClip {\r\n    // Clear curves.\r\n    if (\r\n      shouldClearAnimationCurves &&\r\n      (!shouldImportAsOriginalWorkflow || (isCallFormModelJson && shouldImportAsOriginalWorkflow))\r\n    ) {\r\n      animationClip.clearTracks();\r\n    }\r\n\r\n    animationClip.sample = this.meta.fps;\r\n\r\n    // Convert curves.\r\n    for (let i = 0; i < this.curves.length; i++) {\r\n      const curve = this.curves[i];\r\n\r\n      // If should import as original workflow mode, skip add part opacity curve when call not from model3.json.\r\n      if (curve.target == 'PartOpacity' && shouldImportAsOriginalWorkflow && !isCallFormModelJson) {\r\n        continue;\r\n      }\r\n\r\n      let relativePath = new animation.TrackPath();\r\n      let animationCurve = CubismMotion3Json.convertCurveSegmentsToKeyframes(curve.segments);\r\n\r\n      // Create model binding.\r\n      if (curve.target == 'Model') {\r\n        // Bind opacity.\r\n        if (curve.id == 'Opacity') {\r\n          relativePath = new animation.TrackPath()\r\n            .toComponent(CubismRenderController)\r\n            .toProperty('opacity');\r\n        }\r\n        // Bind eye-blink.\r\n        else if (curve.id == 'EyeBlink') {\r\n          relativePath = new animation.TrackPath()\r\n            .toComponent(CubismEyeBlinkController)\r\n            .toProperty('EyeOpening');\r\n        }\r\n\r\n        // Bind lip-sync.\r\n        else if (curve.id == 'LipSync') {\r\n          relativePath = new animation.TrackPath()\r\n            .toComponent(CubismMouthController)\r\n            .toProperty('MouthOpening');\r\n        }\r\n      }\r\n\r\n      // Create parameter binding.\r\n      else if (curve.target == 'Parameter') {\r\n        relativePath = new animation.TrackPath()\r\n          .toHierarchy('Parameters/' + curve.id)\r\n          .toComponent(CubismParameter)\r\n          .toProperty('value');\r\n      }\r\n\r\n      // Create part opacity binding.\r\n      else if (curve.target == 'PartOpacity') {\r\n        relativePath = new animation.TrackPath()\r\n          .toHierarchy('Parts/' + curve.id)\r\n          .toComponent(CubismPart)\r\n          .toProperty('opacity');\r\n\r\n        // original workflow.\r\n        if (shouldImportAsOriginalWorkflow && poseJson != null && poseJson.fadeInTime != 0.0) {\r\n          let track = CubismMotion3Json.convertSteppedCurveToLinerCurver(\r\n            curve,\r\n            poseJson.fadeInTime\r\n          );\r\n        }\r\n      }\r\n\r\n      let track = getTrackFromPath(animationClip, relativePath);\r\n      if (!track) {\r\n        track = new animation.RealTrack();\r\n        track.path = relativePath;\r\n        animationClip.addTrack(track);\r\n      }\r\n      track.channel.curve.assignSorted(animationCurve);\r\n    }\r\n\r\n    animationClip.duration = this.meta.duration;\r\n    if (this.meta.loop) {\r\n      animationClip.wrapMode = AnimationClip.WrapMode.Loop;\r\n    } else {\r\n      animationClip.wrapMode = AnimationClip.WrapMode.Default;\r\n    }\r\n\r\n    if (this.userData.length > 0) {\r\n      for (let i = 0; i < this.userData.length; i++) {\r\n        const params = new Array<string>();\r\n        params.push(this.userData[i].value);\r\n        const frame = this.userData[i].time;\r\n        // 指定frameにeventがなければ新規追加 あれば更新\r\n        const existFrameIndex = animationClip.events.findIndex((v) => v.frame === frame);\r\n        if (existFrameIndex === -1) {\r\n          animationClip.events.push({ frame: frame, func: `CubismMotionEvent`, params: params });\r\n        } else {\r\n          animationClip.events[existFrameIndex] = { frame: frame, func: `CubismMotionEvent`, params: params };\r\n        }\r\n      }\r\n    }\r\n\r\n    return animationClip;\r\n  }\r\n\r\n  /** Offset to use for setting of keyframes. */\r\n  private static get offsetGranularity() {\r\n    return 0.01;\r\n  }\r\n\r\n  /** Available segment parsers. */\r\n  private static parsers(id: number): SegmentParser {\r\n    switch (id) {\r\n      case 0:\r\n        return CubismMotion3Json.parseLinearSegment;\r\n      case 1:\r\n        return CubismMotion3Json.parseBezierSegment;\r\n      case 2:\r\n        return CubismMotion3Json.parseSteppedSegment;\r\n      case 3:\r\n        return CubismMotion3Json.parseInverseSteppedSegment;\r\n      default:\r\n        console.warn('CubismMotion3Json.Parsers: Called default case in switch statement.');\r\n        return CubismMotion3Json.parseLinearSegment;\r\n    }\r\n  }\r\n\r\n  /** Parses a linear segment. */\r\n  private static parseLinearSegment(\r\n    segments: Array<number>,\r\n    result: Array<RealKeyframe>,\r\n    position: number\r\n  ): number {\r\n    // return position: int\r\n    // Compute slope.\r\n    const length = segments[position + 1] - result[result.length - 1][0];\r\n    const slope = (segments[position + 2] - result[result.length - 1][1].value) / length;\r\n\r\n    // Determine tangents.\r\n    const outTangent = slope;\r\n    const inTangent = outTangent;\r\n\r\n    // Create keyframes.\r\n    let keyframe: RealKeyframe = [\r\n      result[result.length - 1][0],\r\n      RealKeyframeValue.instantiate(result[result.length - 1][1].value),\r\n    ];\r\n    keyframe[1].leftTangent = result[result.length - 1][1].leftTangent;\r\n    keyframe[1].rightTangent = outTangent;\r\n\r\n    result[result.length - 1] = keyframe;\r\n\r\n    keyframe = [segments[position + 1], RealKeyframeValue.instantiate(segments[position + 2])];\r\n    keyframe[1].leftTangent = inTangent;\r\n    keyframe[1].rightTangent = 0;\r\n\r\n    result.push(keyframe);\r\n\r\n    // Update position.\r\n    return position + 3;\r\n  }\r\n\r\n  /** Parses a bezier segment. */\r\n  private static parseBezierSegment(\r\n    segments: Array<number>,\r\n    result: Array<RealKeyframe>,\r\n    position: number\r\n  ): number {\r\n    // Compute tangents.\r\n    const tangentLength = Math.abs(result[result.length - 1][0] - segments[position + 5]) * (1 / 3);\r\n\r\n    const outTangent =\r\n      (segments[position + 2] - result[result.length - 1][1].value) / tangentLength;\r\n    const inTangent = (segments[position + 6] - segments[position + 4]) / tangentLength;\r\n\r\n    // Create keyframes.\r\n    let keyframe: RealKeyframe = [\r\n      result[result.length - 1][0],\r\n      RealKeyframeValue.instantiate(result[result.length - 1][1].value),\r\n    ];\r\n\r\n    keyframe[1].leftTangent = result[result.length - 1][1].leftTangent;\r\n    keyframe[1].rightTangent = outTangent;\r\n\r\n    result[result.length - 1] = keyframe;\r\n\r\n    keyframe = [segments[position + 5], RealKeyframeValue.instantiate(segments[position + 6])];\r\n    keyframe[1].leftTangent = inTangent;\r\n    keyframe[1].rightTangent = 0;\r\n    result.push(keyframe);\r\n\r\n    // Update position.\r\n    return position + 7;\r\n  }\r\n\r\n  /** Parses a stepped segment. */\r\n  private static parseSteppedSegment(\r\n    segments: Array<number>,\r\n    result: Array<RealKeyframe>,\r\n    position: number\r\n  ): number {\r\n    // Create keyframe.\r\n    const keyframe: RealKeyframe = [\r\n      segments[position + 1],\r\n      RealKeyframeValue.instantiate(segments[position + 2]),\r\n    ];\r\n    keyframe[1].leftTangent = Number.POSITIVE_INFINITY;\r\n    result.push(keyframe);\r\n\r\n    // Update position.\r\n    return position + 3;\r\n  }\r\n\r\n  /** Parses a inverse-stepped segment. */\r\n  private static parseInverseSteppedSegment(\r\n    segments: Array<number>,\r\n    result: Array<RealKeyframe>,\r\n    position: number\r\n  ): number {\r\n    // Compute tangents.\r\n    let keyframe = result[result.length - 1];\r\n    const tangent = Math.atan2(\r\n      segments[position + 2] - keyframe[1].value,\r\n      segments[position + 1] - keyframe[0]\r\n    );\r\n    keyframe[1].rightTangent = tangent;\r\n    result[result.length - 1] = keyframe;\r\n\r\n    keyframe = [\r\n      keyframe[0] + CubismMotion3Json.offsetGranularity,\r\n      RealKeyframeValue.instantiate(segments[position + 2]),\r\n    ];\r\n    keyframe[1].leftTangent = tangent;\r\n    keyframe[1].rightTangent = 0;\r\n    result.push(keyframe);\r\n\r\n    keyframe = [segments[position + 1], RealKeyframeValue.instantiate(segments[position + 2])];\r\n    keyframe[1].leftTangent = 0;\r\n    result.push(keyframe);\r\n\r\n    // Update position.\r\n    return position + 3;\r\n  }\r\n}\r\n\r\nfunction getTrackFromPath(\r\n  clip: AnimationClip,\r\n  path: animation.TrackPath\r\n): animation.RealTrack | undefined {\r\n  for (let i = 0; i < clip.tracksCount; i++) {\r\n    const track = clip.getTrack(i);\r\n    if (isEqualsTrackPath(track.path, path) && track instanceof animation.RealTrack) {\r\n      return track;\r\n    }\r\n  }\r\n  return undefined;\r\n}\r\n\r\nfunction isEqualsTrackPath(pathA: animation.TrackPath, pathB: animation.TrackPath) {\r\n  if (pathA.length != pathB.length) {\r\n    return false;\r\n  }\r\n  for (let i = 0; i < pathA.length; i++) {\r\n    if (pathA.isHierarchyAt(i)) {\r\n      if (!pathB.isHierarchyAt(i)) {\r\n        return false;\r\n      }\r\n      if (pathA.parseHierarchyAt(i) != pathB.parseHierarchyAt(i)) {\r\n        return false;\r\n      } else {\r\n        continue;\r\n      }\r\n    }\r\n\r\n    if (pathA.isComponentAt(i)) {\r\n      if (!pathB.isComponentAt(i)) {\r\n        return false;\r\n      }\r\n      if (pathA.parseComponentAt(i) != pathB.parseComponentAt(i)) {\r\n        return false;\r\n      } else {\r\n        continue;\r\n      }\r\n    }\r\n\r\n    if (pathA.isPropertyAt(i)) {\r\n      if (!pathB.isPropertyAt(i)) {\r\n        return false;\r\n      }\r\n      if (pathA.parsePropertyAt(i) != pathB.parsePropertyAt(i)) {\r\n        return false;\r\n      } else {\r\n        continue;\r\n      }\r\n    }\r\n\r\n    if (pathA.isElementAt(i)) {\r\n      if (!pathB.isElementAt(i)) {\r\n        return false;\r\n      }\r\n      if (pathA.parseElementAt(i) != pathB.parseElementAt(i)) {\r\n        return false;\r\n      } else {\r\n        continue;\r\n      }\r\n    }\r\n  }\r\n  return true;\r\n}\r\n"]}