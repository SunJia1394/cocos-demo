{"version":3,"sources":["file:///Users/sunjia/project/cocos-test/cocos-demo/extensions/live2d_cubismsdk_cocoscreator/static/assets/Framework/CubismEyeBlinkController.ts"],"names":["CCFloat","Component","Enum","_decorator","ComponentExtensionMethods","CoreComponentExtensionMethods","CubismEyeBlinkParameter","CubismParameterBlendMode","ICubismUpdatable","CubismParameter","CubismUpdateExecutionOrder","CubismUpdateController","CubismParameterExtensionMethods","ccclass","property","CubismEyeBlinkController","type","visible","serializable","range","SYMBOL","_destinations","bindedOnLateUpdate","onLateUpdate","bind","destinations","value","hasUpdateController","_hasUpdateController","refresh","model","findCubismModel","tags","parameters","getComponentsMany","Array","length","i","getComponent","executionOrder","CUBISM_EYE_BLINK_CONTROLLER","needsUpdateOnEditing","enabled","blendToValueArray","blendMode","eyeOpening","start","lateUpdate","Multiply"],"mappings":"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","sourcesContent":["/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { CCFloat, Component, Enum, _decorator } from 'cc';\r\nimport ComponentExtensionMethods from './ComponentExtensionMethods';\r\nimport CoreComponentExtensionMethods from '../Core/ComponentExtensionMethods';\r\nimport CubismEyeBlinkParameter from './CubismEyeBlinkParameter';\r\nimport CubismParameterBlendMode from './CubismParameterBlendMode';\r\nimport ICubismUpdatable from './ICubismUpdatable';\r\nimport CubismParameter from '../Core/CubismParameter';\r\nimport CubismUpdateExecutionOrder from './CubismUpdateExecutionOrder';\r\nimport CubismUpdateController from './CubismUpdateController';\r\nimport CubismParameterExtensionMethods from './CubismParameterExtensionMethods';\r\nconst { ccclass, property } = _decorator;\r\n\r\n/**\r\n * {@link CubismEyeBlinkParameter} controller.\r\n *\r\n * **Sealed class**\r\n */\r\n@ccclass('CubismEyeBlinkController')\r\nexport default class CubismEyeBlinkController extends Component implements ICubismUpdatable {\r\n  /** Blend mode. */\r\n  @property({ type: Enum(CubismParameterBlendMode), visible: true, serializable: true })\r\n  public blendMode: CubismParameterBlendMode = CubismParameterBlendMode.Multiply;\r\n\r\n  /** Opening of the eyes. */\r\n  @property({ type: CCFloat, visible: true, serializable: true, range: [0.0, 1.0, 0.01] })\r\n  public eyeOpening: number = 1.0;\r\n\r\n  /** Eye blink parameters cache. */\r\n  private _destinations: (CubismParameter | null)[] | null = null;\r\n  public get destinations(): (CubismParameter | null)[] | null {\r\n    return this._destinations;\r\n  }\r\n  public set destinations(value: (CubismParameter | null)[] | null) {\r\n    this._destinations = value;\r\n  }\r\n\r\n  /** Model has update controller component. */\r\n  @property({ visible: false, serializable: false })\r\n  private _hasUpdateController: boolean = false;\r\n  public get hasUpdateController(): boolean {\r\n    return this._hasUpdateController;\r\n  }\r\n  public set hasUpdateController(value: boolean) {\r\n    this._hasUpdateController = value;\r\n  }\r\n\r\n  /** Refreshes controller. Call this method after adding and/or removing <see cref=\"CubismEyeBlinkParameter\"/>s. */\r\n  public refresh(): void {\r\n    const model = CoreComponentExtensionMethods.findCubismModel(this);\r\n\r\n    // Fail silently...\r\n    if (model == null) {\r\n      return;\r\n    }\r\n\r\n    // Cache destinations.\r\n    const tags =\r\n      model.parameters != null\r\n        ? ComponentExtensionMethods.getComponentsMany(model.parameters, CubismEyeBlinkParameter)\r\n        : null;\r\n\r\n    this.destinations = new Array(tags?.length ?? 0);\r\n\r\n    for (var i = 0; i < this.destinations.length; i++) {\r\n      this.destinations[i] = tags![i].getComponent(CubismParameter);\r\n    }\r\n\r\n    // Get cubism update controller.\r\n    this.hasUpdateController = this.getComponent(CubismUpdateController) != null;\r\n  }\r\n\r\n  /** Called by cubism update controller. Order to invoke OnLateUpdate. */\r\n  public get executionOrder(): number {\r\n    return CubismUpdateExecutionOrder.CUBISM_EYE_BLINK_CONTROLLER;\r\n  }\r\n\r\n  /** Called by cubism update controller. Needs to invoke OnLateUpdate on Editing. */\r\n  public get needsUpdateOnEditing(): boolean {\r\n    return false;\r\n  }\r\n\r\n  /** Called by cubism update controller. Updates controller. */\r\n  public onLateUpdate(): void {\r\n    // Fail silently.\r\n    if (!this.enabled || this.destinations == null) {\r\n      return;\r\n    }\r\n\r\n    // Apply value.\r\n    CubismParameterExtensionMethods.blendToValueArray(\r\n      this.destinations,\r\n      this.blendMode,\r\n      this.eyeOpening\r\n    );\r\n  }\r\n\r\n  //#region Cocos Creator Event Handling\r\n\r\n  /** Called by Cocos Creator. Makes sure cache is initialized. */\r\n  protected start(): void {\r\n    // Initialize cache.\r\n    this.refresh();\r\n  }\r\n\r\n  /** Called by Cocos Creator. */\r\n  protected lateUpdate(): void {\r\n    if (!this.hasUpdateController) {\r\n      this.onLateUpdate();\r\n    }\r\n  }\r\n\r\n  //#endregion\r\n\r\n  /** ICubismUpdatable Binded callback function. */\r\n  public readonly bindedOnLateUpdate = this.onLateUpdate.bind(this);\r\n  /** ICubismUpdatable metadata */\r\n  public readonly [ICubismUpdatable.SYMBOL]: typeof ICubismUpdatable.SYMBOL =\r\n    ICubismUpdatable.SYMBOL;\r\n}\r\n"]}