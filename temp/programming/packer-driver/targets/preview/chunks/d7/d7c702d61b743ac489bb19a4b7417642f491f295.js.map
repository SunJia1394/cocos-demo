{"version":3,"sources":["file:///Users/sunjia/project/cocos/NewProject_1/extensions/live2d_cubismsdk_cocoscreator/static/assets/Framework/Expression/CubismExpressionController.ts"],"names":["CCInteger","Component","game","math","_decorator","ComponentExtensionMethods","CubismParameterBlendMode","CubismParameterExtensionMethods","CubismUpdateController","CubismUpdateExecutionOrder","ICubismUpdatable","CubismFadeMath","CubismExpressionList","CubismPlayingExpression","ccclass","property","CubismExpressionController","type","serializable","visible","SYMBOL","_model","_playingExpressions","Array","_lastExpressionIndex","bindedOnLateUpdate","onLateUpdate","bind","hasUpdateController","_hasUpdateController","value","startExpression","expressionsList","cubismExpressionObjects","currentExpressionIndex","playingExpressions","length","playingExpression","expressionEndTime","expressionUserTime","fadeOutTime","console","error","palyingExpression","create","push","executionOrder","CUBISM_EXPRESSION_CONTROLLER","needsUpdateOnEditing","enabled","expressionIndex","deltaTime","fadeIn","Math","abs","fadeInTime","EPSILON","getEasingSine","fadeOut","weight","i","destinations","destination","blend","Additive","addToValue","Multiply","multiplyValueBy","Override","onEnable","findCubismModel","getComponent","lateUpdate"],"mappings":";;;;;;;;;;;;;;;;AAOoBA,MAAAA,S,OAAAA,S;AAAWC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,U,OAAAA,U;;AAC/CC,MAAAA,yB;;AACAC,MAAAA,wB;;AACAC,MAAAA,+B;;AACAC,MAAAA,sB;;AACAC,MAAAA,0B;;AACAC,MAAAA,gB;;AACAC,MAAAA,c;;AACAC,MAAAA,oB;;AACAC,MAAAA,uB;;;;AAhBP;AACA;AACA;AACA;AACA;AACA;;;;;OAaM;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBX,U;;yBAGTY,0B,WADpBF,OAAO,CAAC,4BAAD,C,UAKLC,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEL,oBAAR;AAA8BM,QAAAA,YAAY,EAAE,IAA5C;AAAkDC,QAAAA,OAAO,EAAE;AAA3D,OAAD,C,UAORJ,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEjB,SAAR;AAAmBkB,QAAAA,YAAY,EAAE,IAAjC;AAAuCC,QAAAA,OAAO,EAAE;AAAhD,OAAD,C,UASRJ,QAAQ,CAAC;AAAEG,QAAAA,YAAY,EAAE,IAAhB;AAAsBC,QAAAA,OAAO,EAAE;AAA/B,OAAD,C,oDAoLQT,gBAAgB,CAACU,M,EAzMpC,MACqBJ,0BADrB,SACwDf,SADxD,CAC8F;AAAA;AAAA;;AAC5F;;AAEA;AAH4F;;AAO5F;AAP4F,eAQpFoB,MARoF,GAQvD,IARuD;;AAU5F;AAV4F;;AAc5F;AAd4F,eAepFC,mBAfoF,GAe9D,IAAIC,KAAJ,EAf8D;;AAiB5F;AAjB4F,eAkBpFC,oBAlBoF,GAkBrD,CAAC,CAlBoD;;AAkBjD;AAlBiD;;AAAA,eAkL5EC,kBAlL4E,GAmL1F,KAAKC,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAnL0F;AAsM5F;AAtM4F,wCAyM1FjB,gBAAgB,CAACU,MAzMyE;AAAA;;AAuB5F;AAC8B,YAAnBQ,mBAAmB,GAAG;AAC/B,iBAAO,KAAKC,oBAAZ;AACD;;AAC6B,YAAnBD,mBAAmB,CAACE,KAAD,EAAiB;AAC7C,eAAKD,oBAAL,GAA4BC,KAA5B;AACD,SA7B2F,CA+B5F;;AAEA;;;AACQC,QAAAA,eAAe,GAAS;AAC9B;AACA,cAAI,KAAKC,eAAL,IAAwB,IAAxB,IAAgC,KAAKA,eAAL,CAAqBC,uBAArB,IAAgD,IAApF,EAA0F;AACxF;AACD,WAJ6B,CAM9B;;;AACA,eAAKT,oBAAL,GAA4B,KAAKU,sBAAjC,CAP8B,CAS9B;;AACA,cAAMC,kBAAkB,GAAG,KAAKb,mBAAhC;;AACA,cAAIa,kBAAkB,CAACC,MAAnB,GAA4B,CAAhC,EAAmC;AACjC,gBAAMC,iBAAiB,GAAGF,kBAAkB,CAACA,kBAAkB,CAACC,MAAnB,GAA4B,CAA7B,CAA5C;AACAC,YAAAA,iBAAiB,CAACC,iBAAlB,GACED,iBAAiB,CAACE,kBAAlB,GAAuCF,iBAAiB,CAACG,WAD3D;AAEAL,YAAAA,kBAAkB,CAACA,kBAAkB,CAACC,MAAnB,GAA4B,CAA7B,CAAlB,GAAoDC,iBAApD;AACD;;AAED,cAAML,eAAe,GAAG,KAAKA,eAA7B,CAlB8B,CAoB9B;;AACA,cACE,KAAKE,sBAAL,GAA8B,CAA9B,IACA,KAAKA,sBAAL,IAA+BF,eAAe,CAACC,uBAAhB,CAAwCG,MAFzE,EAGE;AACA;AACD;;AAED,cAAI,KAAKf,MAAL,IAAe,IAAnB,EAAyB;AACvBoB,YAAAA,OAAO,CAACC,KAAR,CAAc,8DAAd;AACA;AACD;;AAED,cAAMC,iBAAiB,GAAG9B,uBAAuB,CAAC+B,MAAxB,CACxB,KAAKvB,MADmB,EAExBW,eAAe,CAACC,uBAAhB,CAAwC,KAAKC,sBAA7C,CAFwB,CAA1B;;AAKA,cAAIS,iBAAiB,IAAI,IAAzB,EAA+B;AAC7B;AACD,WAxC6B,CA0C9B;;;AACAR,UAAAA,kBAAkB,CAACU,IAAnB,CAAwBF,iBAAxB;AACD;AAED;;;AACyB,YAAdG,cAAc,GAAW;AAClC,iBAAOrC,0BAA0B,CAACsC,4BAAlC;AACD;AAED;;;AAC+B,YAApBC,oBAAoB,GAAY;AACzC,iBAAO,KAAP;AACD;AAED;;;AACOtB,QAAAA,YAAY,GAAS;AAC1B;AACA,cAAI,CAAC,KAAKuB,OAAN,IAAiB,KAAK5B,MAAL,IAAe,IAApC,EAA0C;AACxC;AACD,WAJyB,CAK1B;;;AACA,cAAI,KAAKa,sBAAL,IAA+B,KAAKV,oBAAxC,EAA8D;AAC5D,iBAAKO,eAAL;AACD,WARyB,CAS1B;;;AACA,eACE,IAAImB,eAAe,GAAG,CADxB,EAEEA,eAAe,GAAG,KAAK5B,mBAAL,CAAyBc,MAF7C,EAGE,EAAEc,eAHJ,EAIE;AACA,gBAAMb,iBAAiB,GAAG,KAAKf,mBAAL,CAAyB4B,eAAzB,CAA1B,CADA,CAEA;;AACAb,YAAAA,iBAAiB,CAACE,kBAAlB,IAAwCrC,IAAI,CAACiD,SAA7C,CAHA,CAIA;;AACA,gBAAMC,MAAM,GACVC,IAAI,CAACC,GAAL,CAASjB,iBAAiB,CAACkB,UAA3B,IAAyCpD,IAAI,CAACqD,OAA9C,GACI,GADJ,GAEI7C,cAAc,CAAC8C,aAAf,CACEpB,iBAAiB,CAACE,kBAAlB,GAAuCF,iBAAiB,CAACkB,UAD3D,CAHN;AAMA,gBAAMG,OAAO,GACXL,IAAI,CAACC,GAAL,CAASjB,iBAAiB,CAACC,iBAA3B,IAAgDnC,IAAI,CAACqD,OAArD,IACAnB,iBAAiB,CAACC,iBAAlB,GAAsC,GADtC,GAEI,GAFJ,GAGI3B,cAAc,CAAC8C,aAAf,CACE,CAACpB,iBAAiB,CAACC,iBAAlB,GAAsCD,iBAAiB,CAACE,kBAAzD,IACEF,iBAAiB,CAACG,WAFtB,CAJN;AAQAH,YAAAA,iBAAiB,CAACsB,MAAlB,GAA2BP,MAAM,GAAGM,OAApC,CAnBA,CAoBA;;AACA,iBAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGvB,iBAAiB,CAACwB,YAAlB,CAA+BzB,MAAnD,EAA2DwB,CAAC,EAA5D,EAAgE;AAC9D;AACA,kBAAME,WAAW,GAAGzB,iBAAiB,CAACwB,YAAlB,CAA+BD,CAA/B,CAApB;;AACA,kBAAIE,WAAW,IAAI,IAAnB,EAAyB;AACvB;AACD;;AACD,sBAAQzB,iBAAiB,CAAC0B,KAAlB,CAAwBH,CAAxB,CAAR;AACE,qBAAKtD,wBAAwB,CAAC0D,QAA9B;AACEzD,kBAAAA,+BAA+B,CAAC0D,UAAhC,CACEH,WADF,EAEEzB,iBAAiB,CAACP,KAAlB,CAAwB8B,CAAxB,CAFF,EAGEvB,iBAAiB,CAACsB,MAHpB;AAKA;;AACF,qBAAKrD,wBAAwB,CAAC4D,QAA9B;AACE3D,kBAAAA,+BAA+B,CAAC4D,eAAhC,CACEL,WADF,EAEEzB,iBAAiB,CAACP,KAAlB,CAAwB8B,CAAxB,CAFF,EAGEvB,iBAAiB,CAACsB,MAHpB;AAKA;;AACF,qBAAKrD,wBAAwB,CAAC8D,QAA9B;AACEN,kBAAAA,WAAW,CAAChC,KAAZ,GACEgC,WAAW,CAAChC,KAAZ,IAAqB,IAAIO,iBAAiB,CAACsB,MAA3C,IACAtB,iBAAiB,CAACP,KAAlB,CAAwB8B,CAAxB,IAA6BvB,iBAAiB,CAACsB,MAFjD;AAGA;;AACF;AACE;AACA;AAtBJ;AAwBD,aAnDD,CAoDA;;;AACA,iBAAKrC,mBAAL,CAAyB4B,eAAzB,IAA4Cb,iBAA5C;AACD,WApEyB,CAsE1B;;;AACA,eACE,IAAIa,gBAAe,GAAG,KAAK5B,mBAAL,CAAyBc,MAAzB,GAAkC,CAD1D,EAEEc,gBAAe,IAAI,CAFrB,EAGE,EAAEA,gBAHJ,EAIE;AACA,gBAAI,KAAK5B,mBAAL,CAAyB4B,gBAAzB,EAA0CS,MAA1C,GAAmD,GAAvD,EAA4D;AAC1D;AACD,aAHD,CAIA;;;AACA,iBAAK,IAAIC,EAAC,GAAGV,gBAAe,GAAG,CAA/B,EAAkCU,EAAC,GAAG,KAAKtC,mBAAL,CAAyBc,MAA/D,EAAuEwB,EAAC,EAAxE,EAA4E;AAC1E,mBAAKtC,mBAAL,CAAyBsC,EAAC,GAAG,CAA7B,IAAkC,KAAKtC,mBAAL,CAAyBsC,EAAzB,CAAlC;AACD;;AACD,iBAAKtC,mBAAL,CAAyBc,MAAzB,IAAmC,CAAnC;AACD;AACF;;AAKD;;AAEA;AACUiC,QAAAA,QAAQ,GAAS;AACzB,eAAKhD,MAAL,GAAchB,yBAAyB,CAACiE,eAA1B,CAA0C,IAA1C,CAAd,CADyB,CAGzB;;AACA,eAAK1C,mBAAL,GAA2B,KAAK2C,YAAL,CAAkB/D,sBAAlB,KAA6C,IAAxE;AACD;AAED;;;AACUgE,QAAAA,UAAU,GAAS;AAC3B,cAAI,CAAC,KAAK5C,mBAAV,EAA+B;AAC7B,iBAAKF,YAAL;AACD;AACF;;AApM2F,O;;;;;iBAKtC,I;;;;;;;iBAOd,CAAC,C;;;;;;;iBASD,K","sourcesContent":["/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { CCBoolean, CCInteger, Component, game, math, _decorator } from 'cc';\r\nimport ComponentExtensionMethods from '../../Core/ComponentExtensionMethods';\r\nimport CubismParameterBlendMode from '../CubismParameterBlendMode';\r\nimport CubismParameterExtensionMethods from '../CubismParameterExtensionMethods';\r\nimport CubismUpdateController from '../CubismUpdateController';\r\nimport CubismUpdateExecutionOrder from '../CubismUpdateExecutionOrder';\r\nimport ICubismUpdatable from '../ICubismUpdatable';\r\nimport CubismFadeMath from '../MotionFade/CubismFadeMath';\r\nimport CubismExpressionList from './CubismExpressionList';\r\nimport CubismPlayingExpression from './CubismPlayingExpression';\r\nimport type CubismModel from '../../Core/CubismModel';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('CubismExpressionController')\r\nexport default class CubismExpressionController extends Component implements ICubismUpdatable {\r\n  //#region variable\r\n\r\n  /** Expressions data list. */\r\n  @property({ type: CubismExpressionList, serializable: true, visible: true })\r\n  public expressionsList: CubismExpressionList | null = null;\r\n\r\n  /** CubismModel cache. */\r\n  private _model: CubismModel | null = null;\r\n\r\n  /** Playing expressions index. */\r\n  @property({ type: CCInteger, serializable: true, visible: true })\r\n  public currentExpressionIndex: number = -1;\r\n\r\n  /** Playing expressions. */\r\n  private _playingExpressions = new Array<CubismPlayingExpression>();\r\n\r\n  /** Last playing expressions index. */\r\n  private _lastExpressionIndex: number = -1; // int\r\n\r\n  @property({ serializable: true, visible: false })\r\n  private _hasUpdateController: boolean = false;\r\n\r\n  /** Model has update controller component. */\r\n  public get hasUpdateController() {\r\n    return this._hasUpdateController;\r\n  }\r\n  public set hasUpdateController(value: boolean) {\r\n    this._hasUpdateController = value;\r\n  }\r\n\r\n  //#endregion\r\n\r\n  /** Add new expression to playing expressions. */\r\n  private startExpression(): void {\r\n    // Fail silently...\r\n    if (this.expressionsList == null || this.expressionsList.cubismExpressionObjects == null) {\r\n      return;\r\n    }\r\n\r\n    // Backup expression.\r\n    this._lastExpressionIndex = this.currentExpressionIndex;\r\n\r\n    // Set last expression end time\r\n    const playingExpressions = this._playingExpressions;\r\n    if (playingExpressions.length > 0) {\r\n      const playingExpression = playingExpressions[playingExpressions.length - 1];\r\n      playingExpression.expressionEndTime =\r\n        playingExpression.expressionUserTime + playingExpression.fadeOutTime;\r\n      playingExpressions[playingExpressions.length - 1] = playingExpression;\r\n    }\r\n\r\n    const expressionsList = this.expressionsList;\r\n\r\n    // Fail silently...\r\n    if (\r\n      this.currentExpressionIndex < 0 ||\r\n      this.currentExpressionIndex >= expressionsList.cubismExpressionObjects.length\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    if (this._model == null) {\r\n      console.error('CubismExpressionController.startExpression(): model is null.');\r\n      return;\r\n    }\r\n\r\n    const palyingExpression = CubismPlayingExpression.create(\r\n      this._model,\r\n      expressionsList.cubismExpressionObjects[this.currentExpressionIndex]\r\n    );\r\n\r\n    if (palyingExpression == null) {\r\n      return;\r\n    }\r\n\r\n    // Add to PlayingExList.\r\n    playingExpressions.push(palyingExpression);\r\n  }\r\n\r\n  /** Called by cubism update controller. Order to invoke OnLateUpdate. */\r\n  public get executionOrder(): number {\r\n    return CubismUpdateExecutionOrder.CUBISM_EXPRESSION_CONTROLLER;\r\n  }\r\n\r\n  /** Called by cubism update controller. Needs to invoke OnLateUpdate on Editing. */\r\n  public get needsUpdateOnEditing(): boolean {\r\n    return false;\r\n  }\r\n\r\n  /** Called by cubism update manager. */\r\n  public onLateUpdate(): void {\r\n    // Fail silently...\r\n    if (!this.enabled || this._model == null) {\r\n      return;\r\n    }\r\n    // Start expression when current expression changed.\r\n    if (this.currentExpressionIndex != this._lastExpressionIndex) {\r\n      this.startExpression();\r\n    }\r\n    // Update expression\r\n    for (\r\n      let expressionIndex = 0;\r\n      expressionIndex < this._playingExpressions.length;\r\n      ++expressionIndex\r\n    ) {\r\n      const playingExpression = this._playingExpressions[expressionIndex];\r\n      // Update expression user time.\r\n      playingExpression.expressionUserTime += game.deltaTime;\r\n      // Update weight\r\n      const fadeIn =\r\n        Math.abs(playingExpression.fadeInTime) < math.EPSILON\r\n          ? 1.0\r\n          : CubismFadeMath.getEasingSine(\r\n              playingExpression.expressionUserTime / playingExpression.fadeInTime\r\n            );\r\n      const fadeOut =\r\n        Math.abs(playingExpression.expressionEndTime) < math.EPSILON ||\r\n        playingExpression.expressionEndTime < 0.0\r\n          ? 1.0\r\n          : CubismFadeMath.getEasingSine(\r\n              (playingExpression.expressionEndTime - playingExpression.expressionUserTime) /\r\n                playingExpression.fadeOutTime\r\n            );\r\n      playingExpression.weight = fadeIn * fadeOut;\r\n      // Apply value.\r\n      for (let i = 0; i < playingExpression.destinations.length; i++) {\r\n        // Fail silently...\r\n        const destination = playingExpression.destinations[i];\r\n        if (destination == null) {\r\n          continue;\r\n        }\r\n        switch (playingExpression.blend[i]) {\r\n          case CubismParameterBlendMode.Additive:\r\n            CubismParameterExtensionMethods.addToValue(\r\n              destination,\r\n              playingExpression.value[i],\r\n              playingExpression.weight\r\n            );\r\n            break;\r\n          case CubismParameterBlendMode.Multiply:\r\n            CubismParameterExtensionMethods.multiplyValueBy(\r\n              destination,\r\n              playingExpression.value[i],\r\n              playingExpression.weight\r\n            );\r\n            break;\r\n          case CubismParameterBlendMode.Override:\r\n            destination.value =\r\n              destination.value * (1 - playingExpression.weight) +\r\n              playingExpression.value[i] * playingExpression.weight;\r\n            break;\r\n          default:\r\n            // When an unspecified value is set, it is already in addition mode.\r\n            break;\r\n        }\r\n      }\r\n      // Apply update value\r\n      this._playingExpressions[expressionIndex] = playingExpression;\r\n    }\r\n\r\n    // Remove expression from playing expressions\r\n    for (\r\n      let expressionIndex = this._playingExpressions.length - 1;\r\n      expressionIndex >= 0;\r\n      --expressionIndex\r\n    ) {\r\n      if (this._playingExpressions[expressionIndex].weight > 0.0) {\r\n        continue;\r\n      }\r\n      // RemoveAt\r\n      for (let i = expressionIndex + 1; i < this._playingExpressions.length; i++) {\r\n        this._playingExpressions[i - 1] = this._playingExpressions[i];\r\n      }\r\n      this._playingExpressions.length -= 1;\r\n    }\r\n  }\r\n\r\n  public readonly bindedOnLateUpdate: ICubismUpdatable.CallbackFunction =\r\n    this.onLateUpdate.bind(this);\r\n\r\n  //#region Cocos Creator Event Handling\r\n\r\n  /** Called by Cocos Creator. */\r\n  protected onEnable(): void {\r\n    this._model = ComponentExtensionMethods.findCubismModel(this);\r\n\r\n    // Get cubism update controller.\r\n    this.hasUpdateController = this.getComponent(CubismUpdateController) != null;\r\n  }\r\n\r\n  /** Called by Cocos Creator. */\r\n  protected lateUpdate(): void {\r\n    if (!this.hasUpdateController) {\r\n      this.onLateUpdate();\r\n    }\r\n  }\r\n\r\n  //#endregion\r\n\r\n  public readonly [ICubismUpdatable.SYMBOL]: typeof ICubismUpdatable.SYMBOL =\r\n    ICubismUpdatable.SYMBOL;\r\n}\r\n"]}