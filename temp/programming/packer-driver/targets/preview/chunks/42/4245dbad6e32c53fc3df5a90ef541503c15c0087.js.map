{"version":3,"sources":["file:///Users/sunjia/project/cocos/NewProject_1/extensions/live2d_cubismsdk_cocoscreator/static/assets/Rendering/CubismBuiltinMaterials.ts"],"names":["assetManager","getUnlit","bundle","getBundle","getMaterial","getUnlitAdditive","getUnlitAdditiveCulling","getUnlitAdditiveMasked","getUnlitAdditiveMaskedCulling","getUnlitAdditiveMaskedInverted","getUnlitAdditiveMaskedInvertedCulling","getUnlitCulling","getUnlitMasked","getUnlitMaskedCulling","getUnlitMaskedInverted","getUnlitMaskedInvertedCulling","getUnlitMultiply","getUnlitMultiplyCulling","getUnlitMultiplyMasked","getUnlitMultiplyMaskedCulling","getUnlitMultiplyMaskedInverted","getUnlitMultiplyMaskedInvertedCulling","getMask","getMaskCulling","BUNDLE_NAME","bundles","get","Promise","resolve","reject","loadBundle","error","name","path","mat","load","asset","CubismBuiltinMaterials"],"mappings":"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","sourcesContent":["/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { AssetManager, assetManager, Material, resources } from 'cc';\r\n\r\n/** Default materials. */\r\nnamespace CubismBuiltinMaterials {\r\n  /** Default unlit material. */\r\n  export async function getUnlit() {\r\n    const bundle = await getBundle();\r\n    return bundle == null ? null : getMaterial(bundle, 'Unlit');\r\n  }\r\n\r\n  /** Default unlit, additively blending material. */\r\n  export async function getUnlitAdditive() {\r\n    const bundle = await getBundle();\r\n    return bundle == null ? null : getMaterial(bundle, 'UnlitAdditive');\r\n  }\r\n\r\n  /** Default unlit culled, additively blending material. */\r\n  export async function getUnlitAdditiveCulling() {\r\n    const bundle = await getBundle();\r\n    return bundle == null ? null : getMaterial(bundle, 'UnlitAdditiveCulling');\r\n  }\r\n\r\n  /** Default unlit masked, additively blending material. */\r\n  export async function getUnlitAdditiveMasked() {\r\n    const bundle = await getBundle();\r\n    return bundle == null ? null : getMaterial(bundle, 'UnlitAdditiveMasked');\r\n  }\r\n\r\n  /** Default unlit masked culled, additively blending material. */\r\n  export async function getUnlitAdditiveMaskedCulling() {\r\n    const bundle = await getBundle();\r\n    return bundle == null ? null : getMaterial(bundle, 'UnlitAdditiveMaskedCulling');\r\n  }\r\n\r\n  /** Default unlit masked inverted, additively blending material. */\r\n  export async function getUnlitAdditiveMaskedInverted() {\r\n    const bundle = await getBundle();\r\n    return bundle == null ? null : getMaterial(bundle, 'UnlitAdditiveMaskedInverted');\r\n  }\r\n\r\n  /** Default unlit masked inverted culled, additively blending material. */\r\n  export async function getUnlitAdditiveMaskedInvertedCulling() {\r\n    const bundle = await getBundle();\r\n    return bundle == null ? null : getMaterial(bundle, 'UnlitAdditiveMaskedInvertedCulling');\r\n  }\r\n\r\n  /** Default unlit culled material. */\r\n  export async function getUnlitCulling() {\r\n    const bundle = await getBundle();\r\n    return bundle == null ? null : getMaterial(bundle, 'UnlitCulling');\r\n  }\r\n\r\n  /** Default unlit masked material. */\r\n  export async function getUnlitMasked() {\r\n    const bundle = await getBundle();\r\n    return bundle == null ? null : getMaterial(bundle, 'UnlitMasked');\r\n  }\r\n\r\n  /** Default unlit masked culled material. */\r\n  export async function getUnlitMaskedCulling() {\r\n    const bundle = await getBundle();\r\n    return bundle == null ? null : getMaterial(bundle, 'UnlitMaskedCulling');\r\n  }\r\n\r\n  /** Default unlit masked inverted material. */\r\n  export async function getUnlitMaskedInverted() {\r\n    const bundle = await getBundle();\r\n    return bundle == null ? null : getMaterial(bundle, 'UnlitMaskedInverted');\r\n  }\r\n\r\n  /** Default unlit masked inverted culled material. */\r\n  export async function getUnlitMaskedInvertedCulling() {\r\n    const bundle = await getBundle();\r\n    return bundle == null ? null : getMaterial(bundle, 'UnlitMaskedInvertedCulling');\r\n  }\r\n\r\n  /** Default unlit multiply material. */\r\n  export async function getUnlitMultiply() {\r\n    const bundle = await getBundle();\r\n    return bundle == null ? null : getMaterial(bundle, 'UnlitMultiply');\r\n  }\r\n\r\n  /** Default unlit culled, multiply blending material. */\r\n  export async function getUnlitMultiplyCulling() {\r\n    const bundle = await getBundle();\r\n    return bundle == null ? null : getMaterial(bundle, 'UnlitMultiplyCulling');\r\n  }\r\n\r\n  /** Default unlit masked, multiply blending material. */\r\n  export async function getUnlitMultiplyMasked() {\r\n    const bundle = await getBundle();\r\n    return bundle == null ? null : getMaterial(bundle, 'UnlitMultiplyMasked');\r\n  }\r\n\r\n  /** Default unlit masked culled material. */\r\n  export async function getUnlitMultiplyMaskedCulling() {\r\n    const bundle = await getBundle();\r\n    return bundle == null ? null : getMaterial(bundle, 'UnlitMultiplyMaskedCulling');\r\n  }\r\n\r\n  /** Default unlit masked inverted, multiply blending material. */\r\n  export async function getUnlitMultiplyMaskedInverted() {\r\n    const bundle = await getBundle();\r\n    return bundle == null ? null : getMaterial(bundle, 'UnlitMultiplyMaskedInverted');\r\n  }\r\n\r\n  /** Default unlit masked inverted culled, multiply blending material. */\r\n  export async function getUnlitMultiplyMaskedInvertedCulling() {\r\n    const bundle = await getBundle();\r\n    return bundle == null ? null : getMaterial(bundle, 'UnlitMultiplyMaskedInvertedCulling');\r\n  }\r\n\r\n  /** Default mask material. */\r\n  export async function getMask(): Promise<Material | null> {\r\n    const bundle = await getBundle();\r\n    return bundle == null ? null : getMaterial(bundle, 'Mask');\r\n  }\r\n\r\n  /** Default culled mask material. */\r\n  export async function getMaskCulling(): Promise<Material | null> {\r\n    const bundle = await getBundle();\r\n    return bundle == null ? null : getMaterial(bundle, 'MaskCulling');\r\n  }\r\n\r\n  // #region Helper Methods\r\n\r\n  const BUNDLE_NAME = 'Live2DCubismBuiltinResource';\r\n\r\n  async function getBundle(): Promise<AssetManager.Bundle | null> {\r\n    const bundle = assetManager.bundles.get(BUNDLE_NAME);\r\n    if (bundle != null) {\r\n      return Promise.resolve(bundle);\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n      assetManager.loadBundle(BUNDLE_NAME, (error, bundle) => {\r\n        if (error != null) {\r\n          reject(null);\r\n        } else {\r\n          resolve(bundle);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  async function getMaterial(bundle: AssetManager.Bundle, name: string): Promise<Material | null> {\r\n    const path = `Materials/${name}`;\r\n    const mat = bundle.get<Material>(path);\r\n    if (mat != null) {\r\n      return Promise.resolve(mat);\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n      bundle.load<Material>(path, (error, asset) => {\r\n        if (error != null) {\r\n          reject(error);\r\n        } else {\r\n          resolve(asset);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  // #endregion\r\n}\r\nexport default CubismBuiltinMaterials;\r\n"]}