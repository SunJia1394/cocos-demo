{"version":3,"sources":["file:///Users/sunjia/project/cocos-test/cocos-demo/extensions/live2d_cubismsdk_cocoscreator/static/assets/Framework/UserData/CubismUserDataBody.ts"],"names":["_decorator","ccclass","property","CubismUserDataBody","serializable","constructor","args","id","value","copyWith","equals","other","strictEquals","DEFAULT"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAOSA,MAAAA,U,OAAAA,U;;;;;;AAPT;AACA;AACA;AACA;AACA;AACA;;;;;OAIM;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBF,U;AAE9B;;AAEMG,MAAAA,kB,WADLF,OAAO,CAAC,oBAAD,C,UAGLC,QAAQ,CAAC;AAAEE,QAAAA,YAAY,EAAE;AAAhB,OAAD,C,UAIRF,QAAQ,CAAC;AAAEE,QAAAA,YAAY,EAAE;AAAhB,OAAD,C,2BAPX,MACMD,kBADN,CACoE;AAS3DE,QAAAA,WAAW,CAChBC,IADgB,EAKhB;AAAA;;AAAA,cAJAA,IAIA;AAJAA,YAAAA,IAIA,GADI,EACJ;AAAA;;AAbF;AAaE;;AATF;AASE;;AACA,eAAKC,EAAL,eAAUD,IAAI,CAACC,EAAf,uBAAqB,EAArB;AACA,eAAKC,KAAL,kBAAaF,IAAI,CAACE,KAAlB,0BAA2B,EAA3B;AACD;;AAEMC,QAAAA,QAAQ,CACbH,IADa,EAKO;AAAA;;AAAA,cAJpBA,IAIoB;AAJpBA,YAAAA,IAIoB,GADhB,EACgB;AAAA;;AACpB,iBAAO,IAAIH,kBAAJ,CAAuB;AAAEI,YAAAA,EAAE,eAAED,IAAI,CAACC,EAAP,wBAAa,KAAKA,EAAtB;AAA0BC,YAAAA,KAAK,kBAAEF,IAAI,CAACE,KAAP,2BAAgB,KAAKA;AAApD,WAAvB,CAAP;AACD;;AAEME,QAAAA,MAAM,CAACC,KAAD,EAAqC;AAChD,iBAAO,SAASA,KAAT,GAAiB,IAAjB,GAAwB,KAAKJ,EAAL,IAAWI,KAAK,CAACJ,EAAjB,IAAuB,KAAKC,KAAL,IAAcG,KAAK,CAACH,KAA1E;AACD;;AAEMI,QAAAA,YAAY,CAACD,KAAD,EAAqC;AACtD,iBAAO,SAASA,KAAhB;AACD;;AAlCiE,O;;;;;iBAGrC,E;;;;;;;iBAIG,E;;;;;AA+BzB,YAAME,OAAO,iCAAG,IAAIV,kBAAJ,EAAhB;SADCA,kB,KAAAA,kB;;yBAGKA,kB","sourcesContent":["/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { _decorator } from 'cc';\r\nimport type IStructLike from '../../IStructLike';\r\nconst { ccclass, property } = _decorator;\r\n\r\n/** Body of user data. */\r\n@ccclass('CubismUserDataBody')\r\nclass CubismUserDataBody implements IStructLike<CubismUserDataBody> {\r\n  /** Id. */\r\n  @property({ serializable: true })\r\n  public readonly id: string = '';\r\n\r\n  /** Value. */\r\n  @property({ serializable: true })\r\n  public readonly value: string = '';\r\n\r\n  public constructor(\r\n    args: {\r\n      id?: string;\r\n      value?: string;\r\n    } = {}\r\n  ) {\r\n    this.id = args.id ?? '';\r\n    this.value = args.value ?? '';\r\n  }\r\n\r\n  public copyWith(\r\n    args: {\r\n      id?: string;\r\n      value?: string;\r\n    } = {}\r\n  ): CubismUserDataBody {\r\n    return new CubismUserDataBody({ id: args.id ?? this.id, value: args.value ?? this.value });\r\n  }\r\n\r\n  public equals(other: CubismUserDataBody): boolean {\r\n    return this === other ? true : this.id == other.id && this.value == other.value;\r\n  }\r\n\r\n  public strictEquals(other: CubismUserDataBody): boolean {\r\n    return this === other;\r\n  }\r\n}\r\n\r\nnamespace CubismUserDataBody {\r\n  export const DEFAULT = new CubismUserDataBody();\r\n}\r\nexport default CubismUserDataBody;\r\n"]}