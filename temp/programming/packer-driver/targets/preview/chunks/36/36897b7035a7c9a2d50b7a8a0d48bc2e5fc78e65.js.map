{"version":3,"sources":["file:///Users/sunjia/project/cocos/NewProject_1/extensions/live2d_cubismsdk_cocoscreator/static/assets/Core/ComponentExtensionMethods.ts"],"names":["Node","CubismModel","findCubismModel","self","includeParents","model","getComponent","current","node","parent","isNode","ComponentExtensionMethods"],"mappings":";;;;;;;;;;AAOgCA,MAAAA,I,OAAAA,I;;AACzBC,MAAAA,W;;;;AARP;AACA;AACA;AACA;AACA;AACA;;;;;;AAaS,iBAASC,eAAT,CACLC,IADK,EAELC,cAFK,EAGe;AAAA,cADpBA,cACoB;AADpBA,YAAAA,cACoB,GADM,KACN;AAAA;;AACpB;AACA,cAAID,IAAI,IAAI,IAAZ,EAAkB;AAChB,mBAAO,IAAP;AACD;;AACD,cAAIE,KAAK,GAAGF,IAAI,CAACG,YAAL,CAAkBL,WAAlB,CAAZ,CALoB,CAOpB;;AACA,cAAII,KAAK,IAAI,IAAb,EAAmB;AACjB,mBAAOA,KAAP;AACD,WAVmB,CAYpB;;;AACA,cAAID,cAAJ,EAAoB;AAClB;AACA,iBACE,IAAIG,OAAoB,GAAGJ,IAAI,CAACK,IAAL,CAAUC,MADvC,EAEEF,OAAO,IAAI,IAAX,IAAmBP,IAAI,CAACU,MAAL,CAAYH,OAAZ,CAFrB,EAGEA,OAAO,GAAGA,OAAO,CAACE,MAHpB,EAIE;AACAJ,cAAAA,KAAK,GAAGE,OAAO,CAACD,YAAR,CAAqBL,WAArB,CAAR;;AACA,kBAAII,KAAK,IAAI,IAAb,EAAmB;AACjB,uBAAOA,KAAP;AACD;AACF;AACF,WAzBmB,CA2BpB;;;AACA,iBAAO,IAAP;AACD;;;SAvCOM,yB,KAAAA,yB;;yBAyCKA,yB","sourcesContent":["/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { _decorator, Component, Node } from 'cc';\r\nimport CubismModel from '../Core/CubismModel';\r\n\r\n/** Extensions for {@link Component}s. */\r\nnamespace ComponentExtensionMethods {\r\n  /**\r\n   * Finds a {@link CubismModel} relative to a {@link Component}.\r\n   * @param self Component to base search on.\r\n   * @param includeParents Condition for including parents in search.\r\n   * @returns The relative {@link CubismModel} if found; null otherwise.\r\n   */\r\n  export function findCubismModel(\r\n    self: Component,\r\n    includeParents: boolean = false\r\n  ): CubismModel | null {\r\n    // Validate arguments.\r\n    if (self == null) {\r\n      return null;\r\n    }\r\n    let model = self.getComponent(CubismModel);\r\n\r\n    // Return model if found.\r\n    if (model != null) {\r\n      return model;\r\n    }\r\n\r\n    // Recursively search in parents if requested.\r\n    if (includeParents) {\r\n      // Scene 内 root node の Node.parent は Scene が入っているためnullにならない。\r\n      for (\r\n        let current: Node | null = self.node.parent;\r\n        current != null && Node.isNode(current);\r\n        current = current.parent\r\n      ) {\r\n        model = current.getComponent(CubismModel);\r\n        if (model != null) {\r\n          return model;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Signal not found.\r\n    return null;\r\n  }\r\n}\r\nexport default ComponentExtensionMethods;\r\n"]}