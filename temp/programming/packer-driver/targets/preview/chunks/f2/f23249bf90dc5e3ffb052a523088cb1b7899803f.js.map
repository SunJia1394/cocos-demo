{"version":3,"sources":["file:///Users/sunjia/project/cocos-test/cocos-demo/extensions/live2d_cubismsdk_cocoscreator/static/assets/Rendering/ArrayExtensionMethods.ts"],"names":["Bounds","CubismBounds","Vector3","CubismVector3","getMeshRendererBounds","self","bounds","mesh","calculateBounds","x","minX","y","minY","z","minZ","min","maxX","maxY","maxZ","max","i","length","boundsI","size","subtract","fromVector","multiplySingle","add","ArrayExtensionMethods"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAOyBA,MAAAA,M,iBAAhBC,Y;;AACiBC,MAAAA,O,iBAAjBC,a;;;;;;AART;AACA;AACA;AACA;AACA;AACA;;;;AAaS,iBAASC,qBAAT,CAA+BC,IAA/B,EAAoE;AACzE,cAAMC,MAAM,GAAGD,IAAI,CAAC,CAAD,CAAJ,CAAQE,IAAR,CAAaC,eAAb,EAAf;AACA,cAAI;AAAEC,YAAAA,CAAC,EAAEC,IAAL;AAAWC,YAAAA,CAAC,EAAEC,IAAd;AAAoBC,YAAAA,CAAC,EAAEC;AAAvB,cAAgCR,MAAM,CAACS,GAAP,EAApC;AACA,cAAI;AAAEN,YAAAA,CAAC,EAAEO,IAAL;AAAWL,YAAAA,CAAC,EAAEM,IAAd;AAAoBJ,YAAAA,CAAC,EAAEK;AAAvB,cAAgCZ,MAAM,CAACa,GAAP,EAApC;;AAEA,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGf,IAAI,CAACgB,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,gBAAME,OAAO,GAAGjB,IAAI,CAACe,CAAD,CAAJ,CAAQb,IAAR,CAAaC,eAAb,EAAhB;AACA;AACE,kBAAM;AAAEC,gBAAAA,CAAF;AAAKE,gBAAAA;AAAL,kBAAWW,OAAO,CAACP,GAAR,EAAjB;;AACA,kBAAIN,CAAC,GAAGC,IAAR,EAAc;AACZA,gBAAAA,IAAI,GAAGD,CAAP;AACD;;AACD,kBAAIE,CAAC,GAAGC,IAAR,EAAc;AACZA,gBAAAA,IAAI,GAAGD,CAAP;AACD;AACF;AACD;AACE,kBAAM;AAAEF,gBAAAA,CAAC,EAADA,EAAF;AAAKE,gBAAAA,CAAC,EAADA;AAAL,kBAAWW,OAAO,CAACH,GAAR,EAAjB;;AACA,kBAAIV,EAAC,GAAGO,IAAR,EAAc;AACZA,gBAAAA,IAAI,GAAGP,EAAP;AACD;;AACD,kBAAIE,EAAC,GAAGM,IAAR,EAAc;AACZA,gBAAAA,IAAI,GAAGN,EAAP;AACD;AACF;AACF;;AAED,cAAMI,GAAG,GAAG;AAAA;AAAA,kCAAYL,IAAZ,EAAkBE,IAAlB,EAAwBE,IAAxB,CAAZ;AACA,cAAMS,IAAI,GAAG;AAAA;AAAA,kCAAYP,IAAZ,EAAkBC,IAAlB,EAAwBC,IAAxB,EAA8BM,QAA9B,CAAuCT,GAAvC,CAAb;AACA,iBAAO;AAAA;AAAA,gCAAOU,UAAP,CAAkBF,IAAI,CAACG,cAAL,CAAoB,GAApB,EAAyBC,GAAzB,CAA6BZ,GAA7B,CAAlB,EAAqDQ,IAArD,CAAP;AACD;;;SApCcK,qB,qCAAAA,qB","sourcesContent":["/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { CubismBounds as Bounds } from '../Core/CubismGeometry';\r\nimport { CubismVector3 as Vector3 } from '../Core/CubismVector';\r\nimport type CubismRenderer from './CubismRenderer';\r\n\r\n/** Array extension methods. */\r\nexport namespace ArrayExtensionMethods {\r\n  /**\r\n   * Combines bounds of multiple CubismRenderers.\r\n   * @param self Renderers.\r\n   * @returns Combined bounds.\r\n   */\r\n  export function getMeshRendererBounds(self: Array<CubismRenderer>): Bounds {\r\n    const bounds = self[0].mesh.calculateBounds();\r\n    let { x: minX, y: minY, z: minZ } = bounds.min();\r\n    let { x: maxX, y: maxY, z: maxZ } = bounds.max();\r\n\r\n    for (let i = 1; i < self.length; i++) {\r\n      const boundsI = self[i].mesh.calculateBounds();\r\n      {\r\n        const { x, y } = boundsI.min();\r\n        if (x < minX) {\r\n          minX = x;\r\n        }\r\n        if (y < minY) {\r\n          minY = y;\r\n        }\r\n      }\r\n      {\r\n        const { x, y } = boundsI.max();\r\n        if (x > maxX) {\r\n          maxX = x;\r\n        }\r\n        if (y > maxY) {\r\n          maxY = y;\r\n        }\r\n      }\r\n    }\r\n\r\n    const min = new Vector3(minX, minY, minZ);\r\n    const size = new Vector3(maxX, maxY, maxZ).subtract(min);\r\n    return Bounds.fromVector(size.multiplySingle(0.5).add(min), size);\r\n  }\r\n}\r\n"]}