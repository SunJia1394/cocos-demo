{"version":3,"sources":["file:///Users/sunjia/project/cocos-test/cocos-demo/extensions/live2d_cubismsdk_cocoscreator/static/assets/Framework/Json/CubismModel3Json.ts"],"names":["animation","BufferAsset","CCInteger","JsonAsset","path","resources","Texture2D","_decorator","CubismMoc","CubismModel","CubismRenderController","CubismMaskController","ArrayExtensions","isNullOrEmpty","CubismDisplayInfoParameterName","CubismDisplayInfoPartName","CubismEyeBlinkController","CubismEyeBlinkParameter","CubismHitDrawable","CubismParameterStore","CubismUpdateController","CubismExpressionController","CubismFadeController","CubismMouthController","CubismMouthParameter","CubismPhysicsController","CubismPoseController","CubismRaycastable","CubismUserDataTag","CubismUserDataTargetType","CubismDisplayInfo3Json","CubismExp3Json","CubismPhysics3Json","CubismPose3Json","CubismUserData3Json","CubismBuiltinPickers","JsonParseUtils","CubismParametersInspector","CubismPartsInspector","CubismPosePart","ArrayExtensionMethods","EDITOR","property","CubismModel3Json","type","serializable","visible","constructor","_assetPath","_loadAssetAtPath","loadAtPath","assetPath","loadAssetAtPath","builtinAssetAtPath","modelJsonAsset","json","model3","loadFromJson","errorMessage","SerializableFileReferences","SerializableGroup","SerializableHitArea","version","getNumber","tempfileReferences","getObject","undefined","console","error","fileReferences","instantiateFromJson","tempGroups","getArray","tempHitAreas","model3Json","purse","inData","func","arrayedInstantiateFromJson","Array","groups","hitAreas","value","Promise","reject","setLoadAssetAtPath","getMoc3","moc","loadArrayBuffer","getPose3Json","_pose3Json","pose","length","loadJson","getExpression3Jsons","_expression3Jsons","expressions","i","expressionJson","file","getPhysics3Json","physics","getUserData3Json","userData","getDisplayInfo3Json","displayInfo","getTexture","index","_textures","textures","loadTexture","toModel","args","shouldImportAsOriginalWorkflow","pickMaterial","materialPicker","pickTexture","texturePicker","mocAsBytes","createFrom","displayInfo3Json","physics3Json","userData3Json","CubismModelNodeGenerator","generateModel","referencedFile","dirname","asset","buffer","ext","extname","substring","join","promise","resolve","load","isParameterInGroup","parameter","groupName","group","name","ids","j","node","getBodyIndexById","bodies","id","motions","SerializableMotions","DEFAULT","copyWith","equals","other","isEquals","x","y","SerializableExpression","strictEquals","getString","every","arr","isString","tempExp","SerializableExpressions","tempMotions","target","array","fadeInTime","fadeOutTime","a","b","isObject","instance","get","key","Map","groupNames","Object","isFrozen","size","entry","entries","set","keys","map","item","motion","input","SerializableMotion","sound","model","instantiateFrom","basename","addComponent","rendererController","Internal","setupCubismRenderController","assert","renderers","drawables","setupMaterialsAndTextures","setupHitAreas","setupFromDisplayInfo3Json","setupMaskController","setupOriginalWorkflow","expList","setupPhysicsController","pose3Json","setupCubismPosePart","setupUserDataTag","setupAnimationController","finalize","Reflect","has","onEnable","call","sender","material","mainTexture","hitArea","hitDrawable","raycastable","cdi3Json","parameters","eyeBlinkController","getComponent","eyeBlinkParameter","mouthController","mouthParameter","cubismDisplayInfoParameterName","parameterName","displayName","parts","cubismDisplayInfoPartNames","partName","some","isMasked","maskController","updateController","parameterStore","poseController","expressionController","expressionsList","motionFadeController","physicsController","initialize","toRig","drawableBodies","toBodyArray","ArtMesh","tag","groupIndex","partIndex","part","findByIdFromParts","posePart","link","animationController","AnimationController","forceUpdateNow"],"mappings":"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","sourcesContent":["/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport {\r\n  animation,\r\n  Asset,\r\n  BufferAsset,\r\n  CCInteger,\r\n  JsonAsset,\r\n  Material,\r\n  path,\r\n  resources,\r\n  Texture2D,\r\n  _decorator,\r\n} from 'cc';\r\nimport CubismMoc from '../../Core/CubismMoc';\r\nimport CubismModel from '../../Core/CubismModel';\r\nimport CubismRenderController from '../../Rendering/CubismRenderController';\r\nimport CubismMaskController from '../../Rendering/Masking/CubismMaskController';\r\nimport { ArrayExtensions, isNullOrEmpty } from '../../Utils';\r\nimport CubismDisplayInfoParameterName from '../CubismDisplayInfoParameterName';\r\nimport CubismDisplayInfoPartName from '../CubismDisplayInfoPartName';\r\nimport CubismEyeBlinkController from '../CubismEyeBlinkController';\r\nimport CubismEyeBlinkParameter from '../CubismEyeBlinkParameter';\r\nimport CubismHitDrawable from '../CubismHitDrawable';\r\nimport CubismParameterStore from '../CubismParameterStore';\r\nimport CubismUpdateController from '../CubismUpdateController';\r\nimport CubismExpressionController from '../Expression/CubismExpressionController';\r\nimport CubismFadeController from '../MotionFade/CubismFadeController';\r\nimport CubismMouthController from '../MouthMovement/CubismMouthController';\r\nimport CubismMouthParameter from '../MouthMovement/CubismMouthParameter';\r\nimport CubismPhysicsController from '../Physics/CubismPhysicsController';\r\nimport CubismPoseController from '../Pose/CubismPoseController';\r\nimport CubismRaycastable from '../Raycasting/CubismRaycastable';\r\nimport CubismUserDataTag from '../UserData/CubismUserDataTag';\r\nimport CubismUserDataTargetType from '../UserData/CubismUserDataTargetType';\r\nimport CubismDisplayInfo3Json from './CubismDisplayInfo3Json';\r\nimport CubismExp3Json from './CubismExp3Json';\r\nimport CubismPhysics3Json from './CubismPhysics3Json';\r\nimport CubismPose3Json from './CubismPose3Json';\r\nimport CubismUserData3Json from './CubismUserData3Json';\r\nimport CubismBuiltinPickers from './CubismBuiltinPickers';\r\nimport JsonParseUtils from './JsonParseUtils';\r\nimport CubismParametersInspector from '../CubismParametersInspector';\r\nimport CubismPartsInspector from '../CubismPartsInspector';\r\nimport CubismPosePart from '../Pose/CubismPosePart';\r\nimport ArrayExtensionMethods from '../../Core/ArrayExtensionMethods';\r\nimport type CubismRenderer from '../../Rendering/CubismRenderer';\r\nimport type CubismExpressionList from '../Expression/CubismExpressionList';\r\nimport type CubismParameter from '../../Core/CubismParameter';\r\nimport type CubismUserDataBody from '../UserData/CubismUserDataBody';\r\nimport type CubismDrawable from '../../Core/CubismDrawable';\r\nimport type IStructLike from '../../IStructLike';\r\nimport { EDITOR } from 'cc/env';\r\nconst { property } = _decorator;\r\n\r\n//#region Delegates\r\ndeclare namespace CubismModel3Json {\r\n  /**\r\n   * Handles the loading of assets.\r\n   *\r\n   * @param assetType The asset type to load.\r\n   * @param assetPath The path to the asset.\r\n   * @returns\r\n   */\r\n  export type LoadAssetAtPathHandler<T extends Asset = Asset> = (\r\n    assetPath: string,\r\n    constructor: new (...args: any[]) => T\r\n  ) => Promise<T | null>;\r\n\r\n  /**\r\n   * Picks a Material for a CubismDrawable.\r\n   *\r\n   * @param sender Event source.\r\n   * @param drawable Drawable to pick for.\r\n   * @returns Picked material.\r\n   */\r\n  export type MaterialPicker = (\r\n    sender: CubismModel3Json,\r\n    drawable: CubismDrawable\r\n  ) => Promise<Material | null>;\r\n\r\n  /**\r\n   * Picks a Material for a CubismDrawable.\r\n   *\r\n   * @param sender Event source.\r\n   * @param drawable Drawable to pick for.\r\n   * @returns Picked texture.\r\n   */\r\n  export type TexturePicker = (\r\n    sender: CubismModel3Json,\r\n    drawable: CubismDrawable\r\n  ) => Promise<Texture2D | null>;\r\n}\r\n//#endregion\r\n\r\n/**\r\n * Exposes moc3.json asset data.\r\n *\r\n * **Sealed class.**\r\n */\r\nclass CubismModel3Json {\r\n  /** Makes construction only possible through factories. */\r\n  private constructor() {}\r\n\r\n  // #region Load Methods\r\n\r\n  /**\r\n   * Loads a model.json asset.\r\n   * @param assetPath The path to the asset.\r\n   * @param loadAssetAtPath Handler for loading assets.\r\n   * @param loadBufferAssetAtPath Handler for loading assets.\r\n   * @returns The CubismModel3Json on success; null otherwise.\r\n   */\r\n  public static async loadAtPath(\r\n    assetPath: string,\r\n    loadAssetAtPath?: CubismModel3Json.LoadAssetAtPathHandler\r\n  ): Promise<CubismModel3Json | null> {\r\n    loadAssetAtPath ??= CubismModel3Json.builtinAssetAtPath;\r\n\r\n    // Load Json asset.\r\n    let modelJsonAsset = (await loadAssetAtPath(assetPath, JsonAsset)) as JsonAsset;\r\n\r\n    // Return early in case Json asset wasn't loaded.\r\n    if (modelJsonAsset == null || modelJsonAsset.json == null) {\r\n      return null;\r\n    }\r\n\r\n    const model3 = CubismModel3Json.loadFromJson(modelJsonAsset.json);\r\n    if (model3 == null) {\r\n      return null;\r\n    }\r\n    model3.assetPath = assetPath;\r\n    model3._loadAssetAtPath = loadAssetAtPath;\r\n\r\n    return model3;\r\n  }\r\n\r\n  /**\r\n   * **Required properties**\r\n   * Version\r\n   * FileReferences\r\n   *\r\n   * **Optional properties**\r\n   * Groups\r\n   * HitAreas\r\n   * Layout\r\n   * @param json\r\n   * @returns\r\n   */\r\n  public static loadFromJson(json: object) {\r\n    const errorMessage = 'CubismModel3Json.loadFromJson(): json parsing error.';\r\n    const { SerializableFileReferences, SerializableGroup, SerializableHitArea } = CubismModel3Json;\r\n\r\n    const version = JsonParseUtils.getNumber(json, 'Version');\r\n    const tempfileReferences = JsonParseUtils.getObject(json, 'FileReferences');\r\n    if (version === undefined || tempfileReferences === undefined) {\r\n      console.error(errorMessage);\r\n      return null;\r\n    }\r\n    const fileReferences =\r\n      SerializableFileReferences.instantiateFromJson(tempfileReferences) ?? undefined;\r\n    if (fileReferences === undefined) {\r\n      console.error(errorMessage);\r\n      return null;\r\n    }\r\n\r\n    const tempGroups = JsonParseUtils.getArray(json, 'Groups');\r\n    const tempHitAreas = JsonParseUtils.getArray(json, 'HitAreas');\r\n\r\n    const model3Json = new CubismModel3Json();\r\n    model3Json.version = version;\r\n    model3Json.fileReferences = fileReferences;\r\n\r\n    function purse<T>(inData: any[] | undefined, func: (json: object) => T | null) {\r\n      return inData !== undefined\r\n        ? JsonParseUtils.arrayedInstantiateFromJson(inData, func) ?? new Array(0)\r\n        : new Array(0);\r\n    }\r\n    model3Json.groups = purse(tempGroups, SerializableGroup.instantiateFromJson);\r\n    model3Json.hitAreas = purse(tempHitAreas, SerializableHitArea.instantiateFromJson);\r\n\r\n    return model3Json;\r\n  }\r\n\r\n  // #endregion\r\n\r\n  private _assetPath: string | null = null;\r\n\r\n  /** Path to this. */\r\n  public get assetPath() {\r\n    return this._assetPath;\r\n  }\r\n  private set assetPath(value) {\r\n    this._assetPath = value;\r\n  }\r\n  private _loadAssetAtPath: CubismModel3Json.LoadAssetAtPathHandler | null = null;\r\n\r\n  /** Method for loading assets. */\r\n  public async loadAssetAtPath<T extends Asset>(\r\n    assetPath: string,\r\n    constructor: new (...args: any[]) => T\r\n  ): Promise<T | null> {\r\n    if (this._loadAssetAtPath == null) {\r\n      return Promise.reject(null);\r\n    }\r\n    return this._loadAssetAtPath(assetPath, constructor) as Promise<T | null>;\r\n  }\r\n  private setLoadAssetAtPath(value: CubismModel3Json.LoadAssetAtPathHandler | null) {\r\n    this._loadAssetAtPath = value;\r\n  }\r\n\r\n  // #region Json Data\r\n\r\n  /** The motion3.json format version. */\r\n  @property({ type: CCInteger, serializable: true, visible: true })\r\n  public version: number = 0;\r\n\r\n  /** The file references. */\r\n  @property({ serializable: true })\r\n  public fileReferences: CubismModel3Json.SerializableFileReferences =\r\n    new CubismModel3Json.SerializableFileReferences();\r\n\r\n  /** Groups. */\r\n  @property({ serializable: true })\r\n  public groups: CubismModel3Json.SerializableGroup[] = new Array(0);\r\n\r\n  /** Hit areas. */\r\n  @property({ serializable: true })\r\n  public hitAreas: CubismModel3Json.SerializableHitArea[] = new Array(0);\r\n\r\n  // #endregion\r\n\r\n  /**\r\n   * The contents of the referenced moc3 asset.\r\n   *\r\n   * The contents isn't cached internally.\r\n   */\r\n  public async getMoc3(): Promise<ArrayBuffer | null> {\r\n    return this.fileReferences.moc != null\r\n      ? await this.loadArrayBuffer(this.fileReferences.moc)\r\n      : null;\r\n  }\r\n\r\n  /** CubismPose3Json backing field. */\r\n  @property({ serializable: false })\r\n  private _pose3Json: CubismPose3Json | null = null;\r\n\r\n  /** The contents of pose3.json asset. */\r\n  public async getPose3Json(): Promise<CubismPose3Json | null> {\r\n    if (this._pose3Json != null) {\r\n      return this._pose3Json;\r\n    }\r\n\r\n    const json =\r\n      this.fileReferences.pose.length == 0 ? null : await this.loadJson(this.fileReferences.pose);\r\n    this._pose3Json = json != null ? CubismPose3Json.loadFromJson(json) : null;\r\n    return this._pose3Json;\r\n  }\r\n\r\n  /** Expression3Jsons backing field. */\r\n  @property({ serializable: false })\r\n  private _expression3Jsons: (CubismExp3Json | null)[] | null = null;\r\n\r\n  /**\r\n   * The referenced expression assets.\r\n   *\r\n   * The references aren't cached internally.\r\n   */\r\n  public async getExpression3Jsons(): Promise<(CubismExp3Json | null)[] | null> {\r\n    // Load expression only if necessary.\r\n    if (this._expression3Jsons == null) {\r\n      this._expression3Jsons = new Array<CubismExp3Json>(this.fileReferences.expressions.length);\r\n\r\n      for (let i = 0; i < this._expression3Jsons.length; i++) {\r\n        let expressionJson =\r\n          this.fileReferences.expressions[i].file.length == 0\r\n            ? null\r\n            : await this.loadJson(this.fileReferences.expressions[i].file);\r\n        this._expression3Jsons[i] =\r\n          expressionJson != null ? CubismExp3Json.loadFromJson(expressionJson) : null;\r\n      }\r\n    }\r\n    return this._expression3Jsons;\r\n  }\r\n\r\n  /** The contents of physics3.json asset. */\r\n  public async getPhysics3Json(): Promise<object | null> {\r\n    return isNullOrEmpty(this.fileReferences.physics)\r\n      ? null\r\n      : await this.loadJson(this.fileReferences.physics);\r\n  }\r\n\r\n  public async getUserData3Json(): Promise<object | null> {\r\n    return isNullOrEmpty(this.fileReferences.userData)\r\n      ? null\r\n      : await this.loadJson(this.fileReferences.userData);\r\n  }\r\n\r\n  /** The contents of cdi3.json asset. */\r\n  public async getDisplayInfo3Json(): Promise<object | null> {\r\n    return isNullOrEmpty(this.fileReferences.displayInfo)\r\n      ? null\r\n      : await this.loadJson(this.fileReferences.displayInfo);\r\n  }\r\n\r\n  /** Textures backing field. */\r\n  @property({ serializable: false })\r\n  private _textures: (Texture2D | null)[] | null = null;\r\n\r\n  /**\r\n   * The referenced texture assets.\r\n   *\r\n   * The references aren't cached internally.\r\n   */\r\n  public async getTexture(index: number): Promise<Texture2D | null> {\r\n    // Load textures only if necessary.\r\n    if (this._textures == null) {\r\n      this._textures = new Array<Texture2D | null>(this.fileReferences.textures.length);\r\n      for (let i = 0; i < this._textures.length; i++) {\r\n        this._textures[i] = null;\r\n      }\r\n    }\r\n    this._textures[index] ??= await this.loadTexture(this.fileReferences.textures[index]);\r\n    return this._textures[index];\r\n  }\r\n\r\n  /**\r\n   * Instantiates a model source and a model.\r\n   * @param pickMaterial The material mapper to use.\r\n   * @param pickTexture The texture mapper to use.\r\n   * @param shouldImportAsOriginalWorkflow Should import as original workflow.\r\n   * @returns The instantiated model on success; null otherwise.\r\n   */\r\n  public async toModel(\r\n    args: {\r\n      pickMaterial?: CubismModel3Json.MaterialPicker;\r\n      pickTexture?: CubismModel3Json.TexturePicker;\r\n      shouldImportAsOriginalWorkflow?: boolean;\r\n    } = {}\r\n  ): Promise<CubismModel | null> {\r\n    const shouldImportAsOriginalWorkflow = args.shouldImportAsOriginalWorkflow ?? false;\r\n    const pickMaterial = args.pickMaterial ?? CubismBuiltinPickers.materialPicker;\r\n    const pickTexture = args.pickTexture ?? CubismBuiltinPickers.texturePicker;\r\n\r\n    // Initialize model source and instantiate it.\r\n    const mocAsBytes = await this.getMoc3();\r\n    if (mocAsBytes == null) {\r\n      return null;\r\n    }\r\n\r\n    const moc = CubismMoc.createFrom(mocAsBytes);\r\n\r\n    //Load from cdi3.json\r\n    const displayInfo3Json = await this.getDisplayInfo3Json();\r\n\r\n    // Initialize physics if JSON exists.\r\n    const physics3Json = await this.getPhysics3Json();\r\n\r\n    const userData3Json = await this.getUserData3Json();\r\n\r\n    return CubismModelNodeGenerator.generateModel({\r\n      model3Json: this,\r\n      moc: moc,\r\n      materialPicker: pickMaterial,\r\n      texturePicker: pickTexture,\r\n      displayInfo3Json: displayInfo3Json,\r\n      physics3Json: physics3Json,\r\n      userData3Json: userData3Json,\r\n      shouldImportAsOriginalWorkflow: shouldImportAsOriginalWorkflow,\r\n    });\r\n  }\r\n\r\n  // #region Helper Methods\r\n\r\n  /**\r\n   * Type-safely loads an asset.\r\n   *\r\n   * @param referencedFile Path to asset.\r\n   * @returns The asset on success; null otherwise.\r\n   */\r\n  private async loadJson(referencedFile: string): Promise<object | null> {\r\n    if (this.assetPath != null) {\r\n      const assetPath = path.dirname(this.assetPath) + '/' + referencedFile;\r\n      const asset = (await this.loadAssetAtPath(assetPath, JsonAsset)) as JsonAsset | null;\r\n      return asset?.json ?? null;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Type-safely loads an asset.\r\n   *\r\n   * @param referencedFile Path to asset.\r\n   * @returns The asset on success; null otherwise.\r\n   */\r\n  private async loadArrayBuffer(referencedFile: string): Promise<ArrayBuffer | null> {\r\n    if (this.assetPath != null) {\r\n      const assetPath = path.dirname(this.assetPath) + '/' + referencedFile;\r\n      return (await this.loadAssetAtPath<BufferAsset>(assetPath, BufferAsset))?.buffer() ?? null;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Type-safely loads an asset.\r\n   *\r\n   * @param referencedFile Path to asset.\r\n   * @returns The asset on success; null otherwise.\r\n   */\r\n  private async loadTexture(referencedFile: string): Promise<Texture2D | null> {\r\n    if (this.assetPath != null) {\r\n      const assetPath = path.dirname(this.assetPath) + '/' + referencedFile;\r\n      return this.loadAssetAtPath(assetPath, Texture2D);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Builtin method for loading assets.\r\n   * @param assetPath Path to asset.\r\n   * @returns The asset on success; null otherwise.\r\n   */\r\n  private static builtinAssetAtPath<T extends Asset = Asset>(\r\n    assetPath: string,\r\n    constructor: new (...args: any[]) => T\r\n  ): Promise<T | null> {\r\n    const ext = path.extname(assetPath);\r\n    assetPath = assetPath.substring(0, assetPath.length - ext.length);\r\n    if (constructor == (Texture2D as unknown)) {\r\n      assetPath = path.join(assetPath, 'texture');\r\n    }\r\n    // Explicitly deal with byte arrays.\r\n    const promise = new Promise<T | null>((resolve, reject) => {\r\n      resources.load<T>(assetPath, constructor, (error, asset) => {\r\n        if (error != null) {\r\n          reject(null);\r\n        } else {\r\n          resolve(asset);\r\n        }\r\n      });\r\n    });\r\n    return promise;\r\n  }\r\n\r\n  /**\r\n   * Checks whether the parameter is an eye blink parameter.\r\n   *\r\n   * (forUnity private method)\r\n   * @param parameter Parameter to check.\r\n   * @param groupName Name of group to query for.\r\n   * @returns true if parameter is an eye blink parameter; false otherwise.\r\n   */\r\n  public isParameterInGroup(parameter: CubismParameter, groupName: string): boolean {\r\n    // Return early if groups aren't available...\r\n    if (this.groups == null || this.groups.length == 0) {\r\n      return false;\r\n    }\r\n\r\n    for (let i = 0; i < this.groups.length; i++) {\r\n      const group = this.groups[i];\r\n      if (group.name != groupName) {\r\n        continue;\r\n      }\r\n\r\n      if (group.ids != null) {\r\n        const ids = group.ids;\r\n        for (let j = 0; j < ids.length; j++) {\r\n          if (ids[j] == parameter.node.name) {\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Get body index from body array by Id.\r\n   *\r\n   * (forUnity private method)\r\n   * @param bodies Target body array.\r\n   * @param id Id for find.\r\n   * @returns Array index if Id found; -1 otherwise.\r\n   */\r\n  public getBodyIndexById(bodies: readonly CubismUserDataBody[], id: string): number {\r\n    for (let i = 0; i < bodies.length; i++) {\r\n      if (bodies[i].id == id) {\r\n        return i;\r\n      }\r\n    }\r\n    return -1;\r\n  }\r\n\r\n  // #endregion\r\n}\r\n\r\n// #region Json Helpers\r\n\r\nnamespace CubismModel3Json {\r\n  /** File references data. (struct) */\r\n  export class SerializableFileReferences implements IStructLike<SerializableFileReferences> {\r\n    /** Relative path to the moc3 asset. */\r\n    public readonly moc: string;\r\n    /** Relative paths to texture assets. */\r\n    public readonly textures: string[];\r\n    /** Relative path to the pose3.json. */\r\n    public readonly pose: string;\r\n    /** Relative path to the expression asset. */\r\n    public readonly expressions: SerializableExpression[];\r\n    /** Relative path to the pose motion3.json. */\r\n    public readonly motions: SerializableMotions;\r\n    /** Relative path to the physics asset. */\r\n    public readonly physics: string;\r\n    /** Relative path to the user data asset. */\r\n    public readonly userData: string;\r\n    /** Relative path to the cdi3.json. */\r\n    public readonly displayInfo: string;\r\n\r\n    public constructor(\r\n      args: {\r\n        moc?: string;\r\n        textures?: string[];\r\n        pose?: string;\r\n        expressions?: SerializableExpression[];\r\n        motions?: SerializableMotions;\r\n        physics?: string;\r\n        userData?: string;\r\n        displayInfo?: string;\r\n      } = {}\r\n    ) {\r\n      this.moc = args.moc ?? '';\r\n      this.textures = args.textures ?? new Array();\r\n      this.pose = args.pose ?? '';\r\n      this.expressions = args.expressions ?? new Array();\r\n      this.motions = args.motions ?? SerializableMotions.DEFAULT;\r\n      this.physics = args.physics ?? '';\r\n      this.userData = args.userData ?? '';\r\n      this.displayInfo = args.displayInfo ?? '';\r\n    }\r\n\r\n    public copyWith(\r\n      args: {\r\n        moc?: string;\r\n        textures?: string[];\r\n        pose?: string;\r\n        expressions?: SerializableExpression[];\r\n        motions?: SerializableMotions;\r\n        physics?: string;\r\n        userData?: string;\r\n        displayInfo?: string;\r\n      } = {}\r\n    ): SerializableFileReferences {\r\n      return new SerializableFileReferences({\r\n        moc: args.moc ?? this.moc,\r\n        textures: args.textures ?? this.textures,\r\n        pose: args.pose ?? this.pose,\r\n        expressions: args.expressions ?? this.expressions,\r\n        motions: args.motions ?? this.motions,\r\n        physics: args.physics ?? this.physics,\r\n        userData: args.userData ?? this.userData,\r\n        displayInfo: args.displayInfo ?? this.displayInfo,\r\n      });\r\n    }\r\n\r\n    public equals(other: SerializableFileReferences): boolean {\r\n      return this === other\r\n        ? true\r\n        : this.moc == other.moc &&\r\n            ArrayExtensions.isEquals((x, y) => x == y, this.textures, other.textures) &&\r\n            this.pose == other.pose &&\r\n            ArrayExtensions.isEquals(\r\n              SerializableExpression.isEquals,\r\n              this.expressions,\r\n              other.expressions\r\n            ) &&\r\n            this.motions == other.motions &&\r\n            this.physics == other.physics &&\r\n            this.userData == other.userData &&\r\n            this.displayInfo == other.displayInfo;\r\n    }\r\n\r\n    public strictEquals(other: SerializableFileReferences): boolean {\r\n      return this === other;\r\n    }\r\n\r\n    /**\r\n     * **Required properties**\r\n     * - Moc\r\n     * - Textures\r\n     *\r\n     * **Optional properties**\r\n     * - Pose\r\n     * - Expressions\r\n     * - Motions\r\n     * - Physics\r\n     * - UserData\r\n     * - DisplayInfo\r\n     * @param json\r\n     * @returns\r\n     */\r\n    public static instantiateFromJson(json: object): SerializableFileReferences | null {\r\n      const moc = JsonParseUtils.getString(json, 'Moc');\r\n      const textures = JsonParseUtils.getArray(json, 'Textures');\r\n      if (moc === undefined || textures === undefined) {\r\n        console.error('SerializableFileReferences.instantiateFromJson(): json parsing error.');\r\n        return null;\r\n      }\r\n      if (!textures.every((value: any, i: number, arr: any[]) => JsonParseUtils.isString(value))) {\r\n        console.error('SerializableFileReferences.instantiateFromJson(): json parsing error.');\r\n        return null;\r\n      }\r\n\r\n      const pose = JsonParseUtils.getString(json, 'Pose');\r\n      const tempExp = JsonParseUtils.getArray(json, 'Expressions');\r\n      const expressions =\r\n        tempExp !== undefined\r\n          ? SerializableExpressions.instantiateFromJson(tempExp) ?? undefined\r\n          : undefined;\r\n      const tempMotions = JsonParseUtils.getObject(json, 'Motions');\r\n      const motions =\r\n        tempMotions !== undefined\r\n          ? SerializableMotions.instantiateFromJson(tempMotions) ?? undefined\r\n          : undefined;\r\n      const physics = JsonParseUtils.getString(json, 'Physics');\r\n      const userData = JsonParseUtils.getString(json, 'UserData');\r\n      const displayInfo = JsonParseUtils.getString(json, 'DisplayInfo');\r\n      return new SerializableFileReferences({\r\n        moc: moc,\r\n        textures: textures,\r\n        pose: pose,\r\n        expressions: expressions,\r\n        motions: motions,\r\n        physics: physics,\r\n        userData: userData,\r\n        displayInfo: displayInfo,\r\n      });\r\n    }\r\n  }\r\n\r\n  /** Group data. (struct) */\r\n  export class SerializableGroup implements IStructLike<SerializableGroup> {\r\n    /** Target type. */\r\n    public readonly target: string;\r\n    /** Group name. */\r\n    public readonly name: string;\r\n    /** Referenced IDs. */\r\n    public readonly ids: string[];\r\n\r\n    public constructor(\r\n      args: {\r\n        target?: string;\r\n        name?: string;\r\n        ids?: string[];\r\n      } = {}\r\n    ) {\r\n      this.target = args.target ?? '';\r\n      this.name = args.name ?? '';\r\n      this.ids = args.ids ?? new Array(0);\r\n    }\r\n\r\n    public copyWith(\r\n      args: {\r\n        target?: string;\r\n        name?: string;\r\n        ids?: string[];\r\n      } = {}\r\n    ): SerializableGroup {\r\n      return new SerializableGroup({\r\n        target: args.target ?? this.target,\r\n        name: args.name ?? this.name,\r\n        ids: args.ids ?? this.ids,\r\n      });\r\n    }\r\n\r\n    public equals(other: SerializableGroup): boolean {\r\n      return this === other\r\n        ? true\r\n        : this.target == other.target && this.name == other.name && this.ids == other.ids;\r\n    }\r\n\r\n    public strictEquals(other: SerializableGroup): boolean {\r\n      return this === other;\r\n    }\r\n\r\n    /**\r\n     * **Required properties**\r\n     * - Target\r\n     * - Name\r\n     * - Ids\r\n     * @param json\r\n     * @returns\r\n     */\r\n    public static instantiateFromJson(json: object): SerializableGroup | null {\r\n      const target = JsonParseUtils.getString(json, 'Target');\r\n      const name = JsonParseUtils.getString(json, 'Name');\r\n      const ids = JsonParseUtils.getArray(json, 'Ids');\r\n      if (target === undefined || name === undefined || ids === undefined) {\r\n        console.error(\r\n          'SerializableGroup.instantiateFromJson(): json parsing error. (Target: %s, Name: %s, Ids: %s)',\r\n          target,\r\n          name,\r\n          ids\r\n        );\r\n        return null;\r\n      }\r\n      if (!ids.every((value: any, index: number, array: any[]) => JsonParseUtils.isString(value))) {\r\n        console.error('SerializableGroup.instantiateFromJson(): json parsing error.');\r\n        return null;\r\n      }\r\n      return new SerializableGroup({\r\n        target: target,\r\n        name: name,\r\n        ids: ids,\r\n      });\r\n    }\r\n  }\r\n\r\n  /** Expression data. (struct) */\r\n  export class SerializableExpression implements IStructLike<SerializableExpression> {\r\n    /** Expression Name. */\r\n    public readonly name: string;\r\n    /** Expression File. */\r\n    public readonly file: string;\r\n    /** Expression FadeInTime. */\r\n    public readonly fadeInTime: number;\r\n    /** Expression FadeOutTime. */\r\n    public readonly fadeOutTime: number;\r\n\r\n    public constructor(\r\n      args: {\r\n        name?: string;\r\n        file?: string;\r\n        fadeInTime?: number;\r\n        fadeOutTime?: number;\r\n      } = {}\r\n    ) {\r\n      this.name = args.name ?? '';\r\n      this.file = args.file ?? '';\r\n      this.fadeInTime = args.fadeInTime ?? 0;\r\n      this.fadeOutTime = args.fadeOutTime ?? 0;\r\n    }\r\n\r\n    public copyWith(\r\n      args: {\r\n        name?: string;\r\n        file?: string;\r\n        fadeInTime?: number;\r\n        fadeOutTime?: number;\r\n      } = {}\r\n    ): SerializableExpression {\r\n      return new SerializableExpression({\r\n        name: args.name ?? this.name,\r\n        file: args.file ?? this.file,\r\n        fadeInTime: args.fadeInTime ?? this.fadeInTime,\r\n        fadeOutTime: args.fadeOutTime ?? this.fadeOutTime,\r\n      });\r\n    }\r\n\r\n    public equals(other: SerializableExpression): boolean {\r\n      return this === other\r\n        ? true\r\n        : this.name == other.name &&\r\n            this.file == other.file &&\r\n            this.fadeInTime == this.fadeOutTime &&\r\n            this.fadeOutTime == other.fadeOutTime;\r\n    }\r\n\r\n    public strictEquals(other: SerializableExpression): boolean {\r\n      return this === other;\r\n    }\r\n\r\n    public static isEquals(a: SerializableExpression, b: SerializableExpression) {\r\n      return a.equals(b);\r\n    }\r\n\r\n    /**\r\n     * **Required properties**\r\n     * - Name\r\n     * - File\r\n     *\r\n     * **Optional properties**\r\n     * - FadeInTime\r\n     * - FadeOutTime\r\n     * @param json\r\n     * @returns\r\n     */\r\n    public static instantiateFromJson(json: object): SerializableExpression | null {\r\n      const name = JsonParseUtils.getString(json, 'Name');\r\n      const file = JsonParseUtils.getString(json, 'File');\r\n      if (name === undefined || file === undefined) {\r\n        console.error(\r\n          'SerializableExpression.instantiateFromJson(): json parsing error. (Name: %s, File: %s)',\r\n          name,\r\n          file\r\n        );\r\n        return null;\r\n      }\r\n      const fadeInTime = JsonParseUtils.getNumber(json, 'FadeInTime');\r\n      const fadeOutTime = JsonParseUtils.getNumber(json, 'FadeOutTime');\r\n      return new SerializableExpression({\r\n        name: name,\r\n        file: file,\r\n        fadeInTime: fadeInTime,\r\n        fadeOutTime: fadeOutTime,\r\n      });\r\n    }\r\n  }\r\n\r\n  export namespace SerializableExpressions {\r\n    /**\r\n     *\r\n     * @param json\r\n     * @returns\r\n     */\r\n    export function instantiateFromJson(json: any[]): SerializableExpression[] | null {\r\n      const errorMessage = 'SerializableExpressions.instantiateFromJson(): json parsing error.';\r\n      const expressions = new Array<SerializableExpression>(json.length);\r\n      for (let i = 0; i < json.length; i++) {\r\n        if (!JsonParseUtils.isObject(json[i])) {\r\n          console.error(errorMessage);\r\n          return null;\r\n        }\r\n        const instance = SerializableExpression.instantiateFromJson(json[i]);\r\n        if (instance == null) {\r\n          console.error(errorMessage);\r\n          return null;\r\n        }\r\n        expressions[i] = instance;\r\n      }\r\n      return expressions;\r\n    }\r\n  }\r\n\r\n  /** Motion data. (struct) */\r\n  export class SerializableMotions implements IStructLike<SerializableMotions> {\r\n    public readonly motions = new Map<string, SerializableMotion[]>();\r\n    /** Motion group names. */\r\n    public readonly groupNames: string[];\r\n\r\n    public get(key: string): SerializableMotion[] | null {\r\n      return this.motions.get(key) ?? null;\r\n    }\r\n\r\n    public constructor(\r\n      args: {\r\n        motions?: Map<string, SerializableMotion[]>;\r\n      } = {}\r\n    ) {\r\n      if (args.motions != null) {\r\n        if (!Object.isFrozen(args.motions)) {\r\n          this.motions = new Map<string, SerializableMotion[]>();\r\n          this.groupNames = new Array<string>(args.motions.size);\r\n          let i = 0;\r\n          for (const entry of args.motions.entries()) {\r\n            this.motions.set(entry[0], entry[1]);\r\n            this.groupNames[i++] = entry[0];\r\n          }\r\n          return;\r\n        } else {\r\n          this.motions = args.motions;\r\n          this.groupNames = new Array<string>(args.motions.size);\r\n          let i = 0;\r\n          for (const key of args.motions.keys()) {\r\n            this.groupNames[i++] = key;\r\n          }\r\n        }\r\n      } else {\r\n        this.motions = new Map();\r\n        this.groupNames = new Array(0);\r\n      }\r\n    }\r\n\r\n    public copyWith(\r\n      args: {\r\n        motions?: Map<string, SerializableMotion[]>;\r\n      } = {}\r\n    ): SerializableMotions {\r\n      return new SerializableMotions({\r\n        motions: args.motions ?? this.motions,\r\n      });\r\n    }\r\n\r\n    public equals(other: SerializableMotions): boolean {\r\n      if (this === other) {\r\n        return true;\r\n      }\r\n      if (this.motions === other.motions) {\r\n        return true;\r\n      }\r\n      if (this.motions.size != other.motions.size) {\r\n        return false;\r\n      }\r\n      for (const key of this.motions.keys()) {\r\n        if (this.motions.get(key) != other.motions.get(key)) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n\r\n    public strictEquals(other: SerializableMotions): boolean {\r\n      return this === other;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param json\r\n     * @returns\r\n     */\r\n    public static instantiateFromJson(json: object): SerializableMotions | null {\r\n      const errorMessage = 'SerializableMotions.instantiateFromJson(): json parsing error.';\r\n      const groupNames = Object.keys(json);\r\n      const map = new Map<string, SerializableMotion[]>();\r\n      for (let i = 0; i < groupNames.length; i++) {\r\n        const item = JsonParseUtils.getArray(json, groupNames[i]);\r\n        if (item === undefined) {\r\n          console.error(errorMessage);\r\n          return null;\r\n        }\r\n\r\n        const motion = new Array<SerializableMotion>(item.length);\r\n        for (let j = 0; j < motion.length; j++) {\r\n          if (item[j] == null) {\r\n            console.error(errorMessage);\r\n            return null;\r\n          }\r\n          const input = SerializableMotion.instantiateFromJson(item[j]);\r\n          if (input == null) {\r\n            console.error(errorMessage);\r\n            return null;\r\n          }\r\n          motion[j] = input;\r\n        }\r\n\r\n        map.set(groupNames[i], motion);\r\n      }\r\n      return new SerializableMotions({ motions: map });\r\n    }\r\n  }\r\n\r\n  /** Motion data. (struct) */\r\n  export class SerializableMotion implements IStructLike<SerializableMotion> {\r\n    /** File path. */\r\n    public readonly file: string;\r\n    /** Sound path. */\r\n    public readonly sound: string;\r\n    /** Fade in time. */\r\n    public readonly fadeInTime: number;\r\n    /** Fade out time. */\r\n    public readonly fadeOutTime: number;\r\n\r\n    public constructor(\r\n      args: {\r\n        file?: string;\r\n        sound?: string;\r\n        fadeInTime?: number;\r\n        fadeOutTime?: number;\r\n      } = {}\r\n    ) {\r\n      this.file = args.file ?? '';\r\n      this.sound = args.sound ?? '';\r\n      this.fadeInTime = args.fadeInTime ?? 0;\r\n      this.fadeOutTime = args.fadeOutTime ?? 0;\r\n    }\r\n\r\n    public copyWith(\r\n      args: {\r\n        file?: string;\r\n        sound?: string;\r\n        fadeInTime?: number;\r\n        fadeOutTime?: number;\r\n      } = {}\r\n    ): SerializableMotion {\r\n      return new SerializableMotion({\r\n        file: args.file ?? this.file,\r\n        sound: args.sound ?? this.sound,\r\n        fadeInTime: args.fadeInTime ?? this.fadeInTime,\r\n        fadeOutTime: args.fadeOutTime ?? this.fadeOutTime,\r\n      });\r\n    }\r\n\r\n    public equals(other: SerializableMotion): boolean {\r\n      return this === other\r\n        ? true\r\n        : this.file == other.file &&\r\n            this.sound == other.sound &&\r\n            this.fadeInTime == other.fadeInTime &&\r\n            this.fadeOutTime == other.fadeOutTime;\r\n    }\r\n\r\n    public strictEquals(other: SerializableMotion): boolean {\r\n      return this === other;\r\n    }\r\n\r\n    /**\r\n     * **Required properties**\r\n     * - File\r\n     *\r\n     * **Optional properties**\r\n     * - FadeOutTime\r\n     * - FadeInTime\r\n     * - Sound\r\n     * @param json\r\n     * @returns\r\n     */\r\n    public static instantiateFromJson(json: object): SerializableMotion | null {\r\n      const errorMessage = 'SerializableMotion.instantiateFromJson(): json parsing error.';\r\n      const file = JsonParseUtils.getString(json, 'File');\r\n      if (file === undefined) {\r\n        console.error(errorMessage);\r\n        return null;\r\n      }\r\n      const sound = JsonParseUtils.getString(json, 'Sound');\r\n      const fadeInTime = JsonParseUtils.getNumber(json, 'FadeInTime');\r\n      const fadeOutTime = JsonParseUtils.getNumber(json, 'FadeOutTime');\r\n      return new SerializableMotion({\r\n        file: file,\r\n        sound: sound,\r\n        fadeInTime: fadeInTime,\r\n        fadeOutTime: fadeOutTime,\r\n      });\r\n    }\r\n  }\r\n\r\n  /** Hit Area. (struct) */\r\n  export class SerializableHitArea implements IStructLike<SerializableHitArea> {\r\n    /** Hit area name. */\r\n    public readonly name: string;\r\n    /** Hit area id. */\r\n    public readonly id: string;\r\n\r\n    public constructor(\r\n      args: {\r\n        name?: string;\r\n        id?: string;\r\n      } = {}\r\n    ) {\r\n      this.name = args.name ?? '';\r\n      this.id = args.id ?? '';\r\n    }\r\n\r\n    public copyWith(\r\n      args: {\r\n        name?: string;\r\n        id?: string;\r\n      } = {}\r\n    ): SerializableHitArea {\r\n      return new SerializableHitArea({\r\n        name: args.name ? args.name : this.name,\r\n        id: args.id ? args.id : this.id,\r\n      });\r\n    }\r\n\r\n    public equals(other: SerializableHitArea): boolean {\r\n      return this === other ? true : this.name == other.name && this.id == other.id;\r\n    }\r\n\r\n    public strictEquals(other: SerializableHitArea): boolean {\r\n      return this === other;\r\n    }\r\n\r\n    /**\r\n     * **Required properties**\r\n     * - Name\r\n     * - Id\r\n     * @param json\r\n     * @returns\r\n     */\r\n    public static instantiateFromJson(json: object): SerializableHitArea | null {\r\n      const errorMessage = 'SerializableHitArea.instantiateFromJson(): json parsing error.';\r\n      const name = JsonParseUtils.getString(json, 'Name');\r\n      if (name === undefined) {\r\n        console.error(errorMessage);\r\n        return null;\r\n      }\r\n      const id = JsonParseUtils.getString(json, 'Id');\r\n      if (id === undefined) {\r\n        console.error(errorMessage);\r\n        return null;\r\n      }\r\n      return new SerializableHitArea({\r\n        name: name,\r\n        id: id,\r\n      });\r\n    }\r\n  }\r\n\r\n  export namespace SerializableGroup {\r\n    export const DEFAULT = new SerializableGroup();\r\n  }\r\n  export namespace SerializableExpression {\r\n    export const DEFAULT = new SerializableExpression();\r\n  }\r\n  export namespace SerializableMotions {\r\n    export const DEFAULT = new SerializableMotions();\r\n  }\r\n  export namespace SerializableMotion {\r\n    export const DEFAULT = new SerializableMotion();\r\n  }\r\n  export namespace SerializableHitArea {\r\n    export const DEFAULT = new SerializableHitArea();\r\n  }\r\n}\r\n// #endregion\r\n\r\nexport default CubismModel3Json;\r\n\r\nexport namespace CubismModelNodeGenerator {\r\n  export async function generateModel(args: {\r\n    model3Json: CubismModel3Json;\r\n    moc: CubismMoc;\r\n    materialPicker: CubismModel3Json.MaterialPicker;\r\n    texturePicker: CubismModel3Json.TexturePicker;\r\n    displayInfo3Json?: object | null;\r\n    physics3Json?: object | null;\r\n    userData3Json?: object | null;\r\n    pose3Json?: object | null;\r\n    expList?: CubismExpressionList | null;\r\n    shouldImportAsOriginalWorkflow?: boolean;\r\n  }): Promise<CubismModel | null> {\r\n    const shouldImportAsOriginalWorkflow = args.shouldImportAsOriginalWorkflow ?? false;\r\n\r\n    const model3 = args.model3Json;\r\n\r\n    const model = CubismModel.instantiateFrom(args.moc);\r\n    if (model == null) {\r\n      console.error(\r\n        'CubismModelNodeGenerator.generateModel(): CubismModel.instantiateFrom() failed.'\r\n      );\r\n      return null;\r\n    }\r\n\r\n    model.name = path.basename(model3.fileReferences.moc);\r\n\r\n    // Add parameters and parts inspectors.\r\n    if (EDITOR) {\r\n      model.addComponent(CubismParametersInspector);\r\n      model.addComponent(CubismPartsInspector);\r\n    }\r\n\r\n    // Create renderers.\r\n    const rendererController = Internal.setupCubismRenderController(model);\r\n    console.assert(rendererController);\r\n    console.assert(rendererController!.renderers);\r\n    const renderers = rendererController!.renderers!;\r\n    console.assert(model.drawables);\r\n    const drawables = model.drawables!;\r\n\r\n    await Internal.setupMaterialsAndTextures(\r\n      model3,\r\n      drawables,\r\n      renderers,\r\n      args.materialPicker,\r\n      args.texturePicker\r\n    );\r\n\r\n    // Initialize drawables.\r\n    if (model3.hitAreas != null) {\r\n      Internal.setupHitAreas(drawables, model3);\r\n    }\r\n\r\n    // Load from cdi3.json\r\n    Internal.setupFromDisplayInfo3Json(args.displayInfo3Json ?? null, model, model3);\r\n\r\n    // Add mask controller if required.\r\n    Internal.setupMaskController(model, drawables);\r\n\r\n    // Add original workflow component if is original workflow.\r\n    if (shouldImportAsOriginalWorkflow) {\r\n      Internal.setupOriginalWorkflow(model, args.expList);\r\n    }\r\n\r\n    // Initialize physics if JSON exists.\r\n    if (args.physics3Json != null) {\r\n      Internal.setupPhysicsController(args.physics3Json, model);\r\n    }\r\n\r\n    if (args.pose3Json != null) {\r\n      Internal.setupCubismPosePart(args.pose3Json, model);\r\n    }\r\n\r\n    if (args.userData3Json != null) {\r\n      Internal.setupUserDataTag(args.userData3Json, model3, drawables);\r\n    }\r\n\r\n    Internal.setupAnimationController(model);\r\n    Internal.finalize(model);\r\n    return model;\r\n  }\r\n}\r\n\r\nnamespace Internal {\r\n  export function setupCubismRenderController(\r\n    model: Readonly<CubismModel>\r\n  ): CubismRenderController | null {\r\n    const rendererController = model.addComponent(CubismRenderController);\r\n    console.assert(rendererController);\r\n    // シーン上に存在しないため初期化処理が入らないので無理やり呼び出す。\r\n    if (Reflect.has(rendererController!, 'onEnable')) {\r\n      const func = Reflect.get(rendererController!, 'onEnable') as Function;\r\n      const onEnable = typeof func == 'function' ? (func as Function) : undefined;\r\n      if (onEnable) {\r\n        onEnable.call(rendererController);\r\n      } else {\r\n        console.error(\r\n          'Internal.setupCubismRenderController(): rendererController.onEnable is not function property.'\r\n        );\r\n        return null;\r\n      }\r\n    } else {\r\n      console.error(\r\n        'Internal.setupCubismRenderController(): rendererController.onEnable is undefined.'\r\n      );\r\n      return null;\r\n    }\r\n    return rendererController;\r\n  }\r\n  export async function setupMaterialsAndTextures(\r\n    sender: Readonly<CubismModel3Json>,\r\n    drawables: readonly CubismDrawable[],\r\n    renderers: readonly CubismRenderer[],\r\n    pickMaterial: CubismModel3Json.MaterialPicker,\r\n    pickTexture: CubismModel3Json.TexturePicker\r\n  ) {\r\n    // Initialize materials.\r\n    for (let i = 0; i < renderers.length; i++) {\r\n      renderers[i].material = await pickMaterial(sender as CubismModel3Json, drawables[i]);\r\n    }\r\n\r\n    // Initialize textures.\r\n    for (let i = 0; i < renderers.length; i++) {\r\n      renderers[i].mainTexture = await pickTexture(sender as CubismModel3Json, drawables[i]);\r\n    }\r\n  }\r\n  export function setupHitAreas(\r\n    drawables: readonly CubismDrawable[],\r\n    model3: Readonly<CubismModel3Json>\r\n  ) {\r\n    for (let i = 0; i < model3.hitAreas.length; i++) {\r\n      for (let j = 0; j < drawables.length; j++) {\r\n        if (drawables[j].id == model3.hitAreas[i].id) {\r\n          const hitArea = model3.hitAreas[i];\r\n\r\n          // Add components for hit judgement to HitArea target Drawables.\r\n          const hitDrawable = drawables[j].addComponent(CubismHitDrawable);\r\n          console.assert(hitDrawable != null);\r\n          hitDrawable!.name = hitArea.name;\r\n          const raycastable = drawables[j].addComponent(CubismRaycastable);\r\n          console.assert(raycastable != null);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  export function setupFromDisplayInfo3Json(\r\n    json: object | null,\r\n    model: Readonly<CubismModel>,\r\n    model3: Readonly<CubismModel3Json>\r\n  ) {\r\n    const cdi3Json = CubismDisplayInfo3Json.loadFromJson(json);\r\n\r\n    // Initialize groups.\r\n    console.assert(model.parameters);\r\n    const parameters = model.parameters!;\r\n\r\n    for (let i = 0; i < parameters.length; i++) {\r\n      if (model3.isParameterInGroup(parameters[i], 'EyeBlink')) {\r\n        const eyeBlinkController =\r\n          model.getComponent(CubismEyeBlinkController) ??\r\n          model.addComponent(CubismEyeBlinkController);\r\n        console.assert(eyeBlinkController);\r\n        const eyeBlinkParameter = parameters[i].addComponent(CubismEyeBlinkParameter);\r\n        console.assert(eyeBlinkParameter);\r\n      }\r\n\r\n      // Set up mouth parameters.\r\n      if (model3.isParameterInGroup(parameters[i], 'LipSync')) {\r\n        const mouthController =\r\n          model.getComponent(CubismMouthController) ?? model.addComponent(CubismMouthController);\r\n        console.assert(mouthController);\r\n        const mouthParameter = parameters[i].addComponent(CubismMouthParameter);\r\n        console.assert(mouthParameter);\r\n      }\r\n\r\n      // Setting up the parameter name for display.\r\n      if (cdi3Json != null) {\r\n        const cubismDisplayInfoParameterName = parameters[i].addComponent(\r\n          CubismDisplayInfoParameterName\r\n        );\r\n        console.assert(cubismDisplayInfoParameterName);\r\n        for (let j = 0; j < cdi3Json.parameters.length; j++) {\r\n          if (cdi3Json.parameters[j].id == parameters[i].id) {\r\n            cubismDisplayInfoParameterName!.parameterName = cdi3Json.parameters[j].name;\r\n            break;\r\n          }\r\n        }\r\n        cubismDisplayInfoParameterName!.displayName = '';\r\n      }\r\n    }\r\n\r\n    // Setting up the part name for display.\r\n    if (cdi3Json != null) {\r\n      // Initialize groups.\r\n      console.assert(model.parts);\r\n      const parts = model.parts!;\r\n      for (let i = 0; i < parts.length; i++) {\r\n        const cubismDisplayInfoPartNames = parts[i].addComponent(CubismDisplayInfoPartName);\r\n        console.assert(cubismDisplayInfoPartNames);\r\n        for (let j = 0; j < cdi3Json.parts.length; j++) {\r\n          if (cdi3Json.parts[j].id == parts[i].id) {\r\n            cubismDisplayInfoPartNames!.partName = cdi3Json.parts[j].name;\r\n            break;\r\n          }\r\n        }\r\n        cubismDisplayInfoPartNames!.displayName = '';\r\n      }\r\n    }\r\n  }\r\n  export function setupMaskController(\r\n    model: Readonly<CubismModel>,\r\n    drawables: readonly CubismDrawable[]\r\n  ) {\r\n    if (drawables.some((value, index, array) => value.isMasked)) {\r\n      const maskController = model.addComponent(CubismMaskController);\r\n      console.assert(maskController);\r\n    }\r\n  }\r\n  export function setupOriginalWorkflow(\r\n    model: Readonly<CubismModel>,\r\n    expList?: CubismExpressionList | null\r\n  ) {\r\n    // Add cubism update manager.\r\n    const updateController =\r\n      model.getComponent(CubismUpdateController) ?? model.addComponent(CubismUpdateController);\r\n    console.assert(updateController);\r\n\r\n    // Add parameter store.\r\n    const parameterStore =\r\n      model.getComponent(CubismParameterStore) ?? model.addComponent(CubismParameterStore);\r\n    console.assert(parameterStore);\r\n\r\n    // Add pose controller.\r\n    const poseController =\r\n      model.getComponent(CubismPoseController) ?? model.addComponent(CubismPoseController);\r\n    console.assert(poseController);\r\n\r\n    // Add expression controller.\r\n    const expressionController =\r\n      model.getComponent(CubismExpressionController) ??\r\n      model.addComponent(CubismExpressionController);\r\n    console.assert(expressionController);\r\n    if (expList) {\r\n      expressionController!.expressionsList = expList;\r\n    }\r\n\r\n    // Add fade controller.\r\n    const motionFadeController =\r\n      model.getComponent(CubismFadeController) ?? model.addComponent(CubismFadeController);\r\n    console.assert(motionFadeController);\r\n  }\r\n  export function setupPhysicsController(json: object, model: Readonly<CubismModel>) {\r\n    const physics3Json = CubismPhysics3Json.loadFromJson(json);\r\n    if (physics3Json == null) {\r\n      return;\r\n    }\r\n    const physicsController =\r\n      model.getComponent(CubismPhysicsController) ?? model.addComponent(CubismPhysicsController);\r\n    console.assert(physicsController);\r\n    physicsController!.initialize(physics3Json.toRig());\r\n  }\r\n  export function setupUserDataTag(\r\n    json: object,\r\n    model3: Readonly<CubismModel3Json>,\r\n    drawables: readonly CubismDrawable[]\r\n  ) {\r\n    const userData3Json = CubismUserData3Json.loadFromJson(json);\r\n    if (userData3Json == null) {\r\n      return;\r\n    }\r\n    const drawableBodies = userData3Json.toBodyArray(CubismUserDataTargetType.ArtMesh);\r\n    for (let i = 0; i < drawables.length; i++) {\r\n      const index = model3.getBodyIndexById(drawableBodies, drawables[i].id);\r\n      if (index >= 0) {\r\n        const tag =\r\n          drawables[i].getComponent(CubismUserDataTag) ??\r\n          drawables[i].addComponent(CubismUserDataTag);\r\n        console.assert(tag);\r\n        tag!.initialize(drawableBodies[index]);\r\n      }\r\n    }\r\n  }\r\n  export function setupCubismPosePart(json: object, model: Readonly<CubismModel>) {\r\n    const pose3Json = CubismPose3Json.loadFromJson(json);\r\n    if (pose3Json == null) {\r\n      return;\r\n    }\r\n\r\n    const { parts } = model;\r\n    const { groups } = pose3Json;\r\n\r\n    // Fail silently...\r\n    if (parts == null || groups == null) {\r\n      return;\r\n    }\r\n\r\n    for (let groupIndex = 0; groupIndex < groups.length; groupIndex++) {\r\n      const group = groups[groupIndex];\r\n\r\n      // Fail silently...\r\n      if (group == null) {\r\n        continue;\r\n      }\r\n\r\n      for (let partIndex = 0; partIndex < group.length; partIndex++) {\r\n        const part = ArrayExtensionMethods.findByIdFromParts(parts, group[partIndex].id);\r\n        if (part == null) {\r\n          continue;\r\n        }\r\n        const posePart =\r\n          part.getComponent(CubismPosePart) ??\r\n          (part.addComponent(CubismPosePart) as CubismPosePart);\r\n        console.assert(posePart);\r\n        posePart.groupIndex = groupIndex;\r\n        posePart.partIndex = partIndex;\r\n        posePart.link = group[partIndex].link;\r\n      }\r\n    }\r\n  }\r\n  export function setupAnimationController(model: Readonly<CubismModel>) {\r\n    const animationController =\r\n      model.getComponent(animation.AnimationController) ??\r\n      model.addComponent(animation.AnimationController);\r\n    console.assert(animationController);\r\n  }\r\n  export function finalize(model: Readonly<CubismModel>) {\r\n    // Make sure model is 'fresh'\r\n    model.forceUpdateNow();\r\n  }\r\n}\r\n"]}