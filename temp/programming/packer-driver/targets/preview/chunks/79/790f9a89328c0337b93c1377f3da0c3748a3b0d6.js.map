{"version":3,"sources":["file:///Users/sunjia/project/cocos/NewProject_1/extensions/live2d_cubismsdk_cocoscreator/static/assets/Framework/Physics/CubismPhysicsParticle.ts"],"names":["_decorator","math","property","ccclass","CubismPhysicsParticle","serializable","constructor","args","initialPosition","zero","Vec2","ZERO","clone","mobility","delay","acceleration","radius","position","lastPosition","lastGravity","force","velocity","copyWith","equals","other","strictEquals"],"mappings":";;;;;;;;;;;;;;;;AAOSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,I,OAAAA,I;;;;AAPrB;AACA;AACA;AACA;AACA;AACA;;;;;OAIM;AAAEC,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,O,GAAwBH,U;AAE9B;;yBAEqBI,qB,WADpBD,OAAO,CAAC,uBAAD,C,UAKLD,QAAQ,CAAC;AAAEG,QAAAA,YAAY,EAAE;AAAhB,OAAD,C,UAGRH,QAAQ,CAAC;AAAEG,QAAAA,YAAY,EAAE;AAAhB,OAAD,C,UAGRH,QAAQ,CAAC;AAAEG,QAAAA,YAAY,EAAE;AAAhB,OAAD,C,UAGRH,QAAQ,CAAC;AAAEG,QAAAA,YAAY,EAAE;AAAhB,OAAD,C,UAGRH,QAAQ,CAAC;AAAEG,QAAAA,YAAY,EAAE;AAAhB,OAAD,C,UAGRH,QAAQ,CAAC;AAAEG,QAAAA,YAAY,EAAE;AAAhB,OAAD,C,UAGRH,QAAQ,CAAC;AAAEG,QAAAA,YAAY,EAAE;AAAhB,OAAD,C,UAGRH,QAAQ,CAAC;AAAEG,QAAAA,YAAY,EAAE;AAAhB,OAAD,C,WAGRH,QAAQ,CAAC;AAAEG,QAAAA,YAAY,EAAE;AAAhB,OAAD,C,2BA7BX,MACqBD,qBADrB,CACyF;AA+BhFE,QAAAA,WAAW,CAChBC,IADgB,EAahB;AAAA;;AAAA,cAZAA,IAYA;AAZAA,YAAAA,IAYA,GADI,EACJ;AAAA;;AA3CF;AA2CE,eA1CcC,eA0Cd;;AAzCF;AAyCE;;AAtCF;AAsCE;;AAnCF;AAmCE;;AAhCF;AAgCE;;AA7BF;AA6BE;;AA1BF;AA0BE;;AAvBF;AAuBE;;AApBF;AAoBE;;AAjBF;AAiBE;;AACA,cAAMC,IAAI,GAAGR,IAAI,CAACS,IAAL,CAAUC,IAAV,CAAeC,KAAf,EAAb;AACA,eAAKJ,eAAL,sDAAuBD,IAAI,CAACC,eAA5B,qBAAuB,uBAAsBI,KAAtB,EAAvB,oCAAwDH,IAAxD;AACA,eAAKI,QAAL,qBAAgBN,IAAI,CAACM,QAArB,6BAAiC,CAAjC;AACA,eAAKC,KAAL,kBAAaP,IAAI,CAACO,KAAlB,0BAA2B,CAA3B;AACA,eAAKC,YAAL,yBAAoBR,IAAI,CAACQ,YAAzB,iCAAyC,CAAzC;AACA,eAAKC,MAAL,mBAAcT,IAAI,CAACS,MAAnB,2BAA6B,CAA7B;AACA,eAAKC,QAAL,6CAAgBV,IAAI,CAACU,QAArB,qBAAgB,eAAeL,KAAf,EAAhB,mCAA0CH,IAA1C;AACA,eAAKS,YAAL,kDAAoBX,IAAI,CAACW,YAAzB,qBAAoB,mBAAmBN,KAAnB,EAApB,oCAAkDH,IAAlD;AACA,eAAKU,WAAL,iDAAmBZ,IAAI,CAACY,WAAxB,qBAAmB,kBAAkBP,KAAlB,EAAnB,oCAAgDH,IAAhD;AACA,eAAKW,KAAL,uCAAab,IAAI,CAACa,KAAlB,qBAAa,YAAYR,KAAZ,EAAb,gCAAoCH,IAApC;AACA,eAAKY,QAAL,6CAAgBd,IAAI,CAACc,QAArB,qBAAgB,eAAeT,KAAf,EAAhB,mCAA0CH,IAA1C;AACD;;AAEMa,QAAAA,QAAQ,CACbf,IADa,EAaU;AAAA;;AAAA,cAZvBA,IAYuB;AAZvBA,YAAAA,IAYuB,GADnB,EACmB;AAAA;;AACvB,iBAAO,IAAIH,qBAAJ,CAA0B;AAC/BI,YAAAA,eAAe,4BAAED,IAAI,CAACC,eAAP,qCAA0B,KAAKA,eADf;AAE/BK,YAAAA,QAAQ,qBAAEN,IAAI,CAACM,QAAP,8BAAmB,KAAKA,QAFD;AAG/BC,YAAAA,KAAK,kBAAEP,IAAI,CAACO,KAAP,2BAAgB,KAAKA,KAHK;AAI/BC,YAAAA,YAAY,yBAAER,IAAI,CAACQ,YAAP,kCAAuB,KAAKA,YAJT;AAK/BC,YAAAA,MAAM,mBAAET,IAAI,CAACS,MAAP,4BAAiB,KAAKA,MALG;AAM/BC,YAAAA,QAAQ,qBAAEV,IAAI,CAACU,QAAP,8BAAmB,KAAKA,QAND;AAO/BC,YAAAA,YAAY,yBAAEX,IAAI,CAACW,YAAP,kCAAuB,KAAKA,YAPT;AAQ/BC,YAAAA,WAAW,wBAAEZ,IAAI,CAACY,WAAP,iCAAsB,KAAKA,WARP;AAS/BC,YAAAA,KAAK,kBAAEb,IAAI,CAACa,KAAP,2BAAgB,KAAKA,KATK;AAU/BC,YAAAA,QAAQ,qBAAEd,IAAI,CAACc,QAAP,8BAAmB,KAAKA;AAVD,WAA1B,CAAP;AAYD;;AAEME,QAAAA,MAAM,CAACC,KAAD,EAAwC;AACnD,iBAAO,SAASA,KAAT,GACH,IADG,GAEH,KAAKhB,eAAL,CAAqBe,MAArB,CAA4BC,KAAK,CAAChB,eAAlC,KACE,KAAKK,QAAL,IAAiBW,KAAK,CAACX,QADzB,IAEE,KAAKC,KAAL,IAAcU,KAAK,CAACV,KAFtB,IAGE,KAAKC,YAAL,IAAqBS,KAAK,CAACT,YAH7B,IAIE,KAAKC,MAAL,IAAeQ,KAAK,CAACR,MAJvB,IAKE,KAAKC,QAAL,CAAcM,MAAd,CAAqBC,KAAK,CAACP,QAA3B,CALF,IAME,KAAKC,YAAL,CAAkBK,MAAlB,CAAyBC,KAAK,CAACN,YAA/B,CANF,IAOE,KAAKC,WAAL,CAAiBI,MAAjB,CAAwBC,KAAK,CAACL,WAA9B,CAPF,IAQE,KAAKC,KAAL,CAAWG,MAAX,CAAkBC,KAAK,CAACJ,KAAxB,CARF,IASE,KAAKC,QAAL,CAAcE,MAAd,CAAqBC,KAAK,CAACH,QAA3B,CAXN;AAYD;;AAEMI,QAAAA,YAAY,CAACD,KAAD,EAAwC;AACzD,iBAAO,SAASA,KAAhB;AACD;;AAvGsF,O;;;;;iBAKpD,C;;;;;;;iBAGH,C;;;;;;;iBAGO,C;;;;;;;iBAGN,C;;;;;;;iBAGKvB,IAAI,CAACS,IAAL,CAAUC,IAAV,CAAeC,KAAf,E;;;;;;;iBAGIX,IAAI,CAACS,IAAL,CAAUC,IAAV,CAAeC,KAAf,E;;;;;;;iBAGDX,IAAI,CAACS,IAAL,CAAUC,IAAV,CAAeC,KAAf,E;;;;;;;iBAGNX,IAAI,CAACS,IAAL,CAAUC,IAAV,CAAeC,KAAf,E;;;;;;;iBAGGX,IAAI,CAACS,IAAL,CAAUC,IAAV,CAAeC,KAAf,E","sourcesContent":["/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { _decorator, math } from 'cc';\r\nimport type IStructLike from '../../IStructLike';\r\nconst { property, ccclass } = _decorator;\r\n\r\n/** Vertex data of physics. (struct) */\r\n@ccclass('CubismPhysicsParticle')\r\nexport default class CubismPhysicsParticle implements IStructLike<CubismPhysicsParticle> {\r\n  /** Initial position. */\r\n  public readonly initialPosition: math.Vec2;\r\n  /** Mobility ratio. */\r\n  @property({ serializable: true })\r\n  public readonly mobility: number = 0;\r\n  /** Delay ratio. */\r\n  @property({ serializable: true })\r\n  public readonly delay: number = 0;\r\n  /** Current acceleration. */\r\n  @property({ serializable: true })\r\n  public readonly acceleration: number = 0;\r\n  /** Length of radius. */\r\n  @property({ serializable: true })\r\n  public readonly radius: number = 0;\r\n  /** Current position. (NonSerialized) */\r\n  @property({ serializable: false })\r\n  public readonly position: math.Vec2 = math.Vec2.ZERO.clone();\r\n  /** Last position. (NonSerialized) */\r\n  @property({ serializable: false })\r\n  public readonly lastPosition: math.Vec2 = math.Vec2.ZERO.clone();\r\n  /** Last gravity. (NonSerialized) */\r\n  @property({ serializable: false })\r\n  public readonly lastGravity: math.Vec2 = math.Vec2.ZERO.clone();\r\n  /** Current force. (NonSerialized) */\r\n  @property({ serializable: false })\r\n  public readonly force: math.Vec2 = math.Vec2.ZERO.clone();\r\n  /** Current velocity. (NonSerialized) */\r\n  @property({ serializable: false })\r\n  public readonly velocity: math.Vec2 = math.Vec2.ZERO.clone();\r\n\r\n  public constructor(\r\n    args: {\r\n      initialPosition?: Readonly<math.Vec2>;\r\n      mobility?: number;\r\n      delay?: number;\r\n      acceleration?: number;\r\n      radius?: number;\r\n      position?: Readonly<math.Vec2>;\r\n      lastPosition?: Readonly<math.Vec2>;\r\n      lastGravity?: Readonly<math.Vec2>;\r\n      force?: Readonly<math.Vec2>;\r\n      velocity?: Readonly<math.Vec2>;\r\n    } = {}\r\n  ) {\r\n    const zero = math.Vec2.ZERO.clone();\r\n    this.initialPosition = args.initialPosition?.clone() ?? zero;\r\n    this.mobility = args.mobility ?? 0;\r\n    this.delay = args.delay ?? 0;\r\n    this.acceleration = args.acceleration ?? 0;\r\n    this.radius = args.radius ?? 0;\r\n    this.position = args.position?.clone() ?? zero;\r\n    this.lastPosition = args.lastPosition?.clone() ?? zero;\r\n    this.lastGravity = args.lastGravity?.clone() ?? zero;\r\n    this.force = args.force?.clone() ?? zero;\r\n    this.velocity = args.velocity?.clone() ?? zero;\r\n  }\r\n\r\n  public copyWith(\r\n    args: {\r\n      initialPosition?: Readonly<math.Vec2>;\r\n      mobility?: number;\r\n      delay?: number;\r\n      acceleration?: number;\r\n      radius?: number;\r\n      position?: Readonly<math.Vec2>;\r\n      lastPosition?: Readonly<math.Vec2>;\r\n      lastGravity?: Readonly<math.Vec2>;\r\n      force?: Readonly<math.Vec2>;\r\n      velocity?: Readonly<math.Vec2>;\r\n    } = {}\r\n  ): CubismPhysicsParticle {\r\n    return new CubismPhysicsParticle({\r\n      initialPosition: args.initialPosition ?? this.initialPosition,\r\n      mobility: args.mobility ?? this.mobility,\r\n      delay: args.delay ?? this.delay,\r\n      acceleration: args.acceleration ?? this.acceleration,\r\n      radius: args.radius ?? this.radius,\r\n      position: args.position ?? this.position,\r\n      lastPosition: args.lastPosition ?? this.lastPosition,\r\n      lastGravity: args.lastGravity ?? this.lastGravity,\r\n      force: args.force ?? this.force,\r\n      velocity: args.velocity ?? this.velocity,\r\n    });\r\n  }\r\n\r\n  public equals(other: CubismPhysicsParticle): boolean {\r\n    return this === other\r\n      ? true\r\n      : this.initialPosition.equals(other.initialPosition) &&\r\n          this.mobility == other.mobility &&\r\n          this.delay == other.delay &&\r\n          this.acceleration == other.acceleration &&\r\n          this.radius == other.radius &&\r\n          this.position.equals(other.position) &&\r\n          this.lastPosition.equals(other.lastPosition) &&\r\n          this.lastGravity.equals(other.lastGravity) &&\r\n          this.force.equals(other.force) &&\r\n          this.velocity.equals(other.velocity);\r\n  }\r\n\r\n  public strictEquals(other: CubismPhysicsParticle): boolean {\r\n    return this === other;\r\n  }\r\n}\r\n"]}